2025-07-10 12:16:26,258 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:26,272 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 135.7s ago] ('E3BAA208-BB42-49C5-9E72-D7702308F471', 1, 0)
2025-07-10 12:16:26,277 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:26,277 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 2 items
2025-07-10 12:16:26,280 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:26,280 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:26,288 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 135.7s ago] ('sku_858782d0_50202201_indio_1x1_brr_20l', 1, 0)
2025-07-10 12:16:26,288 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:26,288 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_858782d0_50202201_indio_1x1_brr_20l
2025-07-10 12:16:27,979 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Cerveza
2025-07-10 12:16:27,979 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Cerveza (units_per_package: 1.0)
2025-07-10 12:16:27,986 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:27,986 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:27,986 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 137.4s ago] ('sku_4044bfc3_24122000_env_generico_ccm_b16', 1, 0)
2025-07-10 12:16:27,995 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:27,995 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_4044bfc3_24122000_env_generico_ccm_b16
2025-07-10 12:16:29,706 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Otros-a
2025-07-10 12:16:29,706 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Otros-a (units_per_package: 1.0)
2025-07-10 12:16:29,714 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 12:16:29,714 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 12:16:29,714 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 12:16:29,722 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process E3BAA208-BB42-49C5-9E72-D7702308F471.xml: Failed to save invoice to database
2025-07-10 12:16:29,730 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:29,730 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 12:16:29,738 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 137s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process E3BAA208-BB42-49C5-9E72-D7702308F471.xml', '{"filename": "E3BAA208-BB42-49C5-9E72-D7702308F471.xml", "processing_time": 3.4818596839904785, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 3.4818596839904785, None, 'E3BAA208-BB42-49C5-9E72-D7702308F471.xml', None, '2025-07-10 19:16:29.730268')
2025-07-10 12:16:29,749 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:29,764 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved E3BAA208-BB42-49C5-9E72-D7702308F471.xml to data/failed
2025-07-10 12:16:29,766 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 12:16:29,767 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml (78/89)
2025-07-10 12:16:29,771 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 12:16:29,773 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml
2025-07-10 12:16:29,774 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml
2025-07-10 12:16:29,781 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 12:16:29,782 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4
2025-07-10 12:16:29,785 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:29,788 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:29,793 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 139.3s ago] ('E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4', 1, 0)
2025-07-10 12:16:29,795 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4 already exists (ID: 107)
2025-07-10 12:16:29,797 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml
2025-07-10 12:16:29,798 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml
2025-07-10 12:16:29,799 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-08 00:00:00
2025-07-10 12:16:29,801 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1257.28
2025-07-10 12:16:29,803 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:29,806 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:29,811 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:29,816 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 139.3s ago] ('E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4', 1, 0)
2025-07-10 12:16:29,818 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 12:16:29,819 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4
2025-07-10 12:16:29,820 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml (ID: 107)
2025-07-10 12:16:29,822 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml
2025-07-10 12:16:29,823 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $1257.28 vs $1257.28
2025-07-10 12:16:29,825 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 12:16:29,830 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:29,832 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:29,836 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 12:16:29,838 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 137.1s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml', '{"filename": "E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml", "processing_time": 0.05809617042541504, "item_count": 0, "success": false, "error": "DUPLICATE: UUID E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4 already exists"}', 0.05809617042541504, None, 'E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml', None, '2025-07-10 19:16:29.835996')
2025-07-10 12:16:29,849 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:29,863 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml - moved to failed directory
2025-07-10 12:16:29,866 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml to data/failed
2025-07-10 12:16:29,867 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 12:16:29,869 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing E507A17F-A130-4C08-8B4F-0FD300D02C85.xml (79/89)
2025-07-10 12:16:29,870 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 12:16:29,872 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: E507A17F-A130-4C08-8B4F-0FD300D02C85.xml
2025-07-10 12:16:29,873 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: E507A17F-A130-4C08-8B4F-0FD300D02C85.xml
2025-07-10 12:16:29,879 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 12:16:29,883 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: E507A17F-A130-4C08-8B4F-0FD300D02C85
2025-07-10 12:16:29,883 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:29,883 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:29,894 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 139.4s ago] ('E507A17F-A130-4C08-8B4F-0FD300D02C85', 1, 0)
2025-07-10 12:16:29,899 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:29,899 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 1 items
2025-07-10 12:16:29,907 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:29,907 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:29,915 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 139.4s ago] ('sku_8fb2706b_81112221_poliza_de_soporte_remoto_intermedia_mens', 1, 0)
2025-07-10 12:16:29,915 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:29,915 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_8fb2706b_81112221_poliza_de_soporte_remoto_intermedia_mens
2025-07-10 12:16:31,100 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Gastos Generales -> Servicios Administrativos
2025-07-10 12:16:31,108 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Gastos Generales -> Servicios Administrativos (units_per_package: 1.0)
2025-07-10 12:16:31,116 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 12:16:31,118 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 12:16:31,124 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 12:16:31,125 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process E507A17F-A130-4C08-8B4F-0FD300D02C85.xml: Failed to save invoice to database
2025-07-10 12:16:31,133 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:31,133 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 12:16:31,133 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 138.4s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process E507A17F-A130-4C08-8B4F-0FD300D02C85.xml', '{"filename": "E507A17F-A130-4C08-8B4F-0FD300D02C85.xml", "processing_time": 1.2532176971435547, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 1.2532176971435547, None, 'E507A17F-A130-4C08-8B4F-0FD300D02C85.xml', None, '2025-07-10 19:16:31.133154')
2025-07-10 12:16:31,141 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:31,158 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved E507A17F-A130-4C08-8B4F-0FD300D02C85.xml to data/failed
2025-07-10 12:16:31,158 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 12:16:31,158 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml (80/89)
2025-07-10 12:16:31,158 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 12:16:31,165 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml
2025-07-10 12:16:31,165 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml
2025-07-10 12:16:31,173 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 12:16:31,173 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: E6BB6F45-D94E-4A27-97B8-BA5474658B2D
2025-07-10 12:16:31,173 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:31,182 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:31,182 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 140.7s ago] ('E6BB6F45-D94E-4A27-97B8-BA5474658B2D', 1, 0)
2025-07-10 12:16:31,190 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID E6BB6F45-D94E-4A27-97B8-BA5474658B2D already exists (ID: 108)
2025-07-10 12:16:31,190 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml
2025-07-10 12:16:31,190 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml
2025-07-10 12:16:31,198 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-02 00:00:00
2025-07-10 12:16:31,198 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1695.20
2025-07-10 12:16:31,198 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:31,198 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:31,206 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:31,214 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 140.7s ago] ('E6BB6F45-D94E-4A27-97B8-BA5474658B2D', 1, 0)
2025-07-10 12:16:31,214 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 12:16:31,214 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: E6BB6F45-D94E-4A27-97B8-BA5474658B2D
2025-07-10 12:16:31,222 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml (ID: 108)
2025-07-10 12:16:31,225 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml
2025-07-10 12:16:31,225 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $1695.20 vs $1695.20
2025-07-10 12:16:31,231 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 12:16:31,231 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:31,231 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:31,231 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 12:16:31,239 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 138.5s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml', '{"filename": "E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml", "processing_time": 0.06544113159179688, "item_count": 0, "success": false, "error": "DUPLICATE: UUID E6BB6F45-D94E-4A27-97B8-BA5474658B2D already exists"}', 0.06544113159179688, None, 'E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml', None, '2025-07-10 19:16:31.231081')
2025-07-10 12:16:31,247 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:31,263 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml - moved to failed directory
2025-07-10 12:16:31,263 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml to data/failed
2025-07-10 12:16:31,263 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 12:16:31,263 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml (81/89)
2025-07-10 12:16:31,271 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 12:16:31,275 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml
2025-07-10 12:16:31,279 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml
2025-07-10 12:16:31,287 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 12:16:31,287 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: EB705A95-CDFF-4226-A6BA-0A99E68D321B
2025-07-10 12:16:31,287 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:31,295 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:31,295 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 140.8s ago] ('EB705A95-CDFF-4226-A6BA-0A99E68D321B', 1, 0)
2025-07-10 12:16:31,303 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID EB705A95-CDFF-4226-A6BA-0A99E68D321B already exists (ID: 109)
2025-07-10 12:16:31,303 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml
2025-07-10 12:16:31,303 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml
2025-07-10 12:16:31,311 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-09 00:00:00
2025-07-10 12:16:31,311 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2926.04
2025-07-10 12:16:31,311 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:31,319 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:31,319 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:31,327 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 140.8s ago] ('EB705A95-CDFF-4226-A6BA-0A99E68D321B', 1, 0)
2025-07-10 12:16:31,327 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 12:16:31,335 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: EB705A95-CDFF-4226-A6BA-0A99E68D321B
2025-07-10 12:16:31,335 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml (ID: 109)
2025-07-10 12:16:31,335 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml
2025-07-10 12:16:31,335 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $2926.04 vs $2926.04
2025-07-10 12:16:31,343 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 12:16:31,343 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:31,343 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:31,353 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 12:16:31,353 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 138.6s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml', '{"filename": "EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml", "processing_time": 0.06802010536193848, "item_count": 0, "success": false, "error": "DUPLICATE: UUID EB705A95-CDFF-4226-A6BA-0A99E68D321B already exists"}', 0.06802010536193848, None, 'EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml', None, '2025-07-10 19:16:31.351629')
2025-07-10 12:16:31,363 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:31,375 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml - moved to failed directory
2025-07-10 12:16:31,375 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml to data/failed
2025-07-10 12:16:31,375 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 12:16:31,383 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing EFCD0679-9CE8-400D-8869-9B9D2C51DE62.xml (82/89)
2025-07-10 12:16:31,383 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 12:16:31,383 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: EFCD0679-9CE8-400D-8869-9B9D2C51DE62.xml
2025-07-10 12:16:31,383 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: EFCD0679-9CE8-400D-8869-9B9D2C51DE62.xml
2025-07-10 12:16:31,391 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 12:16:31,391 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: EFCD0679-9CE8-400D-8869-9B9D2C51DE62
2025-07-10 12:16:31,399 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:31,399 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:31,406 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 140.9s ago] ('EFCD0679-9CE8-400D-8869-9B9D2C51DE62', 1, 0)
2025-07-10 12:16:31,412 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:31,412 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 1 items
2025-07-10 12:16:31,418 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:31,419 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:31,423 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 140.9s ago] ('sku_e3b92121_81141601_servicios_integrales_de_logistica_v0', 1, 0)
2025-07-10 12:16:31,425 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:31,431 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_e3b92121_81141601_servicios_integrales_de_logistica_v0
2025-07-10 12:16:32,975 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Gastos Generales -> Fletes y acarreos
2025-07-10 12:16:32,975 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Gastos Generales -> Fletes y acarreos (units_per_package: 1.0)
2025-07-10 12:16:32,975 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 12:16:32,981 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 12:16:32,983 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 12:16:32,983 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process EFCD0679-9CE8-400D-8869-9B9D2C51DE62.xml: Failed to save invoice to database
2025-07-10 12:16:32,983 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:32,991 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 12:16:32,991 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 140.3s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process EFCD0679-9CE8-400D-8869-9B9D2C51DE62.xml', '{"filename": "EFCD0679-9CE8-400D-8869-9B9D2C51DE62.xml", "processing_time": 1.5999200344085693, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 1.5999200344085693, None, 'EFCD0679-9CE8-400D-8869-9B9D2C51DE62.xml', None, '2025-07-10 19:16:32.991806')
2025-07-10 12:16:33,000 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:33,017 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved EFCD0679-9CE8-400D-8869-9B9D2C51DE62.xml to data/failed
2025-07-10 12:16:33,017 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 12:16:33,017 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml (83/89)
2025-07-10 12:16:33,017 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 12:16:33,017 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml
2025-07-10 12:16:33,025 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml
2025-07-10 12:16:33,034 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 12:16:33,034 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9
2025-07-10 12:16:33,042 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:33,048 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:33,052 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 142.5s ago] ('F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9', 1, 0)
2025-07-10 12:16:33,057 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9 already exists (ID: 110)
2025-07-10 12:16:33,057 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml
2025-07-10 12:16:33,061 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml
2025-07-10 12:16:33,065 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-20 00:00:00
2025-07-10 12:16:33,065 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1986.48
2025-07-10 12:16:33,065 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:33,065 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:33,075 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:33,082 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 142.6s ago] ('F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9', 1, 0)
2025-07-10 12:16:33,082 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 12:16:33,082 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9
2025-07-10 12:16:33,090 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml (ID: 110)
2025-07-10 12:16:33,090 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml
2025-07-10 12:16:33,098 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $1986.48 vs $1986.48
2025-07-10 12:16:33,099 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 12:16:33,099 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:33,099 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:33,099 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 12:16:33,107 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 140.4s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml', '{"filename": "F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml", "processing_time": 0.08197283744812012, "item_count": 0, "success": false, "error": "DUPLICATE: UUID F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9 already exists"}', 0.08197283744812012, None, 'F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml', None, '2025-07-10 19:16:33.099013')
2025-07-10 12:16:33,115 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:33,123 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml - moved to failed directory
2025-07-10 12:16:33,131 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml to data/failed
2025-07-10 12:16:33,131 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 12:16:33,131 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml (84/89)
2025-07-10 12:16:33,131 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 12:16:33,131 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml
2025-07-10 12:16:33,131 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml
2025-07-10 12:16:33,139 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 12:16:33,148 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: FBDD0E56-11A1-49B9-95C2-FD243E95986B
2025-07-10 12:16:33,148 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:33,148 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:33,157 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 142.6s ago] ('FBDD0E56-11A1-49B9-95C2-FD243E95986B', 1, 0)
2025-07-10 12:16:33,157 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:33,165 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 21 items
2025-07-10 12:16:33,165 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_4d8ff92b_50404600_lechuga_bola
2025-07-10 12:16:33,165 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_5a200fb8_50131800_queso_cheddar_cheddar_fuerte
2025-07-10 12:16:33,165 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_bd6f7e4b_50112010_pierna_de_pollo
2025-07-10 12:16:33,173 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_6b45f921_50404600_lechuga_romana_baby
2025-07-10 12:16:33,175 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_f6ce5c99_50404600_lechuga_mixta
2025-07-10 12:16:33,179 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_11cd495e_50401700_aguacate
2025-07-10 12:16:33,182 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_70ae329c_50301500_manzana_verde
2025-07-10 12:16:33,182 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_4770c1ef_50402800_acelga
2025-07-10 12:16:33,182 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_75903dde_50404803_champiñon
2025-07-10 12:16:33,189 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_15acbdb3_50404125_tomillo
2025-07-10 12:16:33,189 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_b3f78bc6_50401806_frijol_pinto
2025-07-10 12:16:33,189 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_5ac938a8_50221300_tortilla_maiz
2025-07-10 12:16:33,198 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_d2926dd5_50131800_queso_asadero
2025-07-10 12:16:33,198 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_07ae298e_50304100_limon_amarillo
2025-07-10 12:16:33,198 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:33,206 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:33,215 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 142.7s ago] ('sku_ffcedf08_50202301_agua_tonica', 1, 0)
2025-07-10 12:16:33,215 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:33,215 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_ffcedf08_50202301_agua_tonica
2025-07-10 12:16:34,721 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Refrescos
2025-07-10 12:16:34,721 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Refrescos (units_per_package: 1.0)
2025-07-10 12:16:34,721 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_141a86f5_10161506_naranja
2025-07-10 12:16:34,729 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg
2025-07-10 12:16:34,729 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:34,729 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:34,738 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 144.2s ago] ('sku_7a192569_50131800_queso_cheddar_cheddar_suave', 1, 0)
2025-07-10 12:16:34,746 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:34,746 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_7a192569_50131800_queso_cheddar_cheddar_suave
2025-07-10 12:16:36,593 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Queso
2025-07-10 12:16:36,593 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Queso (units_per_package: 1.0)
2025-07-10 12:16:36,593 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:36,601 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:36,601 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 146.1s ago] ('sku_f3336f27_50191500_sopa_barilla_codo_500gr', 1, 0)
2025-07-10 12:16:36,609 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:36,611 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_f3336f27_50191500_sopa_barilla_codo_500gr
2025-07-10 12:16:38,101 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Otros-a
2025-07-10 12:16:38,101 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Otros-a (units_per_package: 1.0)
2025-07-10 12:16:38,101 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_8f28f7c7_50402300_repollo_verde
2025-07-10 12:16:38,101 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:38,109 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:38,109 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 147.6s ago] ('sku_3a5d684a_15101605_carbon_agranel', 1, 0)
2025-07-10 12:16:38,109 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_3a5d684a_15101605_carbon_agranel -> Abarrotes
2025-07-10 12:16:38,117 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 12:16:38,117 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 147.6s ago] (2, '2025-07-10 19:16:38.109504', 39)
2025-07-10 12:16:38,125 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:38,134 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 12:16:38,134 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 12:16:38,134 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 12:16:38,142 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml: Failed to save invoice to database
2025-07-10 12:16:38,142 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:38,142 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 12:16:38,142 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 145.4s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml', '{"filename": "FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml", "processing_time": 5.011209964752197, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 5.011209964752197, None, 'FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml', None, '2025-07-10 19:16:38.142610')
2025-07-10 12:16:38,150 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:38,158 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml to data/failed
2025-07-10 12:16:38,166 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 12:16:38,166 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml (85/89)
2025-07-10 12:16:38,166 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 12:16:38,166 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml
2025-07-10 12:16:38,166 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml
2025-07-10 12:16:38,174 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 12:16:38,174 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: FDE6B84B-D0D2-481D-9F46-749D780FFFEE
2025-07-10 12:16:38,182 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:38,218 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:38,289 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 147.8s ago] ('FDE6B84B-D0D2-481D-9F46-749D780FFFEE', 1, 0)
2025-07-10 12:16:38,322 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:38,330 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 12 items
2025-07-10 12:16:38,330 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_3823c19d_50405300_cebolla_blanca
2025-07-10 12:16:38,330 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:38,330 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:38,338 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 147.8s ago] ('sku_6d2191f9_50221303_maicena_425gr', 1, 0)
2025-07-10 12:16:38,338 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:38,338 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_6d2191f9_50221303_maicena_425gr
2025-07-10 12:16:39,768 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Harinas
2025-07-10 12:16:39,768 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Harinas (units_per_package: 1.0)
2025-07-10 12:16:39,775 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_d466594e_50405700_papa_russet
2025-07-10 12:16:39,775 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_dd599020_50161509_azucar
2025-07-10 12:16:39,779 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_547ba3ea_50171551_sal_la_fina
2025-07-10 12:16:39,780 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_f355fb89_50403800_ajo
2025-07-10 12:16:39,780 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:39,784 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:39,791 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 149.2s ago] ('sku_b8e71b2d_50101700_almendra', 1, 0)
2025-07-10 12:16:39,791 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:39,791 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_b8e71b2d_50101700_almendra
2025-07-10 12:16:40,895 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Nueces y Semillas
2025-07-10 12:16:40,898 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Nueces y Semillas (units_per_package: 1.0)
2025-07-10 12:16:40,898 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_65d00f8a_50404101_albahaca
2025-07-10 12:16:40,898 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_80bf8a82_50401900_betabel
2025-07-10 12:16:40,904 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_822118da_50101717_nuez
2025-07-10 12:16:40,904 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_00d189e9_50193105_panco
2025-07-10 12:16:40,904 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_bd6f7e4b_50112010_pierna_de_pollo
2025-07-10 12:16:40,904 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 12:16:40,912 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 12:16:40,913 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 12:16:40,913 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml: Failed to save invoice to database
2025-07-10 12:16:40,920 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:40,920 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 12:16:40,929 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 148.2s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml', '{"filename": "FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml", "processing_time": 2.747267723083496, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 2.747267723083496, None, 'FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml', None, '2025-07-10 19:16:40.920457')
2025-07-10 12:16:40,936 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:40,945 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml to data/failed
2025-07-10 12:16:40,945 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 12:16:40,945 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing c82b2675-beff-4470-ba00-d74bacfe06ee.xml (86/89)
2025-07-10 12:16:40,953 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 12:16:40,954 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: c82b2675-beff-4470-ba00-d74bacfe06ee.xml
2025-07-10 12:16:40,955 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: c82b2675-beff-4470-ba00-d74bacfe06ee.xml
2025-07-10 12:16:40,961 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 12:16:40,961 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: c82b2675-beff-4470-ba00-d74bacfe06ee
2025-07-10 12:16:40,961 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:40,961 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:40,971 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 150.4s ago] ('c82b2675-beff-4470-ba00-d74bacfe06ee', 1, 0)
2025-07-10 12:16:40,971 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID c82b2675-beff-4470-ba00-d74bacfe06ee already exists (ID: 111)
2025-07-10 12:16:40,971 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: c82b2675-beff-4470-ba00-d74bacfe06ee.xml
2025-07-10 12:16:40,977 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: c82b2675-beff-4470-ba00-d74bacfe06ee.xml
2025-07-10 12:16:40,977 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 00:00:00
2025-07-10 12:16:40,977 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $10815.55
2025-07-10 12:16:40,985 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:40,985 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:40,985 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:40,993 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 150.5s ago] ('c82b2675-beff-4470-ba00-d74bacfe06ee', 1, 0)
2025-07-10 12:16:40,993 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 12:16:41,001 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: c82b2675-beff-4470-ba00-d74bacfe06ee
2025-07-10 12:16:41,001 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: c82b2675-beff-4470-ba00-d74bacfe06ee.xml (ID: 111)
2025-07-10 12:16:41,001 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  c82b2675-beff-4470-ba00-d74bacfe06ee.xml
2025-07-10 12:16:41,001 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $10815.55 vs $10815.55
2025-07-10 12:16:41,010 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 12:16:41,010 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:41,010 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:41,019 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 12:16:41,019 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 148.3s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process c82b2675-beff-4470-ba00-d74bacfe06ee.xml', '{"filename": "c82b2675-beff-4470-ba00-d74bacfe06ee.xml", "processing_time": 0.056594133377075195, "item_count": 0, "success": false, "error": "DUPLICATE: UUID c82b2675-beff-4470-ba00-d74bacfe06ee already exists"}', 0.056594133377075195, None, 'c82b2675-beff-4470-ba00-d74bacfe06ee.xml', None, '2025-07-10 19:16:41.019415')
2025-07-10 12:16:41,034 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:41,042 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice c82b2675-beff-4470-ba00-d74bacfe06ee.xml - moved to failed directory
2025-07-10 12:16:41,042 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved c82b2675-beff-4470-ba00-d74bacfe06ee.xml to data/failed
2025-07-10 12:16:41,050 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 12:16:41,050 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml (87/89)
2025-07-10 12:16:41,053 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 12:16:41,053 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml
2025-07-10 12:16:41,053 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml
2025-07-10 12:16:41,059 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 12:16:41,059 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: d2799f2a-5efd-46a3-90cf-e3f41a6c1a43
2025-07-10 12:16:41,067 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:41,070 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:41,075 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 150.6s ago] ('d2799f2a-5efd-46a3-90cf-e3f41a6c1a43', 1, 0)
2025-07-10 12:16:41,075 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID d2799f2a-5efd-46a3-90cf-e3f41a6c1a43 already exists (ID: 112)
2025-07-10 12:16:41,075 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml
2025-07-10 12:16:41,083 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml
2025-07-10 12:16:41,083 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-18 00:00:00
2025-07-10 12:16:41,083 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2900.00
2025-07-10 12:16:41,091 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:41,091 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:41,091 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:41,100 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 150.6s ago] ('d2799f2a-5efd-46a3-90cf-e3f41a6c1a43', 1, 0)
2025-07-10 12:16:41,107 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 12:16:41,107 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: d2799f2a-5efd-46a3-90cf-e3f41a6c1a43
2025-07-10 12:16:41,109 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml (ID: 112)
2025-07-10 12:16:41,109 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml
2025-07-10 12:16:41,109 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $2900.00 vs $2900.00
2025-07-10 12:16:41,109 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 12:16:41,115 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:41,115 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:41,123 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 12:16:41,123 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 148.4s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml', '{"filename": "d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml", "processing_time": 0.06214261054992676, "item_count": 0, "success": false, "error": "DUPLICATE: UUID d2799f2a-5efd-46a3-90cf-e3f41a6c1a43 already exists"}', 0.06214261054992676, None, 'd2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml', None, '2025-07-10 19:16:41.123802')
2025-07-10 12:16:41,132 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:41,148 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml - moved to failed directory
2025-07-10 12:16:41,148 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml to data/failed
2025-07-10 12:16:41,148 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 12:16:41,156 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing db7ca908-83b2-49ab-8c86-649a9b9ba470.xml (88/89)
2025-07-10 12:16:41,156 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 12:16:41,156 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: db7ca908-83b2-49ab-8c86-649a9b9ba470.xml
2025-07-10 12:16:41,156 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: db7ca908-83b2-49ab-8c86-649a9b9ba470.xml
2025-07-10 12:16:41,164 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 12:16:41,164 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: db7ca908-83b2-49ab-8c86-649a9b9ba470
2025-07-10 12:16:41,174 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:41,175 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:41,181 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 150.7s ago] ('db7ca908-83b2-49ab-8c86-649a9b9ba470', 1, 0)
2025-07-10 12:16:41,181 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:41,189 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 7 items
2025-07-10 12:16:41,189 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:41,189 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:41,197 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 150.7s ago] ('sku_0334f552_50202200_aperitivo_vermouth_carpano_classico_rosso', 1, 0)
2025-07-10 12:16:41,205 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:41,205 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_0334f552_50202200_aperitivo_vermouth_carpano_classico_rosso
2025-07-10 12:16:42,607 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Destilados
2025-07-10 12:16:42,609 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Destilados (units_per_package: 1.0)
2025-07-10 12:16:42,612 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:42,615 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:42,619 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 152.1s ago] ('sku_a0499d41_50202200_aperitivo_vermouth_martini_extra_dry_750_', 1, 0)
2025-07-10 12:16:42,622 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:42,625 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_a0499d41_50202200_aperitivo_vermouth_martini_extra_dry_750_
2025-07-10 12:16:44,386 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Destilados
2025-07-10 12:16:44,386 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Destilados (units_per_package: 1.0)
2025-07-10 12:16:44,386 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:44,395 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:44,395 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 153.8s ago] ('sku_9bcaf72a_50202200_licor_campari_750_ml_licor_campari_750_ml', 1, 0)
2025-07-10 12:16:44,395 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:44,403 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_9bcaf72a_50202200_licor_campari_750_ml_licor_campari_750_ml
2025-07-10 12:16:45,865 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Destilados
2025-07-10 12:16:45,865 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Destilados (units_per_package: 1.0)
2025-07-10 12:16:45,873 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:45,875 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:45,882 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 155.3s ago] ('sku_514701de_50202200_licor_fernet_branca_de_hierbas_750_ml_lic', 1, 0)
2025-07-10 12:16:45,889 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:45,889 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_514701de_50202200_licor_fernet_branca_de_hierbas_750_ml_lic
2025-07-10 12:16:47,513 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Destilados
2025-07-10 12:16:47,513 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Destilados (units_per_package: 1.0)
2025-07-10 12:16:47,513 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:47,521 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:47,521 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 157s ago] ('sku_4d7e37ed_50202200_tequila_siete_leguas_reposado_700_ml', 1, 0)
2025-07-10 12:16:47,521 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:47,529 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_4d7e37ed_50202200_tequila_siete_leguas_reposado_700_ml
2025-07-10 12:16:48,771 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Destilados
2025-07-10 12:16:48,779 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Destilados (units_per_package: 1.0)
2025-07-10 12:16:48,779 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:48,789 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:48,796 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 158.2s ago] ('sku_1848377d_50202200_vodka_absolut_pera_750_ml_vodka_absolut_p', 1, 0)
2025-07-10 12:16:48,796 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:48,803 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_1848377d_50202200_vodka_absolut_pera_750_ml_vodka_absolut_p
2025-07-10 12:16:50,352 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Destilados
2025-07-10 12:16:50,361 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Destilados (units_per_package: 1.0)
2025-07-10 12:16:50,361 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:50,368 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:50,368 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 159.8s ago] ('sku_9d908873_50202200_vodka_titos_handmade_750_ml_vodka_titos_h', 1, 0)
2025-07-10 12:16:50,380 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:50,383 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_9d908873_50202200_vodka_titos_handmade_750_ml_vodka_titos_h
2025-07-10 12:16:52,121 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Destilados
2025-07-10 12:16:52,121 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Destilados (units_per_package: 1.0)
2025-07-10 12:16:52,124 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 12:16:52,124 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 12:16:52,126 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 12:16:52,129 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process db7ca908-83b2-49ab-8c86-649a9b9ba470.xml: Failed to save invoice to database
2025-07-10 12:16:52,132 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:52,132 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 12:16:52,137 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 159.4s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process db7ca908-83b2-49ab-8c86-649a9b9ba470.xml', '{"filename": "db7ca908-83b2-49ab-8c86-649a9b9ba470.xml", "processing_time": 10.972626447677612, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 10.972626447677612, None, 'db7ca908-83b2-49ab-8c86-649a9b9ba470.xml', None, '2025-07-10 19:16:52.132421')
2025-07-10 12:16:52,151 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:52,161 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved db7ca908-83b2-49ab-8c86-649a9b9ba470.xml to data/failed
2025-07-10 12:16:52,168 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 12:16:52,170 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing f525505f-f7f0-4d56-b685-99166d38d287.xml (89/89)
2025-07-10 12:16:52,170 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 12:16:52,173 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: f525505f-f7f0-4d56-b685-99166d38d287.xml
2025-07-10 12:16:52,173 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: f525505f-f7f0-4d56-b685-99166d38d287.xml
2025-07-10 12:16:52,178 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 12:16:52,178 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: f525505f-f7f0-4d56-b685-99166d38d287
2025-07-10 12:16:52,182 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:52,184 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:52,189 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 161.7s ago] ('f525505f-f7f0-4d56-b685-99166d38d287', 1, 0)
2025-07-10 12:16:52,192 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID f525505f-f7f0-4d56-b685-99166d38d287 already exists (ID: 113)
2025-07-10 12:16:52,192 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: f525505f-f7f0-4d56-b685-99166d38d287.xml
2025-07-10 12:16:52,195 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: f525505f-f7f0-4d56-b685-99166d38d287.xml
2025-07-10 12:16:52,196 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-10 12:16:52,196 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2785.59
2025-07-10 12:16:52,196 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:52,200 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:52,202 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 12:16:52,204 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 161.7s ago] ('f525505f-f7f0-4d56-b685-99166d38d287', 1, 0)
2025-07-10 12:16:52,210 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 12:16:52,210 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: f525505f-f7f0-4d56-b685-99166d38d287
2025-07-10 12:16:52,210 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: f525505f-f7f0-4d56-b685-99166d38d287.xml (ID: 113)
2025-07-10 12:16:52,210 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  f525505f-f7f0-4d56-b685-99166d38d287.xml
2025-07-10 12:16:52,210 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $2785.59 vs $2785.59
2025-07-10 12:16:52,210 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 12:16:52,210 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:52,219 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 12:16:52,219 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 12:16:52,219 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 159.5s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process f525505f-f7f0-4d56-b685-99166d38d287.xml', '{"filename": "f525505f-f7f0-4d56-b685-99166d38d287.xml", "processing_time": 0.04592442512512207, "item_count": 0, "success": false, "error": "DUPLICATE: UUID f525505f-f7f0-4d56-b685-99166d38d287 already exists"}', 0.04592442512512207, None, 'f525505f-f7f0-4d56-b685-99166d38d287.xml', None, '2025-07-10 19:16:52.219578')
2025-07-10 12:16:52,227 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 12:16:52,243 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice f525505f-f7f0-4d56-b685-99166d38d287.xml - moved to failed directory
2025-07-10 12:16:52,243 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved f525505f-f7f0-4d56-b685-99166d38d287.xml to data/failed
2025-07-10 12:16:52,243 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 12:16:52,251 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - FINAL PROCESSING SUMMARY
2025-07-10 12:16:52,251 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 12:16:52,252 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Total files: 89
2025-07-10 12:16:52,252 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Successfully processed: 0
2025-07-10 12:16:52,252 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Failed: 89
2025-07-10 12:16:52,252 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Success rate: 0.0%
2025-07-10 12:16:52,252 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Total processing time: 161.87s
2025-07-10 12:16:52,252 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Average time per file: 1.82s
2025-07-10 12:16:52,252 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Inbox processing completed
2025-07-10 16:30:44,465 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Logging configured for environment: dev
2025-07-10 16:30:44,465 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Log level: DEBUG
2025-07-10 16:30:44,465 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Log directory: logs
2025-07-10 16:30:44,465 - __main__ - INFO - File: main.py - File: main.py - File: main.py - CFDI Processing System v4 started
2025-07-10 16:30:44,465 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Environment: dev
2025-07-10 16:30:44,465 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Log level: DEBUG
2025-07-10 16:30:44,465 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Starting inbox processing...
2025-07-10 16:30:44,479 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - CFDI Parser initialized
2025-07-10 16:30:44,581 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database connection established: sqlite:///data/database/cfdi_system_v4.db
2025-07-10 16:30:44,581 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database Manager initialized
2025-07-10 16:30:44,581 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API initialized with model: gemini-2.0-flash
2025-07-10 16:30:44,581 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Loaded P62 categories: 11 main categories
2025-07-10 16:30:44,597 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - GeminiClassifier initialized successfully
2025-07-10 16:30:44,598 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database connection established: sqlite:///data/database/cfdi_system_v4.db
2025-07-10 16:30:44,599 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database Manager initialized
2025-07-10 16:30:44,599 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - BatchProcessor initialized successfully
2025-07-10 16:30:44,599 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Starting inbox processing: data/inbox
2025-07-10 16:30:44,602 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Found 15 XML files in data/inbox
2025-07-10 16:30:44,602 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [FILES] Processing 15 XML files
2025-07-10 16:30:44,602 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:30:44,602 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 04061ab5-c50d-46f3-aba1-148bdc5c2333.xml (1/15)
2025-07-10 16:30:44,602 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:30:44,604 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 04061ab5-c50d-46f3-aba1-148bdc5c2333.xml
2025-07-10 16:30:44,604 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 04061ab5-c50d-46f3-aba1-148bdc5c2333.xml
2025-07-10 16:30:44,609 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:30:44,613 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 04061ab5-c50d-46f3-aba1-148bdc5c2333
2025-07-10 16:30:44,724 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:44,761 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:44,789 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.02942s] ('04061ab5-c50d-46f3-aba1-148bdc5c2333', 1, 0)
2025-07-10 16:30:44,824 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:44,832 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 4 items
2025-07-10 16:30:44,842 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:44,851 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:44,855 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00460s] ('sku_8330c5d1_50112023_salami_deshidratado_molinari_kg', 1, 0)
2025-07-10 16:30:44,859 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_8330c5d1_50112023_salami_deshidratado_molinari_kg -> Proteinas
2025-07-10 16:30:44,944 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:30:44,948 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.01049s] (3, '2025-07-10 23:30:44.859669', 84)
2025-07-10 16:30:44,975 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:44,992 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:44,994 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:44,997 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 0.1471s ago] ('sku_9758ee3a_50131800_queso_ricotta_belgioioso_cube_226kg_180', 1, 0)
2025-07-10 16:30:45,000 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_9758ee3a_50131800_queso_ricotta_belgioioso_cube_226kg_180 -> Lacteos
2025-07-10 16:30:45,000 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:30:45,007 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 0.06356s ago] (3, '2025-07-10 23:30:45.000218', 72)
2025-07-10 16:30:45,014 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:45,030 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:45,030 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:45,030 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 0.1863s ago] ('sku_39ed0331_50171550_especia_pimienta_negra_molida_454gr_80217', 1, 0)
2025-07-10 16:30:45,039 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_39ed0331_50171550_especia_pimienta_negra_molida_454gr_80217 -> Abarrotes
2025-07-10 16:30:45,043 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:30:45,044 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 0.09957s ago] (2, '2025-07-10 23:30:45.039404', 25)
2025-07-10 16:30:45,047 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:45,055 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:45,059 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:45,061 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 0.2104s ago] ('sku_25436dd7_50151513_aceite_oliva_evirgen_genco_mezcla378lt', 1, 0)
2025-07-10 16:30:45,063 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:45,064 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_25436dd7_50151513_aceite_oliva_evirgen_genco_mezcla378lt
2025-07-10 16:30:46,996 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Aceite
2025-07-10 16:30:46,998 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Aceite (units_per_package: 1.0)
2025-07-10 16:30:46,998 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:30:46,999 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:30:47,000 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:30:47,002 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 04061ab5-c50d-46f3-aba1-148bdc5c2333.xml: Failed to save invoice to database
2025-07-10 16:30:47,004 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:47,008 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:30:47,009 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00125s] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 04061ab5-c50d-46f3-aba1-148bdc5c2333.xml', '{"filename": "04061ab5-c50d-46f3-aba1-148bdc5c2333.xml", "processing_time": 2.397383689880371, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 2.397383689880371, None, '04061ab5-c50d-46f3-aba1-148bdc5c2333.xml', None, '2025-07-10 23:30:47.007430')
2025-07-10 16:30:47,012 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:47,019 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 04061ab5-c50d-46f3-aba1-148bdc5c2333.xml to data/failed
2025-07-10 16:30:47,020 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:30:47,021 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 0781DA3A-D65A-4B8C-827C-104B8D3F52F8.xml (2/15)
2025-07-10 16:30:47,023 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:30:47,023 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 0781DA3A-D65A-4B8C-827C-104B8D3F52F8.xml
2025-07-10 16:30:47,024 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 0781DA3A-D65A-4B8C-827C-104B8D3F52F8.xml
2025-07-10 16:30:47,031 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:30:47,032 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 0781DA3A-D65A-4B8C-827C-104B8D3F52F8
2025-07-10 16:30:47,034 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:47,035 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:47,037 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 2.276s ago] ('0781DA3A-D65A-4B8C-827C-104B8D3F52F8', 1, 0)
2025-07-10 16:30:47,038 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:47,039 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 18 items
2025-07-10 16:30:47,041 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:47,041 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:47,051 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 2.2s ago] ('sku_bd6f7e4b_50112010_pierna_de_pollo', 1, 0)
2025-07-10 16:30:47,052 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_bd6f7e4b_50112010_pierna_de_pollo -> Proteinas
2025-07-10 16:30:47,053 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:30:47,055 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 2.111s ago] (3, '2025-07-10 23:30:47.052459', 90)
2025-07-10 16:30:47,060 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:47,072 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:47,075 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:47,080 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 2.23s ago] ('sku_9694c503_50403500_berenjena', 1, 0)
2025-07-10 16:30:47,083 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_9694c503_50403500_berenjena -> Vegetales
2025-07-10 16:30:47,084 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:30:47,086 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 2.141s ago] (3, '2025-07-10 23:30:47.083034', 148)
2025-07-10 16:30:47,090 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:47,101 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:47,104 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:47,105 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 2.258s ago] ('sku_44f0bbec_50403900_calabaza_negra', 1, 0)
2025-07-10 16:30:47,110 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_44f0bbec_50403900_calabaza_negra -> Vegetales
2025-07-10 16:30:47,111 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:30:47,112 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 2.168s ago] (3, '2025-07-10 23:30:47.110419', 145)
2025-07-10 16:30:47,114 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:47,124 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:47,128 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:47,129 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 2.279s ago] ('sku_09573e71_50417006_arugula', 1, 0)
2025-07-10 16:30:47,131 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:47,132 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_09573e71_50417006_arugula
2025-07-10 16:30:48,290 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Verduras
2025-07-10 16:30:48,290 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Verduras (units_per_package: 1.0)
2025-07-10 16:30:48,290 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:48,290 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:48,290 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 3.452s ago] ('sku_6ec9c23c_50405625_chile_jalapeño', 1, 0)
2025-07-10 16:30:48,305 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_6ec9c23c_50405625_chile_jalapeño -> Vegetales
2025-07-10 16:30:48,306 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:30:48,307 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 3.363s ago] (3, '2025-07-10 23:30:48.305280', 155)
2025-07-10 16:30:48,313 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:48,315 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:48,315 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:48,315 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 3.475s ago] ('sku_75903dde_50404803_champiñon', 1, 0)
2025-07-10 16:30:48,328 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:48,328 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_75903dde_50404803_champiñon
2025-07-10 16:30:49,711 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Hongo
2025-07-10 16:30:49,712 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Hongo (units_per_package: 1.0)
2025-07-10 16:30:49,715 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:49,717 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:49,721 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 4.87s ago] ('sku_14c77eea_50414500_kale', 1, 0)
2025-07-10 16:30:49,722 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_14c77eea_50414500_kale -> Vegetales
2025-07-10 16:30:49,724 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:30:49,725 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 4.782s ago] (3, '2025-07-10 23:30:49.722912', 142)
2025-07-10 16:30:49,732 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:49,743 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:49,745 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:49,746 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 4.896s ago] ('sku_11cd495e_50401700_aguacate', 1, 0)
2025-07-10 16:30:49,749 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_11cd495e_50401700_aguacate -> Vegetales
2025-07-10 16:30:49,750 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:30:49,750 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 4.81s ago] (3, '2025-07-10 23:30:49.749497', 126)
2025-07-10 16:30:49,757 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:49,763 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:49,765 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:49,768 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 4.917s ago] ('sku_c1ceb28c_50221002_harina_selecta', 1, 0)
2025-07-10 16:30:49,770 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:49,774 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_c1ceb28c_50221002_harina_selecta
2025-07-10 16:30:51,055 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Harinas
2025-07-10 16:30:51,056 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Harinas (units_per_package: 1.0)
2025-07-10 16:30:51,058 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:51,060 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:51,062 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 6.212s ago] ('sku_8f28f7c7_50402300_repollo_verde', 1, 0)
2025-07-10 16:30:51,063 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_8f28f7c7_50402300_repollo_verde -> Vegetales
2025-07-10 16:30:51,064 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:30:51,066 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 6.121s ago] (3, '2025-07-10 23:30:51.063592', 153)
2025-07-10 16:30:51,071 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:51,077 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:51,078 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:51,081 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 6.23s ago] ('sku_e6d42f0b_50403800_shallot', 1, 0)
2025-07-10 16:30:51,082 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_e6d42f0b_50403800_shallot -> Vegetales
2025-07-10 16:30:51,084 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:30:51,084 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 6.143s ago] (3, '2025-07-10 23:30:51.082734', 143)
2025-07-10 16:30:51,088 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:51,098 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:51,099 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:51,101 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 6.25s ago] ('sku_f6ce5c99_50404600_lechuga_mixta', 1, 0)
2025-07-10 16:30:51,102 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:51,108 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_f6ce5c99_50404600_lechuga_mixta
2025-07-10 16:30:52,396 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Verduras
2025-07-10 16:30:52,398 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Verduras (units_per_package: 1.0)
2025-07-10 16:30:52,399 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:52,400 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:52,402 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 7.551s ago] ('sku_6b45f921_50404600_lechuga_romana_baby', 1, 0)
2025-07-10 16:30:52,403 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:52,404 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_6b45f921_50404600_lechuga_romana_baby
2025-07-10 16:30:53,786 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Verduras
2025-07-10 16:30:53,788 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Verduras (units_per_package: 1.0)
2025-07-10 16:30:53,788 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:53,796 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:53,800 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 8.949s ago] ('sku_4770c1ef_50402800_acelga', 1, 0)
2025-07-10 16:30:53,803 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:53,803 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_4770c1ef_50402800_acelga
2025-07-10 16:30:55,117 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Verduras
2025-07-10 16:30:55,117 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Verduras (units_per_package: 1.0)
2025-07-10 16:30:55,117 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:55,117 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:55,134 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 10.28s ago] ('sku_4d8ff92b_50404600_lechuga_bola', 1, 0)
2025-07-10 16:30:55,136 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:55,138 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_4d8ff92b_50404600_lechuga_bola
2025-07-10 16:30:56,370 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Verduras
2025-07-10 16:30:56,376 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Verduras (units_per_package: 1.0)
2025-07-10 16:30:56,379 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:56,380 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:56,382 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 11.53s ago] ('sku_3823c19d_50405300_cebolla_blanca', 1, 0)
2025-07-10 16:30:56,384 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_3823c19d_50405300_cebolla_blanca -> Vegetales
2025-07-10 16:30:56,385 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:30:56,386 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 11.44s ago] (3, '2025-07-10 23:30:56.384520', 150)
2025-07-10 16:30:56,390 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:56,397 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:56,398 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:56,399 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 11.55s ago] ('sku_07ae298e_50304100_limon_amarillo', 1, 0)
2025-07-10 16:30:56,401 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_07ae298e_50304100_limon_amarillo -> Vegetales
2025-07-10 16:30:56,402 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:30:56,402 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 11.46s ago] (3, '2025-07-10 23:30:56.401136', 133)
2025-07-10 16:30:56,404 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:56,415 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:56,416 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:56,418 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 11.57s ago] ('sku_c0496069_50406500_tomate_salades', 1, 0)
2025-07-10 16:30:56,419 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_c0496069_50406500_tomate_salades -> Vegetales
2025-07-10 16:30:56,420 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:30:56,420 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 11.48s ago] (3, '2025-07-10 23:30:56.419294', 136)
2025-07-10 16:30:56,423 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:56,433 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:30:56,433 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:30:56,434 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:30:56,435 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 0781DA3A-D65A-4B8C-827C-104B8D3F52F8.xml: Failed to save invoice to database
2025-07-10 16:30:56,436 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:56,438 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:30:56,439 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 9.432s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 0781DA3A-D65A-4B8C-827C-104B8D3F52F8.xml', '{"filename": "0781DA3A-D65A-4B8C-827C-104B8D3F52F8.xml", "processing_time": 9.41257905960083, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 9.41257905960083, None, '0781DA3A-D65A-4B8C-827C-104B8D3F52F8.xml', None, '2025-07-10 23:30:56.437668')
2025-07-10 16:30:56,446 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:56,455 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 0781DA3A-D65A-4B8C-827C-104B8D3F52F8.xml to data/failed
2025-07-10 16:30:56,456 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:30:56,457 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 109BCCAF-DC6E-4C71-B0B4-468D3D894E02.xml (3/15)
2025-07-10 16:30:56,458 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:30:56,459 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 109BCCAF-DC6E-4C71-B0B4-468D3D894E02.xml
2025-07-10 16:30:56,460 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 109BCCAF-DC6E-4C71-B0B4-468D3D894E02.xml
2025-07-10 16:30:56,464 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:30:56,468 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 109BCCAF-DC6E-4C71-B0B4-468D3D894E02
2025-07-10 16:30:56,469 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:56,470 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:56,473 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 11.71s ago] ('109BCCAF-DC6E-4C71-B0B4-468D3D894E02', 1, 0)
2025-07-10 16:30:56,475 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:56,478 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 5 items
2025-07-10 16:30:56,483 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:56,483 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:56,485 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 11.63s ago] ('sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg', 1, 0)
2025-07-10 16:30:56,486 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:56,487 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg
2025-07-10 16:30:57,787 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Otros-a
2025-07-10 16:30:57,789 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Otros-a (units_per_package: 1.0)
2025-07-10 16:30:57,794 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:57,796 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:57,801 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 12.95s ago] ('sku_9a57e1c2_50304100_limon_sin_semilla', 1, 0)
2025-07-10 16:30:57,804 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_9a57e1c2_50304100_limon_sin_semilla -> Vegetales
2025-07-10 16:30:57,805 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:30:57,807 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 12.86s ago] (3, '2025-07-10 23:30:57.803036', 127)
2025-07-10 16:30:57,813 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:57,825 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:57,827 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:57,829 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 12.98s ago] ('sku_141a86f5_10161506_naranja', 1, 0)
2025-07-10 16:30:57,832 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_141a86f5_10161506_naranja -> Vegetales
2025-07-10 16:30:57,834 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:30:57,834 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 12.89s ago] (3, '2025-07-10 23:30:57.832522', 128)
2025-07-10 16:30:57,836 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:57,850 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:57,850 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:57,853 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 13s ago] ('sku_306c40c7_50303300_toronja', 1, 0)
2025-07-10 16:30:57,853 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_306c40c7_50303300_toronja -> Vegetales
2025-07-10 16:30:57,856 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:30:57,856 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 12.92s ago] (3, '2025-07-10 23:30:57.853680', 130)
2025-07-10 16:30:57,865 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:57,870 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:57,876 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:57,876 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 13.03s ago] ('sku_f95bb8a3_50307024_pepino', 1, 0)
2025-07-10 16:30:57,882 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_f95bb8a3_50307024_pepino -> Vegetales
2025-07-10 16:30:57,883 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:30:57,883 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 12.94s ago] (3, '2025-07-10 23:30:57.882415', 157)
2025-07-10 16:30:57,886 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:57,892 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:30:57,896 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:30:57,898 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:30:57,899 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 109BCCAF-DC6E-4C71-B0B4-468D3D894E02.xml: Failed to save invoice to database
2025-07-10 16:30:57,900 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:57,901 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:30:57,902 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 10.89s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 109BCCAF-DC6E-4C71-B0B4-468D3D894E02.xml', '{"filename": "109BCCAF-DC6E-4C71-B0B4-468D3D894E02.xml", "processing_time": 1.4398789405822754, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 1.4398789405822754, None, '109BCCAF-DC6E-4C71-B0B4-468D3D894E02.xml', None, '2025-07-10 23:30:57.901715')
2025-07-10 16:30:57,905 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:57,914 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 109BCCAF-DC6E-4C71-B0B4-468D3D894E02.xml to data/failed
2025-07-10 16:30:57,916 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:30:57,917 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F.xml (4/15)
2025-07-10 16:30:57,917 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:30:57,918 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F.xml
2025-07-10 16:30:57,918 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F.xml
2025-07-10 16:30:57,923 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:30:57,926 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F
2025-07-10 16:30:57,929 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:57,930 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:57,933 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 13.17s ago] ('29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F', 1, 0)
2025-07-10 16:30:57,934 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:57,935 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 4 items
2025-07-10 16:30:57,936 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_8f28f7c7_50402300_repollo_verde
2025-07-10 16:30:57,939 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:57,939 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:57,953 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 13.11s ago] ('sku_5a200fb8_50131800_queso_cheddar_cheddar_fuerte', 1, 0)
2025-07-10 16:30:57,969 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:57,970 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_5a200fb8_50131800_queso_cheddar_cheddar_fuerte
2025-07-10 16:30:59,403 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Queso
2025-07-10 16:30:59,404 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Queso (units_per_package: 1.0)
2025-07-10 16:30:59,405 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:30:59,406 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:30:59,407 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.56s ago] ('sku_ecbce4c6_50131700_crema_para_batir_lyncont_1ltr', 1, 0)
2025-07-10 16:30:59,408 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:30:59,409 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_ecbce4c6_50131700_crema_para_batir_lyncont_1ltr
2025-07-10 16:31:01,032 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Cremas
2025-07-10 16:31:01,034 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Cremas (units_per_package: 1.0)
2025-07-10 16:31:01,036 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:01,038 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:01,040 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 16.19s ago] ('sku_e334a5b7_50131700_leche_entera_lala', 1, 0)
2025-07-10 16:31:01,043 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:01,044 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_e334a5b7_50131700_leche_entera_lala
2025-07-10 16:31:02,304 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Leche
2025-07-10 16:31:02,304 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Leche (units_per_package: 1.0)
2025-07-10 16:31:02,304 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:31:02,304 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:02,320 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:02,320 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F.xml: Failed to save invoice to database
2025-07-10 16:31:02,320 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:02,322 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:31:02,323 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 15.32s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F.xml', '{"filename": "29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F.xml", "processing_time": 4.401326894760132, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 4.401326894760132, None, '29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F.xml', None, '2025-07-10 23:31:02.322601')
2025-07-10 16:31:02,329 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:02,340 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F.xml to data/failed
2025-07-10 16:31:02,341 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:31:02,342 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6.xml (5/15)
2025-07-10 16:31:02,343 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:31:02,343 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6.xml
2025-07-10 16:31:02,344 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6.xml
2025-07-10 16:31:02,348 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:31:02,349 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6
2025-07-10 16:31:02,355 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:02,356 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:02,358 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 17.6s ago] ('5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6', 1, 0)
2025-07-10 16:31:02,362 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:02,363 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 17 items
2025-07-10 16:31:02,364 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:02,367 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:02,373 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 17.52s ago] ('sku_f355fb89_50403800_ajo', 1, 0)
2025-07-10 16:31:02,374 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_f355fb89_50403800_ajo -> Vegetales
2025-07-10 16:31:02,375 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:31:02,376 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 17.43s ago] (3, '2025-07-10 23:31:02.374152', 149)
2025-07-10 16:31:02,380 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:02,394 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:02,395 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:02,399 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 17.55s ago] ('sku_15acbdb3_50404125_tomillo', 1, 0)
2025-07-10 16:31:02,401 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:02,403 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_15acbdb3_50404125_tomillo
2025-07-10 16:31:03,570 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Frutas
2025-07-10 16:31:03,570 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Frutas (units_per_package: 1.0)
2025-07-10 16:31:03,574 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:03,574 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:03,582 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 18.73s ago] ('sku_00d189e9_50193105_panco', 1, 0)
2025-07-10 16:31:03,585 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_00d189e9_50193105_panco -> Abarrotes
2025-07-10 16:31:03,588 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:31:03,590 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 18.65s ago] (3, '2025-07-10 23:31:03.585537', 40)
2025-07-10 16:31:03,598 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:03,611 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:03,612 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:03,614 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 18.76s ago] ('sku_6a2cfbaf_50131612_huevo_cartera_con_30pz', 1, 0)
2025-07-10 16:31:03,617 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_6a2cfbaf_50131612_huevo_cartera_con_30pz -> Abarrotes
2025-07-10 16:31:03,618 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:31:03,619 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 18.67s ago] (3, '2025-07-10 23:31:03.617001', 32)
2025-07-10 16:31:03,620 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:03,632 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_09573e71_50417006_arugula
2025-07-10 16:31:03,634 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_bd6f7e4b_50112010_pierna_de_pollo
2025-07-10 16:31:03,639 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg
2025-07-10 16:31:03,640 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_c1ceb28c_50221002_harina_selecta
2025-07-10 16:31:03,641 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:03,642 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:03,644 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 18.79s ago] ('sku_547ba3ea_50171551_sal_la_fina', 1, 0)
2025-07-10 16:31:03,648 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:03,649 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_547ba3ea_50171551_sal_la_fina
2025-07-10 16:31:04,904 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Condimentos
2025-07-10 16:31:04,905 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Condimentos (units_per_package: 1.0)
2025-07-10 16:31:04,907 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_bd6f7e4b_50112010_pierna_de_pollo
2025-07-10 16:31:04,909 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:04,911 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:04,913 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.06s ago] ('sku_01526d33_50131700_leche_nido', 1, 0)
2025-07-10 16:31:04,916 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:04,916 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_01526d33_50131700_leche_nido
2025-07-10 16:31:06,153 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Leche
2025-07-10 16:31:06,153 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Leche (units_per_package: 1.0)
2025-07-10 16:31:06,153 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_9a57e1c2_50304100_limon_sin_semilla
2025-07-10 16:31:06,153 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_141a86f5_10161506_naranja
2025-07-10 16:31:06,153 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_306c40c7_50303300_toronja
2025-07-10 16:31:06,153 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:06,153 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:06,153 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 21.31s ago] ('sku_b402f8e2_50307503_pulpa_de_maracuya_grande', 1, 0)
2025-07-10 16:31:06,160 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:06,162 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_b402f8e2_50307503_pulpa_de_maracuya_grande
2025-07-10 16:31:07,652 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Pulpa
2025-07-10 16:31:07,652 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Pulpa (units_per_package: 1.0)
2025-07-10 16:31:07,663 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg
2025-07-10 16:31:07,665 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:07,665 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:07,668 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 22.82s ago] ('sku_af6719ab_50201706_café_baja_sur', 1, 0)
2025-07-10 16:31:07,668 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:07,670 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_af6719ab_50201706_café_baja_sur
2025-07-10 16:31:09,070 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Café
2025-07-10 16:31:09,070 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Café (units_per_package: 1.0)
2025-07-10 16:31:09,072 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:31:09,074 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:09,075 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:09,078 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6.xml: Failed to save invoice to database
2025-07-10 16:31:09,080 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:09,081 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:31:09,083 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 22.08s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6.xml', '{"filename": "5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6.xml", "processing_time": 6.731344223022461, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 6.731344223022461, None, '5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6.xml', None, '2025-07-10 23:31:09.081988')
2025-07-10 16:31:09,090 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:09,103 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6.xml to data/failed
2025-07-10 16:31:09,103 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:31:09,106 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 7EC2C80D-447B-41D7-A5D7-64B42CFE6860.xml (6/15)
2025-07-10 16:31:09,107 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:31:09,107 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 7EC2C80D-447B-41D7-A5D7-64B42CFE6860.xml
2025-07-10 16:31:09,108 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 7EC2C80D-447B-41D7-A5D7-64B42CFE6860.xml
2025-07-10 16:31:09,110 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:31:09,110 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 7EC2C80D-447B-41D7-A5D7-64B42CFE6860
2025-07-10 16:31:09,112 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:09,114 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:09,117 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.36s ago] ('7EC2C80D-447B-41D7-A5D7-64B42CFE6860', 1, 0)
2025-07-10 16:31:09,119 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:09,123 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 1 items
2025-07-10 16:31:09,124 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:09,125 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:09,126 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.28s ago] ('sku_9ea7b570_84121500_servicios_de_facturación', 1, 0)
2025-07-10 16:31:09,128 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_9ea7b570_84121500_servicios_de_facturación -> Gastos Generales
2025-07-10 16:31:09,130 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:31:09,131 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.19s ago] (3, '2025-07-10 23:31:09.128894', 59)
2025-07-10 16:31:09,138 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:09,146 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:31:09,148 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:09,149 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:09,153 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 7EC2C80D-447B-41D7-A5D7-64B42CFE6860.xml: Failed to save invoice to database
2025-07-10 16:31:09,158 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:09,159 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:31:09,159 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 22.15s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 7EC2C80D-447B-41D7-A5D7-64B42CFE6860.xml', '{"filename": "7EC2C80D-447B-41D7-A5D7-64B42CFE6860.xml", "processing_time": 0.04524946212768555, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 0.04524946212768555, None, '7EC2C80D-447B-41D7-A5D7-64B42CFE6860.xml', None, '2025-07-10 23:31:09.159225')
2025-07-10 16:31:09,163 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:09,173 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 7EC2C80D-447B-41D7-A5D7-64B42CFE6860.xml to data/failed
2025-07-10 16:31:09,173 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:31:09,175 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6.xml (7/15)
2025-07-10 16:31:09,176 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:31:09,177 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6.xml
2025-07-10 16:31:09,177 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6.xml
2025-07-10 16:31:09,180 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:31:09,180 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6
2025-07-10 16:31:09,180 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:09,188 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:09,190 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.43s ago] ('86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6', 1, 0)
2025-07-10 16:31:09,191 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:09,192 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 1 items
2025-07-10 16:31:09,194 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_9ea7b570_84121500_servicios_de_facturación
2025-07-10 16:31:09,195 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:31:09,195 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:09,198 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:09,199 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6.xml: Failed to save invoice to database
2025-07-10 16:31:09,205 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:09,207 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:31:09,207 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 22.2s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6.xml', '{"filename": "86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6.xml", "processing_time": 0.02305293083190918, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 0.02305293083190918, None, '86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6.xml', None, '2025-07-10 23:31:09.207053')
2025-07-10 16:31:09,210 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:09,221 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6.xml to data/failed
2025-07-10 16:31:09,221 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:31:09,223 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 978d18b7-b0c4-420d-9529-6c3eb2cac218.xml (8/15)
2025-07-10 16:31:09,223 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:31:09,224 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 978d18b7-b0c4-420d-9529-6c3eb2cac218.xml
2025-07-10 16:31:09,224 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 978d18b7-b0c4-420d-9529-6c3eb2cac218.xml
2025-07-10 16:31:09,228 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:31:09,229 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 978d18b7-b0c4-420d-9529-6c3eb2cac218
2025-07-10 16:31:09,231 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:09,232 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:09,237 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.48s ago] ('978d18b7-b0c4-420d-9529-6c3eb2cac218', 1, 0)
2025-07-10 16:31:09,239 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:09,240 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 8 items
2025-07-10 16:31:09,241 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:09,243 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:09,244 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.39s ago] ('sku_71a083bd_50221002_harina_higluten_sir_lancelot_ka_3052_lb', 1, 0)
2025-07-10 16:31:09,246 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_71a083bd_50221002_harina_higluten_sir_lancelot_ka_3052_lb -> Abarrotes
2025-07-10 16:31:09,247 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:31:09,247 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.3s ago] (3, '2025-07-10 23:31:09.245368', 28)
2025-07-10 16:31:09,255 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:09,261 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:09,263 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:09,266 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.41s ago] ('sku_e2dd89d6_50406500_tomate_entero_pelado_piancone_289kg', 1, 0)
2025-07-10 16:31:09,272 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_e2dd89d6_50406500_tomate_entero_pelado_piancone_289kg -> Vegetales
2025-07-10 16:31:09,272 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:31:09,273 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.33s ago] (3, '2025-07-10 23:31:09.272447', 125)
2025-07-10 16:31:09,275 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:09,282 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:09,286 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:09,289 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.44s ago] ('sku_8d0019cc_50151513_aceite_oliva_pomace_genco_plast_378_lt', 1, 0)
2025-07-10 16:31:09,290 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_8d0019cc_50151513_aceite_oliva_pomace_genco_plast_378_lt -> Abarrotes
2025-07-10 16:31:09,292 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:31:09,293 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.35s ago] (3, '2025-07-10 23:31:09.290984', 2)
2025-07-10 16:31:09,295 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:09,303 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:09,304 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:09,307 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.46s ago] ('sku_1789b909_50151500_aceite_puro_de_palma_palmina_20lt', 1, 0)
2025-07-10 16:31:09,310 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_1789b909_50151500_aceite_puro_de_palma_palmina_20lt -> Abarrotes
2025-07-10 16:31:09,311 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:31:09,312 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.37s ago] (3, '2025-07-10 23:31:09.310661', 1)
2025-07-10 16:31:09,314 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:09,320 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:09,321 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:09,324 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.47s ago] ('sku_4248db8f_50131800_queso_ricotta_grande_136kg', 1, 0)
2025-07-10 16:31:09,329 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:09,330 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_4248db8f_50131800_queso_ricotta_grande_136kg
2025-07-10 16:31:10,908 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Queso
2025-07-10 16:31:10,924 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Queso (units_per_package: 1.0)
2025-07-10 16:31:10,928 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:10,934 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:10,938 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 26.09s ago] ('sku_181f6523_50221300_harina_de_centeno_dark_bay_state_1814kg', 1, 0)
2025-07-10 16:31:10,941 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_181f6523_50221300_harina_de_centeno_dark_bay_state_1814kg -> Abarrotes
2025-07-10 16:31:10,945 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:31:10,949 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 26s ago] (3, '2025-07-10 23:31:10.941021', 31)
2025-07-10 16:31:10,955 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:10,965 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:10,967 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:10,969 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 26.12s ago] ('sku_95f688b2_50181709_hoja_encerada_12x12_perrins_1000pz', 1, 0)
2025-07-10 16:31:10,971 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_95f688b2_50181709_hoja_encerada_12x12_perrins_1000pz -> Suministros
2025-07-10 16:31:10,972 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:31:10,974 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 26.03s ago] (2, '2025-07-10 23:31:10.971334', 119)
2025-07-10 16:31:10,979 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:10,987 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:10,988 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:10,991 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 26.14s ago] ('sku_a5f46d94_50131800_queso_mozzarella_rdo_grande_227kg', 1, 0)
2025-07-10 16:31:10,996 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_a5f46d94_50131800_queso_mozzarella_rdo_grande_227kg -> Lacteos
2025-07-10 16:31:10,999 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:31:10,999 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 26.06s ago] (3, '2025-07-10 23:31:10.996989', 71)
2025-07-10 16:31:11,003 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:11,011 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:31:11,014 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:11,015 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:11,017 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 978d18b7-b0c4-420d-9529-6c3eb2cac218.xml: Failed to save invoice to database
2025-07-10 16:31:11,020 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:11,025 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:31:11,026 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.02s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 978d18b7-b0c4-420d-9529-6c3eb2cac218.xml', '{"filename": "978d18b7-b0c4-420d-9529-6c3eb2cac218.xml", "processing_time": 1.7930760383605957, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 1.7930760383605957, None, '978d18b7-b0c4-420d-9529-6c3eb2cac218.xml', None, '2025-07-10 23:31:11.025326')
2025-07-10 16:31:11,029 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:11,029 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 978d18b7-b0c4-420d-9529-6c3eb2cac218.xml to data/failed
2025-07-10 16:31:11,041 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:31:11,042 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing B696B7FF-E66C-46CF-A45D-D819C44431A3.xml (9/15)
2025-07-10 16:31:11,042 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:31:11,043 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: B696B7FF-E66C-46CF-A45D-D819C44431A3.xml
2025-07-10 16:31:11,044 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: B696B7FF-E66C-46CF-A45D-D819C44431A3.xml
2025-07-10 16:31:11,048 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:31:11,050 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: B696B7FF-E66C-46CF-A45D-D819C44431A3
2025-07-10 16:31:11,052 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:11,052 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:11,056 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 26.3s ago] ('B696B7FF-E66C-46CF-A45D-D819C44431A3', 1, 0)
2025-07-10 16:31:11,059 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:11,060 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 13 items
2025-07-10 16:31:11,061 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:11,063 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:11,065 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 26.22s ago] ('sku_3e3e24e9_10161907_oregano', 1, 0)
2025-07-10 16:31:11,067 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_3e3e24e9_10161907_oregano -> Abarrotes
2025-07-10 16:31:11,067 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:31:11,067 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 26.13s ago] (2, '2025-07-10 23:31:11.067585', 27)
2025-07-10 16:31:11,074 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:11,083 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:11,089 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:11,090 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 26.24s ago] ('sku_80bf8a82_50401900_betabel', 1, 0)
2025-07-10 16:31:11,091 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_80bf8a82_50401900_betabel -> Vegetales
2025-07-10 16:31:11,093 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:31:11,093 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 26.15s ago] (3, '2025-07-10 23:31:11.091402', 147)
2025-07-10 16:31:11,096 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:11,102 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:11,103 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:11,104 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 26.25s ago] ('sku_5f188ef1_50131800_queso_cabra', 1, 0)
2025-07-10 16:31:11,108 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:11,112 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_5f188ef1_50131800_queso_cabra
2025-07-10 16:31:12,453 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Queso
2025-07-10 16:31:12,455 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Queso (units_per_package: 1.0)
2025-07-10 16:31:12,457 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_f6ce5c99_50404600_lechuga_mixta
2025-07-10 16:31:12,459 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_6b45f921_50404600_lechuga_romana_baby
2025-07-10 16:31:12,461 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_11cd495e_50401700_aguacate
2025-07-10 16:31:12,463 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_14c77eea_50414500_kale
2025-07-10 16:31:12,465 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_e6d42f0b_50403800_shallot
2025-07-10 16:31:12,466 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_4770c1ef_50402800_acelga
2025-07-10 16:31:12,468 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:12,470 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:12,475 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 27.62s ago] ('sku_e08ae5b6_50131700_leche_entera_lala_1_lt', 1, 0)
2025-07-10 16:31:12,476 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:12,478 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_e08ae5b6_50131700_leche_entera_lala_1_lt
2025-07-10 16:31:13,804 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Leche
2025-07-10 16:31:13,804 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Leche (units_per_package: 1.0)
2025-07-10 16:31:13,810 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_bd6f7e4b_50112010_pierna_de_pollo
2025-07-10 16:31:13,810 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg
2025-07-10 16:31:13,810 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:13,810 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:13,810 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 28.96s ago] ('sku_9d78fad1_50404100_perejil_liso', 1, 0)
2025-07-10 16:31:13,815 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:13,817 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_9d78fad1_50404100_perejil_liso
2025-07-10 16:31:15,185 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Verduras
2025-07-10 16:31:15,185 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Verduras (units_per_package: 1.0)
2025-07-10 16:31:15,193 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:31:15,197 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:15,200 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:15,202 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process B696B7FF-E66C-46CF-A45D-D819C44431A3.xml: Failed to save invoice to database
2025-07-10 16:31:15,205 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:15,208 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:31:15,213 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 28.21s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process B696B7FF-E66C-46CF-A45D-D819C44431A3.xml', '{"filename": "B696B7FF-E66C-46CF-A45D-D819C44431A3.xml", "processing_time": 4.159231424331665, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 4.159231424331665, None, 'B696B7FF-E66C-46CF-A45D-D819C44431A3.xml', None, '2025-07-10 23:31:15.208101')
2025-07-10 16:31:15,220 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:15,232 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved B696B7FF-E66C-46CF-A45D-D819C44431A3.xml to data/failed
2025-07-10 16:31:15,232 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:31:15,234 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing DC82A272-2FA8-4F2F-A807-6B6F55BDF18E.xml (10/15)
2025-07-10 16:31:15,235 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:31:15,235 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: DC82A272-2FA8-4F2F-A807-6B6F55BDF18E.xml
2025-07-10 16:31:15,236 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: DC82A272-2FA8-4F2F-A807-6B6F55BDF18E.xml
2025-07-10 16:31:15,239 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:31:15,244 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: DC82A272-2FA8-4F2F-A807-6B6F55BDF18E
2025-07-10 16:31:15,247 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:15,248 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:15,251 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 30.49s ago] ('DC82A272-2FA8-4F2F-A807-6B6F55BDF18E', 1, 0)
2025-07-10 16:31:15,252 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:15,252 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 3 items
2025-07-10 16:31:15,252 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:15,255 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:15,255 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 30.41s ago] ('sku_5fdb5cfc_47131821_desengrasante_liquido', 1, 0)
2025-07-10 16:31:15,255 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:15,255 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_5fdb5cfc_47131821_desengrasante_liquido
2025-07-10 16:31:16,586 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Detergente
2025-07-10 16:31:16,592 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Detergente (units_per_package: 1.0)
2025-07-10 16:31:16,596 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:16,601 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:16,607 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 31.76s ago] ('sku_8d7ae4ed_52152200_fibra_alambre', 1, 0)
2025-07-10 16:31:16,610 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:16,613 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_8d7ae4ed_52152200_fibra_alambre
2025-07-10 16:31:17,987 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Jabón
2025-07-10 16:31:17,989 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Jabón (units_per_package: 1.0)
2025-07-10 16:31:17,991 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:17,992 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:17,997 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 33.15s ago] ('sku_18d8e7f5_53131608_jabon', 1, 0)
2025-07-10 16:31:17,998 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:18,000 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_18d8e7f5_53131608_jabon
2025-07-10 16:31:19,392 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Jabón
2025-07-10 16:31:19,394 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Jabón (units_per_package: 1.0)
2025-07-10 16:31:19,395 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:31:19,395 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:19,397 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:19,398 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process DC82A272-2FA8-4F2F-A807-6B6F55BDF18E.xml: Failed to save invoice to database
2025-07-10 16:31:19,398 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:19,399 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:31:19,401 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 32.39s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process DC82A272-2FA8-4F2F-A807-6B6F55BDF18E.xml', '{"filename": "DC82A272-2FA8-4F2F-A807-6B6F55BDF18E.xml", "processing_time": 4.162684679031372, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 4.162684679031372, None, 'DC82A272-2FA8-4F2F-A807-6B6F55BDF18E.xml', None, '2025-07-10 23:31:19.399699')
2025-07-10 16:31:19,405 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:19,419 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved DC82A272-2FA8-4F2F-A807-6B6F55BDF18E.xml to data/failed
2025-07-10 16:31:19,420 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:31:19,421 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing E11056BF-CB35-41B5-AF5B-CFB0E089A32E.xml (11/15)
2025-07-10 16:31:19,421 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:31:19,422 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: E11056BF-CB35-41B5-AF5B-CFB0E089A32E.xml
2025-07-10 16:31:19,423 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: E11056BF-CB35-41B5-AF5B-CFB0E089A32E.xml
2025-07-10 16:31:19,432 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:31:19,432 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: E11056BF-CB35-41B5-AF5B-CFB0E089A32E
2025-07-10 16:31:19,433 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:19,434 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:19,437 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 34.68s ago] ('E11056BF-CB35-41B5-AF5B-CFB0E089A32E', 1, 0)
2025-07-10 16:31:19,439 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:19,440 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 13 items
2025-07-10 16:31:19,441 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:19,448 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:19,449 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 34.6s ago] ('sku_16b3abec_50131800_queso_ricotta', 1, 0)
2025-07-10 16:31:19,451 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:19,451 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_16b3abec_50131800_queso_ricotta
2025-07-10 16:31:20,728 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Queso
2025-07-10 16:31:20,741 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Queso (units_per_package: 1.0)
2025-07-10 16:31:20,742 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:20,743 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:20,744 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 35.9s ago] ('sku_65d00f8a_50404101_albahaca', 1, 0)
2025-07-10 16:31:20,748 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_65d00f8a_50404101_albahaca -> Vegetales
2025-07-10 16:31:20,749 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:31:20,750 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 35.81s ago] (3, '2025-07-10 23:31:20.748106', 146)
2025-07-10 16:31:20,756 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:20,766 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_f6ce5c99_50404600_lechuga_mixta
2025-07-10 16:31:20,768 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:20,768 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:20,768 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 35.92s ago] ('sku_cfc58a92_50193104_pure_de_tomate_el_fuerte', 1, 0)
2025-07-10 16:31:20,768 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:20,768 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_cfc58a92_50193104_pure_de_tomate_el_fuerte
2025-07-10 16:31:22,065 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Conservas
2025-07-10 16:31:22,065 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Conservas (units_per_package: 1.0)
2025-07-10 16:31:22,065 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_8f28f7c7_50402300_repollo_verde
2025-07-10 16:31:22,065 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_44f0bbec_50403900_calabaza_negra
2025-07-10 16:31:22,071 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_07ae298e_50304100_limon_amarillo
2025-07-10 16:31:22,071 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:22,071 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:22,074 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 37.22s ago] ('sku_d2926dd5_50131800_queso_asadero', 1, 0)
2025-07-10 16:31:22,074 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:22,075 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_d2926dd5_50131800_queso_asadero
2025-07-10 16:31:23,449 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Queso
2025-07-10 16:31:23,449 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Queso (units_per_package: 1.0)
2025-07-10 16:31:23,449 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_4d8ff92b_50404600_lechuga_bola
2025-07-10 16:31:23,455 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_c0496069_50406500_tomate_salades
2025-07-10 16:31:23,459 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg
2025-07-10 16:31:23,462 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:23,464 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:23,469 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 38.62s ago] ('sku_70ae329c_50301500_manzana_verde', 1, 0)
2025-07-10 16:31:23,474 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_70ae329c_50301500_manzana_verde -> Vegetales
2025-07-10 16:31:23,475 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:31:23,475 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 38.53s ago] (3, '2025-07-10 23:31:23.473137', 131)
2025-07-10 16:31:23,483 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:23,492 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:23,494 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:23,496 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 38.64s ago] ('sku_a1e4b9dc_50221303_maicena_fecula_de_maiz', 1, 0)
2025-07-10 16:31:23,501 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:23,502 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_a1e4b9dc_50221303_maicena_fecula_de_maiz
2025-07-10 16:31:24,862 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Harinas
2025-07-10 16:31:24,863 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Harinas (units_per_package: 1.0)
2025-07-10 16:31:24,865 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:31:24,866 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:24,867 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:24,869 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process E11056BF-CB35-41B5-AF5B-CFB0E089A32E.xml: Failed to save invoice to database
2025-07-10 16:31:24,872 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:24,873 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:31:24,874 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 37.87s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process E11056BF-CB35-41B5-AF5B-CFB0E089A32E.xml', '{"filename": "E11056BF-CB35-41B5-AF5B-CFB0E089A32E.xml", "processing_time": 5.44680643081665, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 5.44680643081665, None, 'E11056BF-CB35-41B5-AF5B-CFB0E089A32E.xml', None, '2025-07-10 23:31:24.873184')
2025-07-10 16:31:24,880 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:24,890 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved E11056BF-CB35-41B5-AF5B-CFB0E089A32E.xml to data/failed
2025-07-10 16:31:24,890 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:31:24,893 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing E507A17F-A130-4C08-8B4F-0FD300D02C85.xml (12/15)
2025-07-10 16:31:24,893 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:31:24,894 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: E507A17F-A130-4C08-8B4F-0FD300D02C85.xml
2025-07-10 16:31:24,894 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: E507A17F-A130-4C08-8B4F-0FD300D02C85.xml
2025-07-10 16:31:24,896 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:31:24,897 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: E507A17F-A130-4C08-8B4F-0FD300D02C85
2025-07-10 16:31:24,898 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:24,901 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:24,904 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.14s ago] ('E507A17F-A130-4C08-8B4F-0FD300D02C85', 1, 0)
2025-07-10 16:31:24,906 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:24,910 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 1 items
2025-07-10 16:31:24,911 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:24,912 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:24,914 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.06s ago] ('sku_8fb2706b_81112221_poliza_de_soporte_remoto_intermedia_mens', 1, 0)
2025-07-10 16:31:24,915 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:24,917 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_8fb2706b_81112221_poliza_de_soporte_remoto_intermedia_mens
2025-07-10 16:31:26,154 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Gastos Generales -> Servicios Administrativos
2025-07-10 16:31:26,154 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Gastos Generales -> Servicios Administrativos (units_per_package: 1.0)
2025-07-10 16:31:26,169 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:31:26,171 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:26,171 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:26,171 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process E507A17F-A130-4C08-8B4F-0FD300D02C85.xml: Failed to save invoice to database
2025-07-10 16:31:26,175 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:26,176 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:31:26,178 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 39.17s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process E507A17F-A130-4C08-8B4F-0FD300D02C85.xml', '{"filename": "E507A17F-A130-4C08-8B4F-0FD300D02C85.xml", "processing_time": 1.2768528461456299, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 1.2768528461456299, None, 'E507A17F-A130-4C08-8B4F-0FD300D02C85.xml', None, '2025-07-10 23:31:26.176345')
2025-07-10 16:31:26,183 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:26,194 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved E507A17F-A130-4C08-8B4F-0FD300D02C85.xml to data/failed
2025-07-10 16:31:26,194 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:31:26,195 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml (13/15)
2025-07-10 16:31:26,196 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:31:26,196 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml
2025-07-10 16:31:26,196 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml
2025-07-10 16:31:26,206 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:31:26,208 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: FBDD0E56-11A1-49B9-95C2-FD243E95986B
2025-07-10 16:31:26,209 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:26,211 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:26,213 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 41.45s ago] ('FBDD0E56-11A1-49B9-95C2-FD243E95986B', 1, 0)
2025-07-10 16:31:26,213 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:26,217 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 21 items
2025-07-10 16:31:26,221 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_4d8ff92b_50404600_lechuga_bola
2025-07-10 16:31:26,222 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_5a200fb8_50131800_queso_cheddar_cheddar_fuerte
2025-07-10 16:31:26,225 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_bd6f7e4b_50112010_pierna_de_pollo
2025-07-10 16:31:26,225 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_6b45f921_50404600_lechuga_romana_baby
2025-07-10 16:31:26,225 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_f6ce5c99_50404600_lechuga_mixta
2025-07-10 16:31:26,225 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_11cd495e_50401700_aguacate
2025-07-10 16:31:26,228 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_70ae329c_50301500_manzana_verde
2025-07-10 16:31:26,230 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_4770c1ef_50402800_acelga
2025-07-10 16:31:26,230 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_75903dde_50404803_champiñon
2025-07-10 16:31:26,233 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_15acbdb3_50404125_tomillo
2025-07-10 16:31:26,238 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:26,239 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:26,240 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 41.39s ago] ('sku_b3f78bc6_50401806_frijol_pinto', 1, 0)
2025-07-10 16:31:26,243 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_b3f78bc6_50401806_frijol_pinto -> Abarrotes
2025-07-10 16:31:26,244 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:31:26,245 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 41.3s ago] (2, '2025-07-10 23:31:26.242498', 36)
2025-07-10 16:31:26,254 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:26,261 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:26,263 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:26,263 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 41.41s ago] ('sku_5ac938a8_50221300_tortilla_maiz', 1, 0)
2025-07-10 16:31:26,271 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_5ac938a8_50221300_tortilla_maiz -> Abarrotes
2025-07-10 16:31:26,271 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:31:26,272 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 41.33s ago] (3, '2025-07-10 23:31:26.271119', 48)
2025-07-10 16:31:26,276 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:26,284 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_d2926dd5_50131800_queso_asadero
2025-07-10 16:31:26,288 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_07ae298e_50304100_limon_amarillo
2025-07-10 16:31:26,289 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:26,289 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:26,292 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 41.44s ago] ('sku_ffcedf08_50202301_agua_tonica', 1, 0)
2025-07-10 16:31:26,293 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:26,294 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_ffcedf08_50202301_agua_tonica
2025-07-10 16:31:27,571 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Refrescos
2025-07-10 16:31:27,571 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Refrescos (units_per_package: 1.0)
2025-07-10 16:31:27,571 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_141a86f5_10161506_naranja
2025-07-10 16:31:27,576 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg
2025-07-10 16:31:27,577 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:27,577 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:27,583 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 42.73s ago] ('sku_7a192569_50131800_queso_cheddar_cheddar_suave', 1, 0)
2025-07-10 16:31:27,584 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:27,585 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_7a192569_50131800_queso_cheddar_cheddar_suave
2025-07-10 16:31:29,232 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Queso
2025-07-10 16:31:29,236 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Queso (units_per_package: 1.0)
2025-07-10 16:31:29,236 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:29,236 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:29,242 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.39s ago] ('sku_f3336f27_50191500_sopa_barilla_codo_500gr', 1, 0)
2025-07-10 16:31:29,243 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:29,243 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_f3336f27_50191500_sopa_barilla_codo_500gr
2025-07-10 16:31:31,058 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Otros-a
2025-07-10 16:31:31,058 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Otros-a (units_per_package: 1.0)
2025-07-10 16:31:31,070 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_8f28f7c7_50402300_repollo_verde
2025-07-10 16:31:31,070 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:31,075 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:31,078 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 46.23s ago] ('sku_3a5d684a_15101605_carbon_agranel', 1, 0)
2025-07-10 16:31:31,080 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_3a5d684a_15101605_carbon_agranel -> Abarrotes
2025-07-10 16:31:31,084 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:31:31,088 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 46.14s ago] (3, '2025-07-10 23:31:31.080570', 39)
2025-07-10 16:31:31,093 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:31,104 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:31:31,106 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:31,106 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:31,107 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml: Failed to save invoice to database
2025-07-10 16:31:31,109 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:31,109 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:31:31,112 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.11s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml', '{"filename": "FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml", "processing_time": 4.91075587272644, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 4.91075587272644, None, 'FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml', None, '2025-07-10 23:31:31.109445')
2025-07-10 16:31:31,118 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:31,129 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml to data/failed
2025-07-10 16:31:31,134 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:31:31,135 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml (14/15)
2025-07-10 16:31:31,136 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:31:31,137 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml
2025-07-10 16:31:31,138 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml
2025-07-10 16:31:31,141 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:31:31,142 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: FDE6B84B-D0D2-481D-9F46-749D780FFFEE
2025-07-10 16:31:31,142 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:31,146 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:31,150 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 46.39s ago] ('FDE6B84B-D0D2-481D-9F46-749D780FFFEE', 1, 0)
2025-07-10 16:31:31,153 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:31,154 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 12 items
2025-07-10 16:31:31,155 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_3823c19d_50405300_cebolla_blanca
2025-07-10 16:31:31,155 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:31,157 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:31,159 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 46.31s ago] ('sku_6d2191f9_50221303_maicena_425gr', 1, 0)
2025-07-10 16:31:31,159 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:31,159 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_6d2191f9_50221303_maicena_425gr
2025-07-10 16:31:32,463 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Harinas
2025-07-10 16:31:32,464 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Harinas (units_per_package: 1.0)
2025-07-10 16:31:32,466 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:32,466 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:32,468 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 47.62s ago] ('sku_d466594e_50405700_papa_russet', 1, 0)
2025-07-10 16:31:32,470 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_d466594e_50405700_papa_russet -> Vegetales
2025-07-10 16:31:32,471 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:31:32,473 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 47.53s ago] (3, '2025-07-10 23:31:32.470886', 152)
2025-07-10 16:31:32,478 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:32,489 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:32,492 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:32,493 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 47.64s ago] ('sku_dd599020_50161509_azucar', 1, 0)
2025-07-10 16:31:32,495 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_dd599020_50161509_azucar -> Abarrotes
2025-07-10 16:31:32,497 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:31:32,500 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 47.56s ago] (3, '2025-07-10 23:31:32.495267', 21)
2025-07-10 16:31:32,505 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:32,513 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_547ba3ea_50171551_sal_la_fina
2025-07-10 16:31:32,516 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_f355fb89_50403800_ajo
2025-07-10 16:31:32,522 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:32,523 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:32,527 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 47.68s ago] ('sku_b8e71b2d_50101700_almendra', 1, 0)
2025-07-10 16:31:32,530 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:32,534 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_b8e71b2d_50101700_almendra
2025-07-10 16:31:33,715 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Nueces y Semillas
2025-07-10 16:31:33,715 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Nueces y Semillas (units_per_package: 1.0)
2025-07-10 16:31:33,715 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_65d00f8a_50404101_albahaca
2025-07-10 16:31:33,715 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_80bf8a82_50401900_betabel
2025-07-10 16:31:33,715 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:33,728 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:33,729 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 48.88s ago] ('sku_822118da_50101717_nuez', 1, 0)
2025-07-10 16:31:33,731 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_822118da_50101717_nuez -> Abarrotes
2025-07-10 16:31:33,732 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:31:33,733 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 48.79s ago] (3, '2025-07-10 23:31:33.731335', 38)
2025-07-10 16:31:33,739 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:33,748 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_00d189e9_50193105_panco
2025-07-10 16:31:33,751 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_bd6f7e4b_50112010_pierna_de_pollo
2025-07-10 16:31:33,754 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:31:33,754 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:33,755 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:33,757 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml: Failed to save invoice to database
2025-07-10 16:31:33,760 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:33,762 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:31:33,764 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 46.76s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml', '{"filename": "FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml", "processing_time": 2.6199769973754883, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 2.6199769973754883, None, 'FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml', None, '2025-07-10 23:31:33.761430')
2025-07-10 16:31:33,773 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:33,785 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml to data/failed
2025-07-10 16:31:33,787 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:31:33,791 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing db7ca908-83b2-49ab-8c86-649a9b9ba470.xml (15/15)
2025-07-10 16:31:33,791 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:31:33,792 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: db7ca908-83b2-49ab-8c86-649a9b9ba470.xml
2025-07-10 16:31:33,793 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: db7ca908-83b2-49ab-8c86-649a9b9ba470.xml
2025-07-10 16:31:33,801 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:31:33,801 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: db7ca908-83b2-49ab-8c86-649a9b9ba470
2025-07-10 16:31:33,805 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:33,807 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:33,811 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 49.05s ago] ('db7ca908-83b2-49ab-8c86-649a9b9ba470', 1, 0)
2025-07-10 16:31:33,812 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:33,815 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 7 items
2025-07-10 16:31:33,821 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:33,823 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:33,825 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 48.97s ago] ('sku_0334f552_50202200_aperitivo_vermouth_carpano_classico_rosso', 1, 0)
2025-07-10 16:31:33,826 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:33,828 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_0334f552_50202200_aperitivo_vermouth_carpano_classico_rosso
2025-07-10 16:31:35,029 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Destilados
2025-07-10 16:31:35,029 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Destilados (units_per_package: 1.0)
2025-07-10 16:31:35,029 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:35,029 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:35,037 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 50.19s ago] ('sku_a0499d41_50202200_aperitivo_vermouth_martini_extra_dry_750_', 1, 0)
2025-07-10 16:31:35,039 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:35,041 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_a0499d41_50202200_aperitivo_vermouth_martini_extra_dry_750_
2025-07-10 16:31:36,221 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Destilados
2025-07-10 16:31:36,224 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Destilados (units_per_package: 1.0)
2025-07-10 16:31:36,224 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:36,224 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:36,228 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 51.38s ago] ('sku_9bcaf72a_50202200_licor_campari_750_ml_licor_campari_750_ml', 1, 0)
2025-07-10 16:31:36,228 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:36,230 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_9bcaf72a_50202200_licor_campari_750_ml_licor_campari_750_ml
2025-07-10 16:31:37,550 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Destilados
2025-07-10 16:31:37,550 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Destilados (units_per_package: 1.0)
2025-07-10 16:31:37,550 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:37,559 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:37,560 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 52.71s ago] ('sku_514701de_50202200_licor_fernet_branca_de_hierbas_750_ml_lic', 1, 0)
2025-07-10 16:31:37,563 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:37,563 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_514701de_50202200_licor_fernet_branca_de_hierbas_750_ml_lic
2025-07-10 16:31:39,006 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Destilados
2025-07-10 16:31:39,007 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Destilados (units_per_package: 1.0)
2025-07-10 16:31:39,010 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:39,011 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:39,013 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 54.16s ago] ('sku_4d7e37ed_50202200_tequila_siete_leguas_reposado_700_ml', 1, 0)
2025-07-10 16:31:39,015 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:39,016 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_4d7e37ed_50202200_tequila_siete_leguas_reposado_700_ml
2025-07-10 16:31:40,287 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Destilados
2025-07-10 16:31:40,288 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Destilados (units_per_package: 1.0)
2025-07-10 16:31:40,289 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:40,289 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:40,295 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 55.44s ago] ('sku_1848377d_50202200_vodka_absolut_pera_750_ml_vodka_absolut_p', 1, 0)
2025-07-10 16:31:40,297 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:40,298 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_1848377d_50202200_vodka_absolut_pera_750_ml_vodka_absolut_p
2025-07-10 16:31:41,710 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Destilados
2025-07-10 16:31:41,710 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Destilados (units_per_package: 1.0)
2025-07-10 16:31:41,710 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:41,710 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:31:41,710 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 56.87s ago] ('sku_9d908873_50202200_vodka_titos_handmade_750_ml_vodka_titos_h', 1, 0)
2025-07-10 16:31:41,710 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:41,710 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_9d908873_50202200_vodka_titos_handmade_750_ml_vodka_titos_h
2025-07-10 16:31:42,994 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Destilados
2025-07-10 16:31:42,995 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Destilados (units_per_package: 1.0)
2025-07-10 16:31:42,996 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:31:42,996 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:42,999 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:31:42,999 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process db7ca908-83b2-49ab-8c86-649a9b9ba470.xml: Failed to save invoice to database
2025-07-10 16:31:43,002 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:31:43,005 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:31:43,006 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 56s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process db7ca908-83b2-49ab-8c86-649a9b9ba470.xml', '{"filename": "db7ca908-83b2-49ab-8c86-649a9b9ba470.xml", "processing_time": 9.207089185714722, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 9.207089185714722, None, 'db7ca908-83b2-49ab-8c86-649a9b9ba470.xml', None, '2025-07-10 23:31:43.005021')
2025-07-10 16:31:43,015 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:31:43,025 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved db7ca908-83b2-49ab-8c86-649a9b9ba470.xml to data/failed
2025-07-10 16:31:43,032 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:31:43,034 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - FINAL PROCESSING SUMMARY
2025-07-10 16:31:43,036 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:31:43,037 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Total files: 15
2025-07-10 16:31:43,042 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Successfully processed: 0
2025-07-10 16:31:43,043 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Failed: 15
2025-07-10 16:31:43,048 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Success rate: 0.0%
2025-07-10 16:31:43,049 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Total processing time: 58.43s
2025-07-10 16:31:43,050 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Average time per file: 3.90s
2025-07-10 16:31:43,053 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Inbox processing completed
2025-07-10 16:34:11,024 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Logging configured for environment: dev
2025-07-10 16:34:11,026 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Log level: DEBUG
2025-07-10 16:34:11,026 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Log directory: logs
2025-07-10 16:34:11,027 - __main__ - INFO - File: main.py - File: main.py - File: main.py - CFDI Processing System v4 started
2025-07-10 16:34:11,027 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Environment: dev
2025-07-10 16:34:11,028 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Log level: DEBUG
2025-07-10 16:34:11,030 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Starting inbox processing...
2025-07-10 16:34:11,030 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - CFDI Parser initialized
2025-07-10 16:34:11,044 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database connection established: sqlite:///data/database/cfdi_system_v4.db
2025-07-10 16:34:11,045 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database Manager initialized
2025-07-10 16:34:11,046 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API initialized with model: gemini-2.0-flash
2025-07-10 16:34:11,047 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Loaded P62 categories: 11 main categories
2025-07-10 16:34:11,048 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - GeminiClassifier initialized successfully
2025-07-10 16:34:11,049 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database connection established: sqlite:///data/database/cfdi_system_v4.db
2025-07-10 16:34:11,050 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database Manager initialized
2025-07-10 16:34:11,050 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - BatchProcessor initialized successfully
2025-07-10 16:34:11,052 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Starting inbox processing: data/inbox
2025-07-10 16:34:11,057 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Found 74 XML files in data/inbox
2025-07-10 16:34:11,058 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [FILES] Processing 74 XML files
2025-07-10 16:34:11,058 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:11,060 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml (1/74)
2025-07-10 16:34:11,061 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:11,065 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml
2025-07-10 16:34:11,067 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml
2025-07-10 16:34:11,109 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:11,109 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 0C4370C7-7AD0-4050-8912-B5CD2B5468BF
2025-07-10 16:34:11,159 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:11,172 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:11,175 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00356s] ('0C4370C7-7AD0-4050-8912-B5CD2B5468BF', 1, 0)
2025-07-10 16:34:11,183 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 0C4370C7-7AD0-4050-8912-B5CD2B5468BF already exists (ID: 64)
2025-07-10 16:34:11,188 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml
2025-07-10 16:34:11,189 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml
2025-07-10 16:34:11,189 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-03 00:00:00
2025-07-10 16:34:11,190 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1476.74
2025-07-10 16:34:11,191 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:11,197 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:11,199 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:11,202 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 0.03055s ago] ('0C4370C7-7AD0-4050-8912-B5CD2B5468BF', 1, 0)
2025-07-10 16:34:11,206 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:34:11,207 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 0C4370C7-7AD0-4050-8912-B5CD2B5468BF
2025-07-10 16:34:11,208 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml (ID: 64)
2025-07-10 16:34:11,208 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml
2025-07-10 16:34:11,209 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $1476.74 vs $1476.74
2025-07-10 16:34:11,210 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:34:11,211 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:11,213 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:11,220 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:11,220 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00140s] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml', '{"filename": "0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml", "processing_time": 0.14808034896850586, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 0C4370C7-7AD0-4050-8912-B5CD2B5468BF already exists"}', 0.14808034896850586, None, '0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml', None, '2025-07-10 23:34:11.220020')
2025-07-10 16:34:11,228 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:11,237 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml - moved to failed directory
2025-07-10 16:34:11,241 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml to data/failed
2025-07-10 16:34:11,242 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:11,243 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 0F8A00BD-D32D-4F47-851A-F1EBC7AEE7B3.xml (2/74)
2025-07-10 16:34:11,244 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:11,244 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 0F8A00BD-D32D-4F47-851A-F1EBC7AEE7B3.xml
2025-07-10 16:34:11,247 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 0F8A00BD-D32D-4F47-851A-F1EBC7AEE7B3.xml
2025-07-10 16:34:11,255 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:11,257 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 0F8A00BD-D32D-4F47-851A-F1EBC7AEE7B3
2025-07-10 16:34:11,258 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:11,259 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:11,262 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 0.09157s ago] ('0F8A00BD-D32D-4F47-851A-F1EBC7AEE7B3', 1, 0)
2025-07-10 16:34:11,266 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:11,268 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 2 items
2025-07-10 16:34:11,274 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:11,277 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:11,277 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00247s] ('sku_222f7a58_50112009_jamon_serrano_100g_tgm_jamon_serrano_100g', 1, 0)
2025-07-10 16:34:11,290 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:11,291 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_222f7a58_50112009_jamon_serrano_100g_tgm_jamon_serrano_100g
2025-07-10 16:34:12,793 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Proteinas -> Carne de cerdo
2025-07-10 16:34:12,794 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Proteinas -> Carne de cerdo (units_per_package: 1.0)
2025-07-10 16:34:12,798 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:12,800 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:12,803 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 1.521s ago] ('sku_b7d7513f_50111500_costillas_baby_back_de_cerdo_swift_costil', 1, 0)
2025-07-10 16:34:12,805 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:12,808 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_b7d7513f_50111500_costillas_baby_back_de_cerdo_swift_costil
2025-07-10 16:34:14,314 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Proteinas -> Carne de cerdo
2025-07-10 16:34:14,315 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Proteinas -> Carne de cerdo (units_per_package: 1.0)
2025-07-10 16:34:14,317 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:34:14,317 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:34:14,319 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:34:14,319 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 0F8A00BD-D32D-4F47-851A-F1EBC7AEE7B3.xml: Failed to save invoice to database
2025-07-10 16:34:14,322 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:14,324 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:14,325 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 3.103s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 0F8A00BD-D32D-4F47-851A-F1EBC7AEE7B3.xml', '{"filename": "0F8A00BD-D32D-4F47-851A-F1EBC7AEE7B3.xml", "processing_time": 3.0750293731689453, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 3.0750293731689453, None, '0F8A00BD-D32D-4F47-851A-F1EBC7AEE7B3.xml', None, '2025-07-10 23:34:14.323747')
2025-07-10 16:34:14,325 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:14,344 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 0F8A00BD-D32D-4F47-851A-F1EBC7AEE7B3.xml to data/failed
2025-07-10 16:34:14,345 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:14,346 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 14EC3352-40A7-4008-9A6F-882A27D4E343.xml (3/74)
2025-07-10 16:34:14,347 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:14,348 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 14EC3352-40A7-4008-9A6F-882A27D4E343.xml
2025-07-10 16:34:14,348 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 14EC3352-40A7-4008-9A6F-882A27D4E343.xml
2025-07-10 16:34:14,358 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:14,362 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 14EC3352-40A7-4008-9A6F-882A27D4E343
2025-07-10 16:34:14,362 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:14,362 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:14,371 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 3.199s ago] ('14EC3352-40A7-4008-9A6F-882A27D4E343', 1, 0)
2025-07-10 16:34:14,372 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:14,373 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 3 items
2025-07-10 16:34:14,375 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:14,375 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:14,382 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 3.099s ago] ('sku_3e618be3_10101802_almeja_chocolata_viva', 1, 0)
2025-07-10 16:34:14,382 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:14,385 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_3e618be3_10101802_almeja_chocolata_viva
2025-07-10 16:34:15,922 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Proteinas -> Mariscos
2025-07-10 16:34:15,923 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Proteinas -> Mariscos (units_per_package: 1.0)
2025-07-10 16:34:15,923 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:15,926 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:15,932 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 4.65s ago] ('sku_f915ab6b_10101800_almeja_mantequilla', 1, 0)
2025-07-10 16:34:15,932 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:15,936 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_f915ab6b_10101800_almeja_mantequilla
2025-07-10 16:34:17,564 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Proteinas -> Mariscos
2025-07-10 16:34:17,564 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Proteinas -> Mariscos (units_per_package: 1.0)
2025-07-10 16:34:17,564 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:17,572 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:17,575 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 6.293s ago] ('sku_f61d9820_10101804_ostion_japones_vivo', 1, 0)
2025-07-10 16:34:17,575 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:17,582 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_f61d9820_10101804_ostion_japones_vivo
2025-07-10 16:34:18,968 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Proteinas -> Mariscos
2025-07-10 16:34:18,972 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Proteinas -> Mariscos (units_per_package: 1.0)
2025-07-10 16:34:18,974 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:34:18,977 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:34:18,982 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:34:18,984 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 14EC3352-40A7-4008-9A6F-882A27D4E343.xml: Failed to save invoice to database
2025-07-10 16:34:18,988 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:18,990 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:18,991 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 7.77s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 14EC3352-40A7-4008-9A6F-882A27D4E343.xml', '{"filename": "14EC3352-40A7-4008-9A6F-882A27D4E343.xml", "processing_time": 4.635428190231323, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 4.635428190231323, None, '14EC3352-40A7-4008-9A6F-882A27D4E343.xml', None, '2025-07-10 23:34:18.990451')
2025-07-10 16:34:19,005 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:19,019 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 14EC3352-40A7-4008-9A6F-882A27D4E343.xml to data/failed
2025-07-10 16:34:19,024 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:19,027 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 1C3D24B8-AE7B-4C38-9F3A-39BA15225883.xml (4/74)
2025-07-10 16:34:19,028 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:19,029 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 1C3D24B8-AE7B-4C38-9F3A-39BA15225883.xml
2025-07-10 16:34:19,030 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 1C3D24B8-AE7B-4C38-9F3A-39BA15225883.xml
2025-07-10 16:34:19,068 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:19,068 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 1C3D24B8-AE7B-4C38-9F3A-39BA15225883
2025-07-10 16:34:19,070 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:19,070 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:19,077 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 7.905s ago] ('1C3D24B8-AE7B-4C38-9F3A-39BA15225883', 1, 0)
2025-07-10 16:34:19,079 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:19,080 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 20 items
2025-07-10 16:34:19,082 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:19,083 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:19,085 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 7.802s ago] ('sku_9a57e1c2_50304100_limon_sin_semilla', 1, 0)
2025-07-10 16:34:19,087 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_9a57e1c2_50304100_limon_sin_semilla -> Vegetales
2025-07-10 16:34:19,093 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:19,093 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00128s] (4, '2025-07-10 23:34:19.087636', 127)
2025-07-10 16:34:19,104 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:19,115 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:19,116 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:19,117 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 7.835s ago] ('sku_141a86f5_10161506_naranja', 1, 0)
2025-07-10 16:34:19,118 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_141a86f5_10161506_naranja -> Vegetales
2025-07-10 16:34:19,119 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:19,120 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 0.02661s ago] (4, '2025-07-10 23:34:19.118706', 128)
2025-07-10 16:34:19,124 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:19,135 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:19,137 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:19,137 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 7.856s ago] ('sku_4fe3aae4_50171551_sal_la_fina_1_kg', 1, 0)
2025-07-10 16:34:19,137 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_4fe3aae4_50171551_sal_la_fina_1_kg -> Abarrotes
2025-07-10 16:34:19,146 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:19,147 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 0.05292s ago] (3, '2025-07-10 23:34:19.137771', 13)
2025-07-10 16:34:19,151 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:19,162 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:19,163 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:19,165 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 7.882s ago] ('sku_34847f00_50171800_tajin_grande', 1, 0)
2025-07-10 16:34:19,166 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:19,167 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_34847f00_50171800_tajin_grande
2025-07-10 16:34:20,315 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Chiles
2025-07-10 16:34:20,323 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Chiles (units_per_package: 1.0)
2025-07-10 16:34:20,326 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:20,327 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:20,330 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 9.047s ago] ('sku_f355fb89_50403800_ajo', 1, 0)
2025-07-10 16:34:20,333 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_f355fb89_50403800_ajo -> Vegetales
2025-07-10 16:34:20,341 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:20,344 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 1.25s ago] (4, '2025-07-10 23:34:20.332661', 149)
2025-07-10 16:34:20,353 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:20,365 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:20,370 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:20,376 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 9.093s ago] ('sku_11cd495e_50401700_aguacate', 1, 0)
2025-07-10 16:34:20,379 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_11cd495e_50401700_aguacate -> Vegetales
2025-07-10 16:34:20,379 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:20,382 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 1.287s ago] (4, '2025-07-10 23:34:20.378695', 126)
2025-07-10 16:34:20,387 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:20,400 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:20,403 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:20,406 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 9.123s ago] ('sku_09573e71_50417006_arugula', 1, 0)
2025-07-10 16:34:20,409 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:20,410 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_09573e71_50417006_arugula
2025-07-10 16:34:21,539 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Verduras
2025-07-10 16:34:21,539 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Verduras (units_per_package: 1.0)
2025-07-10 16:34:21,541 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:21,542 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:21,544 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 10.26s ago] ('sku_5a200fb8_50131800_queso_cheddar_cheddar_fuerte', 1, 0)
2025-07-10 16:34:21,546 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:21,547 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_5a200fb8_50131800_queso_cheddar_cheddar_fuerte
2025-07-10 16:34:22,993 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Queso
2025-07-10 16:34:22,997 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Queso (units_per_package: 1.0)
2025-07-10 16:34:23,001 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:23,006 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:23,010 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 11.73s ago] ('sku_1f9cc88b_50131800_queso_cabra_blanco_340gr', 1, 0)
2025-07-10 16:34:23,012 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:23,020 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_1f9cc88b_50131800_queso_cabra_blanco_340gr
2025-07-10 16:34:24,450 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Queso
2025-07-10 16:34:24,452 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Queso (units_per_package: 1.0)
2025-07-10 16:34:24,461 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:24,463 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:24,473 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 13.19s ago] ('sku_f6ce5c99_50404600_lechuga_mixta', 1, 0)
2025-07-10 16:34:24,477 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:24,480 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_f6ce5c99_50404600_lechuga_mixta
2025-07-10 16:34:25,795 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Verduras
2025-07-10 16:34:25,800 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Verduras (units_per_package: 1.0)
2025-07-10 16:34:25,807 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:25,811 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:25,818 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.54s ago] ('sku_14c77eea_50414500_kale', 1, 0)
2025-07-10 16:34:25,820 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_14c77eea_50414500_kale -> Vegetales
2025-07-10 16:34:25,822 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:25,825 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 6.731s ago] (4, '2025-07-10 23:34:25.820884', 142)
2025-07-10 16:34:25,834 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:25,852 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:25,855 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:25,861 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.58s ago] ('sku_5903a78f_50151513_aceite_cristal', 1, 0)
2025-07-10 16:34:25,870 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:25,872 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_5903a78f_50151513_aceite_cristal
2025-07-10 16:34:26,973 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Aceite
2025-07-10 16:34:26,974 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Aceite (units_per_package: 1.0)
2025-07-10 16:34:26,975 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:26,978 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:26,978 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 15.7s ago] ('sku_ace00938_50407018_garbanzo', 1, 0)
2025-07-10 16:34:26,978 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:26,978 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_ace00938_50407018_garbanzo
2025-07-10 16:34:28,231 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Legumbres
2025-07-10 16:34:28,233 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Legumbres (units_per_package: 1.0)
2025-07-10 16:34:28,238 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:28,242 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:28,249 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 16.97s ago] ('sku_9f7ef12b_52121602_servilleta_delsey', 1, 0)
2025-07-10 16:34:28,253 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:28,255 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_9f7ef12b_52121602_servilleta_delsey
2025-07-10 16:34:29,575 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Servilletas
2025-07-10 16:34:29,575 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Servilletas (units_per_package: 1.0)
2025-07-10 16:34:29,578 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:29,579 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:29,580 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 18.3s ago] ('sku_bd6f7e4b_50112010_pierna_de_pollo', 1, 0)
2025-07-10 16:34:29,582 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_bd6f7e4b_50112010_pierna_de_pollo -> Proteinas
2025-07-10 16:34:29,583 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:29,583 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 10.49s ago] (4, '2025-07-10 23:34:29.582218', 90)
2025-07-10 16:34:29,589 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:29,595 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:29,596 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:29,598 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 18.32s ago] ('sku_65d00f8a_50404101_albahaca', 1, 0)
2025-07-10 16:34:29,599 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_65d00f8a_50404101_albahaca -> Vegetales
2025-07-10 16:34:29,601 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:29,601 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 10.51s ago] (4, '2025-07-10 23:34:29.599280', 146)
2025-07-10 16:34:29,604 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:29,615 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:29,618 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:29,622 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 18.34s ago] ('sku_44f0bbec_50403900_calabaza_negra', 1, 0)
2025-07-10 16:34:29,625 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_44f0bbec_50403900_calabaza_negra -> Vegetales
2025-07-10 16:34:29,625 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:29,627 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 10.53s ago] (4, '2025-07-10 23:34:29.624883', 145)
2025-07-10 16:34:29,629 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:29,637 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:29,638 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:29,639 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 18.36s ago] ('sku_9694c503_50403500_berenjena', 1, 0)
2025-07-10 16:34:29,642 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_9694c503_50403500_berenjena -> Vegetales
2025-07-10 16:34:29,643 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:29,644 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 10.55s ago] (4, '2025-07-10 23:34:29.642022', 148)
2025-07-10 16:34:29,650 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:29,658 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:29,661 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:29,661 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 18.38s ago] ('sku_1414ace6_50192600_atun', 1, 0)
2025-07-10 16:34:29,661 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:29,661 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_1414ace6_50192600_atun
2025-07-10 16:34:30,882 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Proteinas -> Pescado
2025-07-10 16:34:30,882 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Proteinas -> Pescado (units_per_package: 1.0)
2025-07-10 16:34:30,882 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:30,889 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:30,890 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 19.61s ago] ('sku_f95bb8a3_50307024_pepino', 1, 0)
2025-07-10 16:34:30,891 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_f95bb8a3_50307024_pepino -> Vegetales
2025-07-10 16:34:30,893 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:30,893 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 11.8s ago] (4, '2025-07-10 23:34:30.891797', 157)
2025-07-10 16:34:30,900 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:30,911 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:34:30,912 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:34:30,913 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:34:30,913 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 1C3D24B8-AE7B-4C38-9F3A-39BA15225883.xml: Failed to save invoice to database
2025-07-10 16:34:30,916 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:30,919 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:30,924 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 19.7s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 1C3D24B8-AE7B-4C38-9F3A-39BA15225883.xml', '{"filename": "1C3D24B8-AE7B-4C38-9F3A-39BA15225883.xml", "processing_time": 11.883958578109741, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 11.883958578109741, None, '1C3D24B8-AE7B-4C38-9F3A-39BA15225883.xml', None, '2025-07-10 23:34:30.919191')
2025-07-10 16:34:30,929 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:30,938 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 1C3D24B8-AE7B-4C38-9F3A-39BA15225883.xml to data/failed
2025-07-10 16:34:30,939 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:30,940 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml (5/74)
2025-07-10 16:34:30,940 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:30,941 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml
2025-07-10 16:34:30,942 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml
2025-07-10 16:34:30,977 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:30,977 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 1C70987C-FC75-4A90-81D8-9B9D2C51C084
2025-07-10 16:34:30,986 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:30,990 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:30,999 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 19.83s ago] ('1C70987C-FC75-4A90-81D8-9B9D2C51C084', 1, 0)
2025-07-10 16:34:31,004 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 1C70987C-FC75-4A90-81D8-9B9D2C51C084 already exists (ID: 65)
2025-07-10 16:34:31,007 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml
2025-07-10 16:34:31,011 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml
2025-07-10 16:34:31,014 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-10 16:34:31,014 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $264.00
2025-07-10 16:34:31,014 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:31,021 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:31,028 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:31,028 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 19.86s ago] ('1C70987C-FC75-4A90-81D8-9B9D2C51C084', 1, 0)
2025-07-10 16:34:31,028 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:34:31,044 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 1C70987C-FC75-4A90-81D8-9B9D2C51C084
2025-07-10 16:34:31,046 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml (ID: 65)
2025-07-10 16:34:31,050 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml
2025-07-10 16:34:31,056 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $264.00 vs $264.00
2025-07-10 16:34:31,057 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:34:31,057 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:31,057 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:31,069 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:31,087 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 19.86s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml', '{"filename": "1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml", "processing_time": 0.1164553165435791, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 1C70987C-FC75-4A90-81D8-9B9D2C51C084 already exists"}', 0.1164553165435791, None, '1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml', None, '2025-07-10 23:34:31.069719')
2025-07-10 16:34:31,103 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:31,115 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml - moved to failed directory
2025-07-10 16:34:31,115 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml to data/failed
2025-07-10 16:34:31,115 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:31,121 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 1CED90AB-44DC-445D-8330-FF97B0858E8D.xml (6/74)
2025-07-10 16:34:31,121 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:31,121 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 1CED90AB-44DC-445D-8330-FF97B0858E8D.xml
2025-07-10 16:34:31,127 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 1CED90AB-44DC-445D-8330-FF97B0858E8D.xml
2025-07-10 16:34:31,182 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:31,182 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 1CED90AB-44DC-445D-8330-FF97B0858E8D
2025-07-10 16:34:31,197 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:31,207 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:31,224 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.05s ago] ('1CED90AB-44DC-445D-8330-FF97B0858E8D', 1, 0)
2025-07-10 16:34:31,226 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 1CED90AB-44DC-445D-8330-FF97B0858E8D already exists (ID: 66)
2025-07-10 16:34:31,227 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 1CED90AB-44DC-445D-8330-FF97B0858E8D.xml
2025-07-10 16:34:31,228 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 1CED90AB-44DC-445D-8330-FF97B0858E8D.xml
2025-07-10 16:34:31,228 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-15 00:00:00
2025-07-10 16:34:31,229 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2679.81
2025-07-10 16:34:31,229 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:31,231 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:31,235 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:31,246 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.07s ago] ('1CED90AB-44DC-445D-8330-FF97B0858E8D', 1, 0)
2025-07-10 16:34:31,248 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:34:31,249 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 1CED90AB-44DC-445D-8330-FF97B0858E8D
2025-07-10 16:34:31,250 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 1CED90AB-44DC-445D-8330-FF97B0858E8D.xml (ID: 66)
2025-07-10 16:34:31,251 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  1CED90AB-44DC-445D-8330-FF97B0858E8D.xml
2025-07-10 16:34:31,252 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $2679.81 vs $2679.81
2025-07-10 16:34:31,255 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:34:31,256 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:31,258 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:31,261 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:31,263 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.04s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 1CED90AB-44DC-445D-8330-FF97B0858E8D.xml', '{"filename": "1CED90AB-44DC-445D-8330-FF97B0858E8D.xml", "processing_time": 0.13681554794311523, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 1CED90AB-44DC-445D-8330-FF97B0858E8D already exists"}', 0.13681554794311523, None, '1CED90AB-44DC-445D-8330-FF97B0858E8D.xml', None, '2025-07-10 23:34:31.261445')
2025-07-10 16:34:31,270 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:31,276 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 1CED90AB-44DC-445D-8330-FF97B0858E8D.xml - moved to failed directory
2025-07-10 16:34:31,287 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 1CED90AB-44DC-445D-8330-FF97B0858E8D.xml to data/failed
2025-07-10 16:34:31,289 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:31,290 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml (7/74)
2025-07-10 16:34:31,291 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:31,292 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml
2025-07-10 16:34:31,295 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml
2025-07-10 16:34:31,370 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:31,375 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 20C79FA9-E04A-4AB4-8EF1-496CA21939E7
2025-07-10 16:34:31,391 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:31,400 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:31,416 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.24s ago] ('20C79FA9-E04A-4AB4-8EF1-496CA21939E7', 1, 0)
2025-07-10 16:34:31,420 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 20C79FA9-E04A-4AB4-8EF1-496CA21939E7 already exists (ID: 67)
2025-07-10 16:34:31,430 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml
2025-07-10 16:34:31,432 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml
2025-07-10 16:34:31,435 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-10 16:34:31,438 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $697.55
2025-07-10 16:34:31,441 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:31,444 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:31,446 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:31,449 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.28s ago] ('20C79FA9-E04A-4AB4-8EF1-496CA21939E7', 1, 0)
2025-07-10 16:34:31,454 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:34:31,457 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 20C79FA9-E04A-4AB4-8EF1-496CA21939E7
2025-07-10 16:34:31,465 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml (ID: 67)
2025-07-10 16:34:31,467 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml
2025-07-10 16:34:31,468 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $697.55 vs $697.55
2025-07-10 16:34:31,469 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:34:31,471 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:31,473 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:31,475 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:31,485 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.26s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml', '{"filename": "20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml", "processing_time": 0.17945289611816406, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 20C79FA9-E04A-4AB4-8EF1-496CA21939E7 already exists"}', 0.17945289611816406, None, '20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml', None, '2025-07-10 23:34:31.475302')
2025-07-10 16:34:31,492 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:31,500 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml - moved to failed directory
2025-07-10 16:34:31,504 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml to data/failed
2025-07-10 16:34:31,506 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:31,507 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 233A87F1-B492-4265-8E1B-206DC4C46711.xml (8/74)
2025-07-10 16:34:31,508 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:31,525 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 233A87F1-B492-4265-8E1B-206DC4C46711.xml
2025-07-10 16:34:31,534 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 233A87F1-B492-4265-8E1B-206DC4C46711.xml
2025-07-10 16:34:31,605 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:31,610 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 233A87F1-B492-4265-8E1B-206DC4C46711
2025-07-10 16:34:31,612 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:31,613 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:31,621 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.45s ago] ('233A87F1-B492-4265-8E1B-206DC4C46711', 1, 0)
2025-07-10 16:34:31,624 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 233A87F1-B492-4265-8E1B-206DC4C46711 already exists (ID: 68)
2025-07-10 16:34:31,626 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 233A87F1-B492-4265-8E1B-206DC4C46711.xml
2025-07-10 16:34:31,627 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 233A87F1-B492-4265-8E1B-206DC4C46711.xml
2025-07-10 16:34:31,628 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-18 00:00:00
2025-07-10 16:34:31,629 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1683.06
2025-07-10 16:34:31,629 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:31,631 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:31,633 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:31,637 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.47s ago] ('233A87F1-B492-4265-8E1B-206DC4C46711', 1, 0)
2025-07-10 16:34:31,643 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:34:31,646 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 233A87F1-B492-4265-8E1B-206DC4C46711
2025-07-10 16:34:31,648 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 233A87F1-B492-4265-8E1B-206DC4C46711.xml (ID: 68)
2025-07-10 16:34:31,648 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  233A87F1-B492-4265-8E1B-206DC4C46711.xml
2025-07-10 16:34:31,649 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $1683.06 vs $1683.06
2025-07-10 16:34:31,650 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:34:31,650 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:31,652 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:31,653 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:31,654 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.43s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 233A87F1-B492-4265-8E1B-206DC4C46711.xml', '{"filename": "233A87F1-B492-4265-8E1B-206DC4C46711.xml", "processing_time": 0.12807893753051758, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 233A87F1-B492-4265-8E1B-206DC4C46711 already exists"}', 0.12807893753051758, None, '233A87F1-B492-4265-8E1B-206DC4C46711.xml', None, '2025-07-10 23:34:31.653221')
2025-07-10 16:34:31,665 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:31,672 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 233A87F1-B492-4265-8E1B-206DC4C46711.xml - moved to failed directory
2025-07-10 16:34:31,678 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 233A87F1-B492-4265-8E1B-206DC4C46711.xml to data/failed
2025-07-10 16:34:31,680 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:31,681 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 235D473E-9A1D-47E8-8F0F-E13058968FD6.xml (9/74)
2025-07-10 16:34:31,682 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:31,682 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 235D473E-9A1D-47E8-8F0F-E13058968FD6.xml
2025-07-10 16:34:31,683 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 235D473E-9A1D-47E8-8F0F-E13058968FD6.xml
2025-07-10 16:34:31,690 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:31,690 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 235D473E-9A1D-47E8-8F0F-E13058968FD6
2025-07-10 16:34:31,691 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:31,693 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:31,699 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.53s ago] ('235D473E-9A1D-47E8-8F0F-E13058968FD6', 1, 0)
2025-07-10 16:34:31,701 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 235D473E-9A1D-47E8-8F0F-E13058968FD6 already exists (ID: 69)
2025-07-10 16:34:31,705 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 235D473E-9A1D-47E8-8F0F-E13058968FD6.xml
2025-07-10 16:34:31,713 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 235D473E-9A1D-47E8-8F0F-E13058968FD6.xml
2025-07-10 16:34:31,714 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-17 00:00:00
2025-07-10 16:34:31,714 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $255.32
2025-07-10 16:34:31,716 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:31,718 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:31,719 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:31,726 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.55s ago] ('235D473E-9A1D-47E8-8F0F-E13058968FD6', 1, 0)
2025-07-10 16:34:31,730 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:34:31,731 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 235D473E-9A1D-47E8-8F0F-E13058968FD6
2025-07-10 16:34:31,732 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 235D473E-9A1D-47E8-8F0F-E13058968FD6.xml (ID: 69)
2025-07-10 16:34:31,733 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  235D473E-9A1D-47E8-8F0F-E13058968FD6.xml
2025-07-10 16:34:31,734 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $255.32 vs $255.32
2025-07-10 16:34:31,735 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:34:31,737 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:31,739 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:31,739 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:31,741 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.52s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 235D473E-9A1D-47E8-8F0F-E13058968FD6.xml', '{"filename": "235D473E-9A1D-47E8-8F0F-E13058968FD6.xml", "processing_time": 0.05602669715881348, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 235D473E-9A1D-47E8-8F0F-E13058968FD6 already exists"}', 0.05602669715881348, None, '235D473E-9A1D-47E8-8F0F-E13058968FD6.xml', None, '2025-07-10 23:34:31.739744')
2025-07-10 16:34:31,748 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:31,756 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 235D473E-9A1D-47E8-8F0F-E13058968FD6.xml - moved to failed directory
2025-07-10 16:34:31,758 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 235D473E-9A1D-47E8-8F0F-E13058968FD6.xml to data/failed
2025-07-10 16:34:31,762 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:31,765 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 23D18724-00D9-486E-B8DA-88BCF5007D53.xml (10/74)
2025-07-10 16:34:31,766 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:31,768 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 23D18724-00D9-486E-B8DA-88BCF5007D53.xml
2025-07-10 16:34:31,768 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 23D18724-00D9-486E-B8DA-88BCF5007D53.xml
2025-07-10 16:34:31,774 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:31,776 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 23D18724-00D9-486E-B8DA-88BCF5007D53
2025-07-10 16:34:31,781 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:31,784 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:31,786 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.61s ago] ('23D18724-00D9-486E-B8DA-88BCF5007D53', 1, 0)
2025-07-10 16:34:31,790 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 23D18724-00D9-486E-B8DA-88BCF5007D53 already exists (ID: 70)
2025-07-10 16:34:31,791 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 23D18724-00D9-486E-B8DA-88BCF5007D53.xml
2025-07-10 16:34:31,791 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 23D18724-00D9-486E-B8DA-88BCF5007D53.xml
2025-07-10 16:34:31,791 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-10 16:34:31,791 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $3397.42
2025-07-10 16:34:31,791 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:31,791 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:31,791 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:31,811 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.64s ago] ('23D18724-00D9-486E-B8DA-88BCF5007D53', 1, 0)
2025-07-10 16:34:31,817 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:34:31,819 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 23D18724-00D9-486E-B8DA-88BCF5007D53
2025-07-10 16:34:31,820 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 23D18724-00D9-486E-B8DA-88BCF5007D53.xml (ID: 70)
2025-07-10 16:34:31,820 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  23D18724-00D9-486E-B8DA-88BCF5007D53.xml
2025-07-10 16:34:31,823 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $3397.42 vs $3397.42
2025-07-10 16:34:31,823 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:34:31,827 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:31,833 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:31,834 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:31,835 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.61s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 23D18724-00D9-486E-B8DA-88BCF5007D53.xml', '{"filename": "23D18724-00D9-486E-B8DA-88BCF5007D53.xml", "processing_time": 0.06457161903381348, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 23D18724-00D9-486E-B8DA-88BCF5007D53 already exists"}', 0.06457161903381348, None, '23D18724-00D9-486E-B8DA-88BCF5007D53.xml', None, '2025-07-10 23:34:31.834596')
2025-07-10 16:34:31,844 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:31,855 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 23D18724-00D9-486E-B8DA-88BCF5007D53.xml - moved to failed directory
2025-07-10 16:34:31,860 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 23D18724-00D9-486E-B8DA-88BCF5007D53.xml to data/failed
2025-07-10 16:34:31,860 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:31,860 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 285452E8-72C8-4188-BB11-4170D357CC9B.xml (11/74)
2025-07-10 16:34:31,860 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:31,865 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 285452E8-72C8-4188-BB11-4170D357CC9B.xml
2025-07-10 16:34:31,865 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 285452E8-72C8-4188-BB11-4170D357CC9B.xml
2025-07-10 16:34:31,872 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:31,873 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 285452E8-72C8-4188-BB11-4170D357CC9B
2025-07-10 16:34:31,874 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:31,875 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:31,880 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.71s ago] ('285452E8-72C8-4188-BB11-4170D357CC9B', 1, 0)
2025-07-10 16:34:31,884 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:31,885 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 3 items
2025-07-10 16:34:31,887 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:31,889 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:31,890 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.61s ago] ('sku_80336cf3_52121602_servilleta_kirkland', 1, 0)
2025-07-10 16:34:31,893 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_80336cf3_52121602_servilleta_kirkland -> Suministros
2025-07-10 16:34:31,897 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:31,900 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 12.81s ago] (3, '2025-07-10 23:34:31.893268', 114)
2025-07-10 16:34:31,903 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:31,916 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:31,918 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:31,921 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.64s ago] ('sku_3aaebce7_24111500_bolsas_de_rollo_transparente_de_medio_kil', 1, 0)
2025-07-10 16:34:31,924 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:31,924 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_3aaebce7_24111500_bolsas_de_rollo_transparente_de_medio_kil
2025-07-10 16:34:33,452 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Bolsas
2025-07-10 16:34:33,452 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Bolsas (units_per_package: 1.0)
2025-07-10 16:34:33,454 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:33,455 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:33,456 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 22.17s ago] ('sku_23a93c8d_12163800_windex', 1, 0)
2025-07-10 16:34:33,457 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:33,458 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_23a93c8d_12163800_windex
2025-07-10 16:34:34,520 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Detergente
2025-07-10 16:34:34,520 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Detergente (units_per_package: 1.0)
2025-07-10 16:34:34,520 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:34:34,522 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:34:34,524 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:34:34,525 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 285452E8-72C8-4188-BB11-4170D357CC9B.xml: Failed to save invoice to database
2025-07-10 16:34:34,528 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:34,529 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:34,531 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 23.31s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 285452E8-72C8-4188-BB11-4170D357CC9B.xml', '{"filename": "285452E8-72C8-4188-BB11-4170D357CC9B.xml", "processing_time": 2.6593375205993652, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 2.6593375205993652, None, '285452E8-72C8-4188-BB11-4170D357CC9B.xml', None, '2025-07-10 23:34:34.529077')
2025-07-10 16:34:34,538 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:34,551 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 285452E8-72C8-4188-BB11-4170D357CC9B.xml to data/failed
2025-07-10 16:34:34,556 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:34,561 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 2DE2FB0E-380D-4DB4-801D-2DA95A989235.xml (12/74)
2025-07-10 16:34:34,566 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:34,567 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 2DE2FB0E-380D-4DB4-801D-2DA95A989235.xml
2025-07-10 16:34:34,568 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 2DE2FB0E-380D-4DB4-801D-2DA95A989235.xml
2025-07-10 16:34:34,574 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:34,575 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 2DE2FB0E-380D-4DB4-801D-2DA95A989235
2025-07-10 16:34:34,577 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:34,578 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:34,589 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 23.42s ago] ('2DE2FB0E-380D-4DB4-801D-2DA95A989235', 1, 0)
2025-07-10 16:34:34,593 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:34,593 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 7 items
2025-07-10 16:34:34,593 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:34,602 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:34,605 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 23.32s ago] ('sku_c0496069_50406500_tomate_salades', 1, 0)
2025-07-10 16:34:34,606 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_c0496069_50406500_tomate_salades -> Vegetales
2025-07-10 16:34:34,609 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:34,609 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 15.52s ago] (4, '2025-07-10 23:34:34.606114', 136)
2025-07-10 16:34:34,625 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:34,637 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_09573e71_50417006_arugula
2025-07-10 16:34:34,641 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:34,642 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:34,645 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 23.37s ago] ('sku_9d78fad1_50404100_perejil_liso', 1, 0)
2025-07-10 16:34:34,655 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:34,656 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_9d78fad1_50404100_perejil_liso
2025-07-10 16:34:36,140 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Verduras
2025-07-10 16:34:36,141 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Verduras (units_per_package: 1.0)
2025-07-10 16:34:36,143 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_f355fb89_50403800_ajo
2025-07-10 16:34:36,145 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:36,149 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:36,152 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.87s ago] ('sku_a88cb11c_50402500_zanahoria', 1, 0)
2025-07-10 16:34:36,154 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_a88cb11c_50402500_zanahoria -> Vegetales
2025-07-10 16:34:36,155 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:36,158 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 17.06s ago] (3, '2025-07-10 23:34:36.154482', 160)
2025-07-10 16:34:36,162 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:36,177 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:36,178 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:36,182 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.9s ago] ('sku_92799ad3_50405614_chile_poblano', 1, 0)
2025-07-10 16:34:36,183 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_92799ad3_50405614_chile_poblano -> Vegetales
2025-07-10 16:34:36,185 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:36,186 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 17.09s ago] (2, '2025-07-10 23:34:36.183287', 158)
2025-07-10 16:34:36,191 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:36,204 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:36,205 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:36,213 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.93s ago] ('sku_3823c19d_50405300_cebolla_blanca', 1, 0)
2025-07-10 16:34:36,215 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_3823c19d_50405300_cebolla_blanca -> Vegetales
2025-07-10 16:34:36,221 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:36,223 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 17.13s ago] (4, '2025-07-10 23:34:36.215573', 150)
2025-07-10 16:34:36,228 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:36,238 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:34:36,242 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:34:36,246 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:34:36,248 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 2DE2FB0E-380D-4DB4-801D-2DA95A989235.xml: Failed to save invoice to database
2025-07-10 16:34:36,252 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:36,258 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:36,263 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 25.04s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 2DE2FB0E-380D-4DB4-801D-2DA95A989235.xml', '{"filename": "2DE2FB0E-380D-4DB4-801D-2DA95A989235.xml", "processing_time": 1.6814510822296143, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 1.6814510822296143, None, '2DE2FB0E-380D-4DB4-801D-2DA95A989235.xml', None, '2025-07-10 23:34:36.258998')
2025-07-10 16:34:36,266 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:36,282 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 2DE2FB0E-380D-4DB4-801D-2DA95A989235.xml to data/failed
2025-07-10 16:34:36,284 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:36,286 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 2b474195-45f6-4055-9848-2ca0f8e44f7a.xml (13/74)
2025-07-10 16:34:36,287 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:36,292 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 2b474195-45f6-4055-9848-2ca0f8e44f7a.xml
2025-07-10 16:34:36,297 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 2b474195-45f6-4055-9848-2ca0f8e44f7a.xml
2025-07-10 16:34:36,372 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:36,376 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 2b474195-45f6-4055-9848-2ca0f8e44f7a
2025-07-10 16:34:36,381 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:36,386 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:36,411 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 25.24s ago] ('2b474195-45f6-4055-9848-2ca0f8e44f7a', 1, 0)
2025-07-10 16:34:36,420 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:36,424 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 18 items
2025-07-10 16:34:36,433 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:36,437 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:36,438 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 25.16s ago] ('sku_e2dd89d6_50406500_tomate_entero_pelado_piancone_289kg', 1, 0)
2025-07-10 16:34:36,455 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_e2dd89d6_50406500_tomate_entero_pelado_piancone_289kg -> Vegetales
2025-07-10 16:34:36,464 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:36,470 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 17.38s ago] (4, '2025-07-10 23:34:36.455287', 125)
2025-07-10 16:34:36,483 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:36,507 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:36,515 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:36,529 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 25.25s ago] ('sku_9b6e4c31_50131800_queso_parmesano_en_cuartos_grande_kg', 1, 0)
2025-07-10 16:34:36,551 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_9b6e4c31_50131800_queso_parmesano_en_cuartos_grande_kg -> Lacteos
2025-07-10 16:34:36,556 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:36,565 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 17.47s ago] (3, '2025-07-10 23:34:36.551593', 74)
2025-07-10 16:34:36,581 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:36,598 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:36,600 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:36,609 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 25.33s ago] ('sku_f9d3f52a_50131700_mantequilla_ssal_challenge_454gr', 1, 0)
2025-07-10 16:34:36,616 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_f9d3f52a_50131700_mantequilla_ssal_challenge_454gr -> Lacteos
2025-07-10 16:34:36,620 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:36,649 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 17.55s ago] (3, '2025-07-10 23:34:36.616199', 70)
2025-07-10 16:34:36,670 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:36,692 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:36,696 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:36,712 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 25.43s ago] ('sku_0c85c7d7_50112000_pepperoni_rebanado_hormel_567kg', 1, 0)
2025-07-10 16:34:36,723 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_0c85c7d7_50112000_pepperoni_rebanado_hormel_567kg -> Proteinas
2025-07-10 16:34:36,728 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:36,733 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 17.64s ago] (3, '2025-07-10 23:34:36.723971', 83)
2025-07-10 16:34:36,736 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:36,765 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:36,770 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:36,782 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 25.5s ago] ('sku_9e127426_50171830_peperoncini_del_destino_379lt', 1, 0)
2025-07-10 16:34:36,789 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:36,793 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_9e127426_50171830_peperoncini_del_destino_379lt
2025-07-10 16:34:38,259 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Conservas
2025-07-10 16:34:38,260 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Conservas (units_per_package: 1.0)
2025-07-10 16:34:38,268 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:38,273 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:38,277 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 26.99s ago] ('sku_1789b909_50151500_aceite_puro_de_palma_palmina_20lt', 1, 0)
2025-07-10 16:34:38,277 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_1789b909_50151500_aceite_puro_de_palma_palmina_20lt -> Abarrotes
2025-07-10 16:34:38,282 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:38,282 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 19.19s ago] (4, '2025-07-10 23:34:38.277314', 1)
2025-07-10 16:34:38,291 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:38,306 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:38,311 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:38,316 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 27.03s ago] ('sku_cbe5de91_50171707_vinagre_balsamico_bellino_5_lt', 1, 0)
2025-07-10 16:34:38,318 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:38,319 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_cbe5de91_50171707_vinagre_balsamico_bellino_5_lt
2025-07-10 16:34:39,554 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Vinagre
2025-07-10 16:34:39,554 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Vinagre (units_per_package: 5.0)
2025-07-10 16:34:39,557 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:39,562 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:39,564 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 28.28s ago] ('sku_c77c74c9_50171800_ketchup_bolsa_heinz_3kg', 1, 0)
2025-07-10 16:34:39,565 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_c77c74c9_50171800_ketchup_bolsa_heinz_3kg -> Abarrotes
2025-07-10 16:34:39,567 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:39,568 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.47s ago] (2, '2025-07-10 23:34:39.565406', 16)
2025-07-10 16:34:39,570 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:39,581 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:39,584 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:39,586 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 28.3s ago] ('sku_850bbd66_10151600_arroz_arborio_agronature_1kg', 1, 0)
2025-07-10 16:34:39,589 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:39,589 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_850bbd66_10151600_arroz_arborio_agronature_1kg
2025-07-10 16:34:40,759 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Cereales
2025-07-10 16:34:40,759 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Cereales (units_per_package: 1.0)
2025-07-10 16:34:40,765 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:40,765 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:40,770 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 29.49s ago] ('sku_1e98d398_47131801_multilimpiador_pinol_9lts', 1, 0)
2025-07-10 16:34:40,775 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:40,777 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_1e98d398_47131801_multilimpiador_pinol_9lts
2025-07-10 16:34:42,119 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Detergente
2025-07-10 16:34:42,121 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Detergente (units_per_package: 9.0)
2025-07-10 16:34:42,125 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:42,131 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:42,141 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 30.86s ago] ('sku_2ae48caf_52152200_lavatrastes_liquido_axion_28_lts', 1, 0)
2025-07-10 16:34:42,144 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:42,146 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_2ae48caf_52152200_lavatrastes_liquido_axion_28_lts
2025-07-10 16:34:43,660 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Detergente
2025-07-10 16:34:43,660 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Detergente (units_per_package: 1.0)
2025-07-10 16:34:43,660 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:43,663 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:43,667 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 32.38s ago] ('sku_421db769_14111704_papel_higienico_kirkland_30380_hojas', 1, 0)
2025-07-10 16:34:43,667 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:43,675 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_421db769_14111704_papel_higienico_kirkland_30380_hojas
2025-07-10 16:34:44,747 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Papel Higienico
2025-07-10 16:34:44,747 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Papel Higienico (units_per_package: 30.0)
2025-07-10 16:34:44,750 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:44,751 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:44,754 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 33.47s ago] ('sku_4400ecd1_52121602_toalla_interdoblada_grey_moon_8150pz', 1, 0)
2025-07-10 16:34:44,755 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:44,757 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_4400ecd1_52121602_toalla_interdoblada_grey_moon_8150pz
2025-07-10 16:34:46,024 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Toalla
2025-07-10 16:34:46,025 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Toalla (units_per_package: 150.0)
2025-07-10 16:34:46,028 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:46,029 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:46,032 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 34.75s ago] ('sku_bbc4f07f_52121602_servilleta_de_cena_king_150_hojas', 1, 0)
2025-07-10 16:34:46,034 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:46,036 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_bbc4f07f_52121602_servilleta_de_cena_king_150_hojas
2025-07-10 16:34:47,333 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Servilletas
2025-07-10 16:34:47,335 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Servilletas (units_per_package: 150.0)
2025-07-10 16:34:47,339 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:47,340 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:47,343 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 36.06s ago] ('sku_05b1d3b4_50202300_jarabe_natural_madrileña_1lt', 1, 0)
2025-07-10 16:34:47,345 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:47,346 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_05b1d3b4_50202300_jarabe_natural_madrileña_1lt
2025-07-10 16:34:48,611 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Endulzantes
2025-07-10 16:34:48,612 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Endulzantes (units_per_package: 1.0)
2025-07-10 16:34:48,614 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:48,614 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:48,625 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 37.34s ago] ('sku_96925ba2_50202308_clamato_jugo_de_tomate_y_almeja_189lt', 1, 0)
2025-07-10 16:34:48,626 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:48,630 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_96925ba2_50202308_clamato_jugo_de_tomate_y_almeja_189lt
2025-07-10 16:34:50,024 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Otros-b
2025-07-10 16:34:50,026 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Otros-b (units_per_package: 1.0)
2025-07-10 16:34:50,030 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:50,032 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:50,035 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 38.75s ago] ('sku_0356f92a_50221300_harina_artisan_sir_galahad_ka_3028_50lb', 1, 0)
2025-07-10 16:34:50,037 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_0356f92a_50221300_harina_artisan_sir_galahad_ka_3028_50lb -> Abarrotes
2025-07-10 16:34:50,039 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:50,041 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 30.95s ago] (3, '2025-07-10 23:34:50.037146', 29)
2025-07-10 16:34:50,049 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:50,061 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:50,063 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:50,064 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 38.78s ago] ('sku_71a083bd_50221002_harina_higluten_sir_lancelot_ka_3052_lb', 1, 0)
2025-07-10 16:34:50,065 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_71a083bd_50221002_harina_higluten_sir_lancelot_ka_3052_lb -> Abarrotes
2025-07-10 16:34:50,068 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:50,069 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 30.97s ago] (4, '2025-07-10 23:34:50.065851', 28)
2025-07-10 16:34:50,072 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:50,081 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:34:50,082 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:34:50,084 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:34:50,087 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 2b474195-45f6-4055-9848-2ca0f8e44f7a.xml: Failed to save invoice to database
2025-07-10 16:34:50,091 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:50,091 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:50,092 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 38.87s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 2b474195-45f6-4055-9848-2ca0f8e44f7a.xml', '{"filename": "2b474195-45f6-4055-9848-2ca0f8e44f7a.xml", "processing_time": 13.795108556747437, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 13.795108556747437, None, '2b474195-45f6-4055-9848-2ca0f8e44f7a.xml', None, '2025-07-10 23:34:50.091801')
2025-07-10 16:34:50,095 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:50,106 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 2b474195-45f6-4055-9848-2ca0f8e44f7a.xml to data/failed
2025-07-10 16:34:50,106 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:50,111 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 329AE5C9-CDB1-434B-B2FC-FFC6932E8DE8.xml (14/74)
2025-07-10 16:34:50,112 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:50,113 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 329AE5C9-CDB1-434B-B2FC-FFC6932E8DE8.xml
2025-07-10 16:34:50,113 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 329AE5C9-CDB1-434B-B2FC-FFC6932E8DE8.xml
2025-07-10 16:34:50,118 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:50,120 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 329AE5C9-CDB1-434B-B2FC-FFC6932E8DE8
2025-07-10 16:34:50,120 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:50,121 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:50,124 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 38.95s ago] ('329AE5C9-CDB1-434B-B2FC-FFC6932E8DE8', 1, 0)
2025-07-10 16:34:50,125 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:50,129 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 2 items
2025-07-10 16:34:50,131 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:50,133 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:50,135 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 38.85s ago] ('sku_638d70e6_50465500_chipotle_lata_29kg', 1, 0)
2025-07-10 16:34:50,135 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:50,137 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_638d70e6_50465500_chipotle_lata_29kg
2025-07-10 16:34:51,520 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Chiles
2025-07-10 16:34:51,521 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Chiles (units_per_package: 1.0)
2025-07-10 16:34:51,522 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:51,523 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:51,525 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.24s ago] ('sku_8f28f7c7_50402300_repollo_verde', 1, 0)
2025-07-10 16:34:51,526 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_8f28f7c7_50402300_repollo_verde -> Vegetales
2025-07-10 16:34:51,527 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:51,528 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 32.43s ago] (4, '2025-07-10 23:34:51.526121', 153)
2025-07-10 16:34:51,535 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:51,547 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:34:51,548 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:34:51,549 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:34:51,551 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 329AE5C9-CDB1-434B-B2FC-FFC6932E8DE8.xml: Failed to save invoice to database
2025-07-10 16:34:51,553 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:51,555 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:51,557 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.33s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 329AE5C9-CDB1-434B-B2FC-FFC6932E8DE8.xml', '{"filename": "329AE5C9-CDB1-434B-B2FC-FFC6932E8DE8.xml", "processing_time": 1.4379968643188477, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 1.4379968643188477, None, '329AE5C9-CDB1-434B-B2FC-FFC6932E8DE8.xml', None, '2025-07-10 23:34:51.555763')
2025-07-10 16:34:51,565 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:51,575 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 329AE5C9-CDB1-434B-B2FC-FFC6932E8DE8.xml to data/failed
2025-07-10 16:34:51,580 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:51,583 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml (15/74)
2025-07-10 16:34:51,585 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:51,586 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml
2025-07-10 16:34:51,587 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml
2025-07-10 16:34:51,639 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:51,642 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094
2025-07-10 16:34:51,644 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:51,646 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:51,653 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.48s ago] ('3A48C4FF-A722-43F2-BD4D-E40CB9B5A094', 1, 0)
2025-07-10 16:34:51,660 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094 already exists (ID: 71)
2025-07-10 16:34:51,662 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml
2025-07-10 16:34:51,663 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml
2025-07-10 16:34:51,664 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-15 00:00:00
2025-07-10 16:34:51,665 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1063.76
2025-07-10 16:34:51,666 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:51,668 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:51,670 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:51,673 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.5s ago] ('3A48C4FF-A722-43F2-BD4D-E40CB9B5A094', 1, 0)
2025-07-10 16:34:51,677 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:34:51,678 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094
2025-07-10 16:34:51,680 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml (ID: 71)
2025-07-10 16:34:51,681 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml
2025-07-10 16:34:51,681 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $1063.76 vs $1063.76
2025-07-10 16:34:51,692 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:34:51,695 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:51,698 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:51,700 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:51,702 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.48s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml', '{"filename": "3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml", "processing_time": 0.11116385459899902, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094 already exists"}', 0.11116385459899902, None, '3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml', None, '2025-07-10 23:34:51.700263')
2025-07-10 16:34:51,715 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:51,729 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml - moved to failed directory
2025-07-10 16:34:51,732 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml to data/failed
2025-07-10 16:34:51,733 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:51,739 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 3F78A759-2E37-432D-A905-710FAA2EA1F4.xml (16/74)
2025-07-10 16:34:51,739 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:51,746 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 3F78A759-2E37-432D-A905-710FAA2EA1F4.xml
2025-07-10 16:34:51,747 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 3F78A759-2E37-432D-A905-710FAA2EA1F4.xml
2025-07-10 16:34:51,752 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:51,753 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 3F78A759-2E37-432D-A905-710FAA2EA1F4
2025-07-10 16:34:51,755 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:51,756 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:51,771 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.6s ago] ('3F78A759-2E37-432D-A905-710FAA2EA1F4', 1, 0)
2025-07-10 16:34:51,775 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:51,778 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 9 items
2025-07-10 16:34:51,793 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_bd6f7e4b_50112010_pierna_de_pollo
2025-07-10 16:34:51,796 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:51,798 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:51,801 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.52s ago] ('sku_75903dde_50404803_champiñon', 1, 0)
2025-07-10 16:34:51,805 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:51,807 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_75903dde_50404803_champiñon
2025-07-10 16:34:53,279 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Hongo
2025-07-10 16:34:53,281 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Hongo (units_per_package: 1.0)
2025-07-10 16:34:53,283 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_65d00f8a_50404101_albahaca
2025-07-10 16:34:53,284 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_14c77eea_50414500_kale
2025-07-10 16:34:53,286 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:53,289 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:53,292 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 42.01s ago] ('sku_5ac938a8_50221300_tortilla_maiz', 1, 0)
2025-07-10 16:34:53,293 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_5ac938a8_50221300_tortilla_maiz -> Abarrotes
2025-07-10 16:34:53,293 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:53,293 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 34.21s ago] (4, '2025-07-10 23:34:53.293810', 48)
2025-07-10 16:34:53,307 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:53,319 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:53,319 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:53,322 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 42.04s ago] ('sku_3f01a889_50404110_epazote', 1, 0)
2025-07-10 16:34:53,328 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:53,332 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_3f01a889_50404110_epazote
2025-07-10 16:34:54,400 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Especias
2025-07-10 16:34:54,401 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Especias (units_per_package: 1.0)
2025-07-10 16:34:54,415 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:54,417 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:54,420 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 43.14s ago] ('sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg', 1, 0)
2025-07-10 16:34:54,422 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:54,427 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg
2025-07-10 16:34:55,703 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Otros-a
2025-07-10 16:34:55,707 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Otros-a (units_per_package: 1.0)
2025-07-10 16:34:55,711 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_141a86f5_10161506_naranja
2025-07-10 16:34:55,714 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_f95bb8a3_50307024_pepino
2025-07-10 16:34:55,716 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:34:55,717 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:34:55,719 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:34:55,721 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 3F78A759-2E37-432D-A905-710FAA2EA1F4.xml: Failed to save invoice to database
2025-07-10 16:34:55,723 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:55,725 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:55,726 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.5s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 3F78A759-2E37-432D-A905-710FAA2EA1F4.xml', '{"filename": "3F78A759-2E37-432D-A905-710FAA2EA1F4.xml", "processing_time": 3.974684953689575, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 3.974684953689575, None, '3F78A759-2E37-432D-A905-710FAA2EA1F4.xml', None, '2025-07-10 23:34:55.725780')
2025-07-10 16:34:55,735 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:55,743 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 3F78A759-2E37-432D-A905-710FAA2EA1F4.xml to data/failed
2025-07-10 16:34:55,746 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:55,748 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 3ebd98ec-8de5-4819-b99c-937517d20a65.xml (17/74)
2025-07-10 16:34:55,748 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:55,749 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 3ebd98ec-8de5-4819-b99c-937517d20a65.xml
2025-07-10 16:34:55,751 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 3ebd98ec-8de5-4819-b99c-937517d20a65.xml
2025-07-10 16:34:55,783 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:55,784 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 3ebd98ec-8de5-4819-b99c-937517d20a65
2025-07-10 16:34:55,785 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:55,786 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:55,791 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.62s ago] ('3ebd98ec-8de5-4819-b99c-937517d20a65', 1, 0)
2025-07-10 16:34:55,792 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 3ebd98ec-8de5-4819-b99c-937517d20a65 already exists (ID: 72)
2025-07-10 16:34:55,794 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 3ebd98ec-8de5-4819-b99c-937517d20a65.xml
2025-07-10 16:34:55,795 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 3ebd98ec-8de5-4819-b99c-937517d20a65.xml
2025-07-10 16:34:55,795 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-05 00:00:00
2025-07-10 16:34:55,796 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $12823.79
2025-07-10 16:34:55,797 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:55,798 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:55,798 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:55,804 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.63s ago] ('3ebd98ec-8de5-4819-b99c-937517d20a65', 1, 0)
2025-07-10 16:34:55,806 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:34:55,807 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 3ebd98ec-8de5-4819-b99c-937517d20a65
2025-07-10 16:34:55,808 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 3ebd98ec-8de5-4819-b99c-937517d20a65.xml (ID: 72)
2025-07-10 16:34:55,809 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  3ebd98ec-8de5-4819-b99c-937517d20a65.xml
2025-07-10 16:34:55,809 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $12823.79 vs $12823.79
2025-07-10 16:34:55,810 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:34:55,810 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:55,811 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:55,815 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:55,816 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.59s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 3ebd98ec-8de5-4819-b99c-937517d20a65.xml', '{"filename": "3ebd98ec-8de5-4819-b99c-937517d20a65.xml", "processing_time": 0.062172889709472656, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 3ebd98ec-8de5-4819-b99c-937517d20a65 already exists"}', 0.062172889709472656, None, '3ebd98ec-8de5-4819-b99c-937517d20a65.xml', None, '2025-07-10 23:34:55.815011')
2025-07-10 16:34:55,820 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:55,833 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 3ebd98ec-8de5-4819-b99c-937517d20a65.xml - moved to failed directory
2025-07-10 16:34:55,835 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 3ebd98ec-8de5-4819-b99c-937517d20a65.xml to data/failed
2025-07-10 16:34:55,835 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:55,836 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 43D121F7-A23C-4372-B699-BC85F4418808.xml (18/74)
2025-07-10 16:34:55,837 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:55,837 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 43D121F7-A23C-4372-B699-BC85F4418808.xml
2025-07-10 16:34:55,838 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 43D121F7-A23C-4372-B699-BC85F4418808.xml
2025-07-10 16:34:55,873 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:55,874 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 43D121F7-A23C-4372-B699-BC85F4418808
2025-07-10 16:34:55,880 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:55,881 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:55,884 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.71s ago] ('43D121F7-A23C-4372-B699-BC85F4418808', 1, 0)
2025-07-10 16:34:55,886 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 43D121F7-A23C-4372-B699-BC85F4418808 already exists (ID: 73)
2025-07-10 16:34:55,886 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 43D121F7-A23C-4372-B699-BC85F4418808.xml
2025-07-10 16:34:55,887 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 43D121F7-A23C-4372-B699-BC85F4418808.xml
2025-07-10 16:34:55,888 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 00:00:00
2025-07-10 16:34:55,889 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $425.42
2025-07-10 16:34:55,891 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:55,896 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:55,898 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:55,901 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.73s ago] ('43D121F7-A23C-4372-B699-BC85F4418808', 1, 0)
2025-07-10 16:34:55,903 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:34:55,904 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 43D121F7-A23C-4372-B699-BC85F4418808
2025-07-10 16:34:55,904 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 43D121F7-A23C-4372-B699-BC85F4418808.xml (ID: 73)
2025-07-10 16:34:55,905 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  43D121F7-A23C-4372-B699-BC85F4418808.xml
2025-07-10 16:34:55,905 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $425.42 vs $425.42
2025-07-10 16:34:55,906 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:34:55,908 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:55,913 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:55,914 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:55,915 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.69s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 43D121F7-A23C-4372-B699-BC85F4418808.xml', '{"filename": "43D121F7-A23C-4372-B699-BC85F4418808.xml", "processing_time": 0.07546615600585938, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 43D121F7-A23C-4372-B699-BC85F4418808 already exists"}', 0.07546615600585938, None, '43D121F7-A23C-4372-B699-BC85F4418808.xml', None, '2025-07-10 23:34:55.914605')
2025-07-10 16:34:55,923 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:55,928 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 43D121F7-A23C-4372-B699-BC85F4418808.xml - moved to failed directory
2025-07-10 16:34:55,928 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 43D121F7-A23C-4372-B699-BC85F4418808.xml to data/failed
2025-07-10 16:34:55,938 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:55,938 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 4762B641-AE3D-441F-B47D-9B9D2C511469.xml (19/74)
2025-07-10 16:34:55,939 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:55,940 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 4762B641-AE3D-441F-B47D-9B9D2C511469.xml
2025-07-10 16:34:55,940 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 4762B641-AE3D-441F-B47D-9B9D2C511469.xml
2025-07-10 16:34:55,948 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:55,948 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 4762B641-AE3D-441F-B47D-9B9D2C511469
2025-07-10 16:34:55,950 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:55,950 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:55,954 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.78s ago] ('4762B641-AE3D-441F-B47D-9B9D2C511469', 1, 0)
2025-07-10 16:34:55,954 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 4762B641-AE3D-441F-B47D-9B9D2C511469 already exists (ID: 74)
2025-07-10 16:34:55,957 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 4762B641-AE3D-441F-B47D-9B9D2C511469.xml
2025-07-10 16:34:55,957 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 4762B641-AE3D-441F-B47D-9B9D2C511469.xml
2025-07-10 16:34:55,957 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-10 16:34:55,957 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $352.00
2025-07-10 16:34:55,957 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:55,957 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:55,969 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:55,970 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.8s ago] ('4762B641-AE3D-441F-B47D-9B9D2C511469', 1, 0)
2025-07-10 16:34:55,971 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:34:55,972 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 4762B641-AE3D-441F-B47D-9B9D2C511469
2025-07-10 16:34:55,973 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 4762B641-AE3D-441F-B47D-9B9D2C511469.xml (ID: 74)
2025-07-10 16:34:55,973 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  4762B641-AE3D-441F-B47D-9B9D2C511469.xml
2025-07-10 16:34:55,973 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $352.00 vs $352.00
2025-07-10 16:34:55,977 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:34:55,977 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:55,982 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:55,982 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:55,982 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.76s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 4762B641-AE3D-441F-B47D-9B9D2C511469.xml', '{"filename": "4762B641-AE3D-441F-B47D-9B9D2C511469.xml", "processing_time": 0.041478872299194336, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 4762B641-AE3D-441F-B47D-9B9D2C511469 already exists"}', 0.041478872299194336, None, '4762B641-AE3D-441F-B47D-9B9D2C511469.xml', None, '2025-07-10 23:34:55.982075')
2025-07-10 16:34:55,990 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:56,001 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 4762B641-AE3D-441F-B47D-9B9D2C511469.xml - moved to failed directory
2025-07-10 16:34:56,002 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 4762B641-AE3D-441F-B47D-9B9D2C511469.xml to data/failed
2025-07-10 16:34:56,003 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:56,004 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml (20/74)
2025-07-10 16:34:56,004 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:56,005 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml
2025-07-10 16:34:56,005 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml
2025-07-10 16:34:56,045 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:56,050 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E
2025-07-10 16:34:56,051 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:56,052 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:56,054 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.88s ago] ('4CEFDCD9-42AD-4198-B832-C5A8BA6D015E', 1, 0)
2025-07-10 16:34:56,054 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E already exists (ID: 75)
2025-07-10 16:34:56,056 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml
2025-07-10 16:34:56,057 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml
2025-07-10 16:34:56,058 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-17 00:00:00
2025-07-10 16:34:56,058 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2269.74
2025-07-10 16:34:56,058 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:56,062 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:56,065 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:56,069 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.9s ago] ('4CEFDCD9-42AD-4198-B832-C5A8BA6D015E', 1, 0)
2025-07-10 16:34:56,069 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:34:56,072 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E
2025-07-10 16:34:56,072 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml (ID: 75)
2025-07-10 16:34:56,072 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml
2025-07-10 16:34:56,073 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $2269.74 vs $2269.74
2025-07-10 16:34:56,073 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:34:56,073 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:56,073 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:56,073 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:56,078 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.86s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml', '{"filename": "4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml", "processing_time": 0.06761908531188965, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E already exists"}', 0.06761908531188965, None, '4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml', None, '2025-07-10 23:34:56.073367')
2025-07-10 16:34:56,081 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:56,091 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml - moved to failed directory
2025-07-10 16:34:56,098 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml to data/failed
2025-07-10 16:34:56,098 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:56,098 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml (21/74)
2025-07-10 16:34:56,102 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:56,102 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml
2025-07-10 16:34:56,104 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml
2025-07-10 16:34:56,108 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:56,109 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 4EEFF328-88DF-4A82-94DF-9B9D2C51388C
2025-07-10 16:34:56,110 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:56,111 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:56,116 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.95s ago] ('4EEFF328-88DF-4A82-94DF-9B9D2C51388C', 1, 0)
2025-07-10 16:34:56,116 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 4EEFF328-88DF-4A82-94DF-9B9D2C51388C already exists (ID: 76)
2025-07-10 16:34:56,121 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml
2025-07-10 16:34:56,121 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml
2025-07-10 16:34:56,122 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-10 16:34:56,123 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $132.00
2025-07-10 16:34:56,123 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:56,127 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:56,127 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:56,132 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.96s ago] ('4EEFF328-88DF-4A82-94DF-9B9D2C51388C', 1, 0)
2025-07-10 16:34:56,132 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:34:56,132 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 4EEFF328-88DF-4A82-94DF-9B9D2C51388C
2025-07-10 16:34:56,132 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml (ID: 76)
2025-07-10 16:34:56,132 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml
2025-07-10 16:34:56,132 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $132.00 vs $132.00
2025-07-10 16:34:56,132 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:34:56,138 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:56,140 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:56,142 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:56,142 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.92s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml', '{"filename": "4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml", "processing_time": 0.03694438934326172, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 4EEFF328-88DF-4A82-94DF-9B9D2C51388C already exists"}', 0.03694438934326172, None, '4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml', None, '2025-07-10 23:34:56.142123')
2025-07-10 16:34:56,155 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:56,157 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml - moved to failed directory
2025-07-10 16:34:56,170 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml to data/failed
2025-07-10 16:34:56,170 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:56,172 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 5781EBC3-DD03-4D60-95E8-50385F252164.xml (22/74)
2025-07-10 16:34:56,173 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:56,173 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 5781EBC3-DD03-4D60-95E8-50385F252164.xml
2025-07-10 16:34:56,173 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 5781EBC3-DD03-4D60-95E8-50385F252164.xml
2025-07-10 16:34:56,226 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:56,229 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 5781EBC3-DD03-4D60-95E8-50385F252164
2025-07-10 16:34:56,233 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:56,233 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:56,245 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 45.08s ago] ('5781EBC3-DD03-4D60-95E8-50385F252164', 1, 0)
2025-07-10 16:34:56,245 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 5781EBC3-DD03-4D60-95E8-50385F252164 already exists (ID: 77)
2025-07-10 16:34:56,245 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 5781EBC3-DD03-4D60-95E8-50385F252164.xml
2025-07-10 16:34:56,245 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 5781EBC3-DD03-4D60-95E8-50385F252164.xml
2025-07-10 16:34:56,255 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-10 16:34:56,255 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2675.36
2025-07-10 16:34:56,258 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:56,259 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:56,260 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:56,265 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 45.09s ago] ('5781EBC3-DD03-4D60-95E8-50385F252164', 1, 0)
2025-07-10 16:34:56,265 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:34:56,272 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 5781EBC3-DD03-4D60-95E8-50385F252164
2025-07-10 16:34:56,273 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 5781EBC3-DD03-4D60-95E8-50385F252164.xml (ID: 77)
2025-07-10 16:34:56,273 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  5781EBC3-DD03-4D60-95E8-50385F252164.xml
2025-07-10 16:34:56,274 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $2675.36 vs $2675.36
2025-07-10 16:34:56,276 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:34:56,276 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:56,278 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:56,282 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:34:56,282 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 45.06s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 5781EBC3-DD03-4D60-95E8-50385F252164.xml', '{"filename": "5781EBC3-DD03-4D60-95E8-50385F252164.xml", "processing_time": 0.10480427742004395, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 5781EBC3-DD03-4D60-95E8-50385F252164 already exists"}', 0.10480427742004395, None, '5781EBC3-DD03-4D60-95E8-50385F252164.xml', None, '2025-07-10 23:34:56.282810')
2025-07-10 16:34:56,290 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:56,303 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 5781EBC3-DD03-4D60-95E8-50385F252164.xml - moved to failed directory
2025-07-10 16:34:56,307 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 5781EBC3-DD03-4D60-95E8-50385F252164.xml to data/failed
2025-07-10 16:34:56,308 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:34:56,309 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 57D8103E-6131-4D36-A212-4039A44C74EA.xml (23/74)
2025-07-10 16:34:56,311 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:34:56,311 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 57D8103E-6131-4D36-A212-4039A44C74EA.xml
2025-07-10 16:34:56,312 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 57D8103E-6131-4D36-A212-4039A44C74EA.xml
2025-07-10 16:34:56,350 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:34:56,351 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 57D8103E-6131-4D36-A212-4039A44C74EA
2025-07-10 16:34:56,352 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:56,354 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:56,358 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 45.19s ago] ('57D8103E-6131-4D36-A212-4039A44C74EA', 1, 0)
2025-07-10 16:34:56,359 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:56,363 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 13 items
2025-07-10 16:34:56,368 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:56,372 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:56,373 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 45.1s ago] ('sku_a71ceee3_52121602_toalla_interdoblada_petalo', 1, 0)
2025-07-10 16:34:56,373 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:56,383 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_a71ceee3_52121602_toalla_interdoblada_petalo
2025-07-10 16:34:57,887 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Toalla
2025-07-10 16:34:57,888 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Toalla (units_per_package: 1.0)
2025-07-10 16:34:57,890 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:57,891 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:57,894 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 46.61s ago] ('sku_e84abf04_14111704_papel_higiénico_kirkland', 1, 0)
2025-07-10 16:34:57,896 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_e84abf04_14111704_papel_higiénico_kirkland -> Suministros
2025-07-10 16:34:57,898 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:57,899 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 38.81s ago] (2, '2025-07-10 23:34:57.896594', 113)
2025-07-10 16:34:57,903 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:57,915 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_14c77eea_50414500_kale
2025-07-10 16:34:57,918 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:57,919 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:57,922 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 46.65s ago] ('sku_4d8ff92b_50404600_lechuga_bola', 1, 0)
2025-07-10 16:34:57,922 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:57,932 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_4d8ff92b_50404600_lechuga_bola
2025-07-10 16:34:59,192 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Verduras
2025-07-10 16:34:59,193 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Verduras (units_per_package: 1.0)
2025-07-10 16:34:59,194 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:59,196 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:59,197 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 47.91s ago] ('sku_e6d42f0b_50403800_shallot', 1, 0)
2025-07-10 16:34:59,199 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_e6d42f0b_50403800_shallot -> Vegetales
2025-07-10 16:34:59,200 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:59,200 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.11s ago] (4, '2025-07-10 23:34:59.199613', 143)
2025-07-10 16:34:59,206 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:59,216 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_bd6f7e4b_50112010_pierna_de_pollo
2025-07-10 16:34:59,218 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:59,218 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:59,222 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 47.94s ago] ('sku_70ae329c_50301500_manzana_verde', 1, 0)
2025-07-10 16:34:59,225 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_70ae329c_50301500_manzana_verde -> Vegetales
2025-07-10 16:34:59,225 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:34:59,229 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.14s ago] (4, '2025-07-10 23:34:59.225099', 131)
2025-07-10 16:34:59,236 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:59,242 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_11cd495e_50401700_aguacate
2025-07-10 16:34:59,244 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_f6ce5c99_50404600_lechuga_mixta
2025-07-10 16:34:59,247 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:34:59,250 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:34:59,253 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 47.97s ago] ('sku_4770c1ef_50402800_acelga', 1, 0)
2025-07-10 16:34:59,255 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:34:59,256 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_4770c1ef_50402800_acelga
2025-07-10 16:35:00,401 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Verduras
2025-07-10 16:35:00,402 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Verduras (units_per_package: 1.0)
2025-07-10 16:35:00,405 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:00,406 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:00,408 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 49.13s ago] ('sku_93d1e48d_50405600_morron_rojo', 1, 0)
2025-07-10 16:35:00,409 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_93d1e48d_50405600_morron_rojo -> Vegetales
2025-07-10 16:35:00,410 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:35:00,412 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 41.32s ago] (3, '2025-07-10 23:35:00.409694', 144)
2025-07-10 16:35:00,417 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:00,425 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_3823c19d_50405300_cebolla_blanca
2025-07-10 16:35:00,426 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_9a57e1c2_50304100_limon_sin_semilla
2025-07-10 16:35:00,427 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:35:00,428 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:00,430 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:00,431 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 57D8103E-6131-4D36-A212-4039A44C74EA.xml: Failed to save invoice to database
2025-07-10 16:35:00,433 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:00,435 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:00,438 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 49.22s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 57D8103E-6131-4D36-A212-4039A44C74EA.xml', '{"filename": "57D8103E-6131-4D36-A212-4039A44C74EA.xml", "processing_time": 4.120211839675903, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 4.120211839675903, None, '57D8103E-6131-4D36-A212-4039A44C74EA.xml', None, '2025-07-10 23:35:00.435057')
2025-07-10 16:35:00,445 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:00,453 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 57D8103E-6131-4D36-A212-4039A44C74EA.xml to data/failed
2025-07-10 16:35:00,457 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:00,459 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml (24/74)
2025-07-10 16:35:00,459 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:00,463 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml
2025-07-10 16:35:00,465 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml
2025-07-10 16:35:00,503 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:00,503 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 5E185CBB-53B4-497B-96E4-6BC7FF4F2129
2025-07-10 16:35:00,507 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:00,512 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:00,514 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 49.34s ago] ('5E185CBB-53B4-497B-96E4-6BC7FF4F2129', 1, 0)
2025-07-10 16:35:00,517 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 5E185CBB-53B4-497B-96E4-6BC7FF4F2129 already exists (ID: 78)
2025-07-10 16:35:00,517 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml
2025-07-10 16:35:00,519 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml
2025-07-10 16:35:00,519 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-16 00:00:00
2025-07-10 16:35:00,519 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1514.66
2025-07-10 16:35:00,519 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:00,519 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:00,519 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:00,529 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 49.36s ago] ('5E185CBB-53B4-497B-96E4-6BC7FF4F2129', 1, 0)
2025-07-10 16:35:00,530 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:00,534 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 5E185CBB-53B4-497B-96E4-6BC7FF4F2129
2025-07-10 16:35:00,534 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml (ID: 78)
2025-07-10 16:35:00,538 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml
2025-07-10 16:35:00,538 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $1514.66 vs $1514.66
2025-07-10 16:35:00,540 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:00,540 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:00,542 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:00,542 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:00,545 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 49.32s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml', '{"filename": "5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml", "processing_time": 0.07791447639465332, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 5E185CBB-53B4-497B-96E4-6BC7FF4F2129 already exists"}', 0.07791447639465332, None, '5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml', None, '2025-07-10 23:35:00.542682')
2025-07-10 16:35:00,553 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:00,561 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml - moved to failed directory
2025-07-10 16:35:00,566 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml to data/failed
2025-07-10 16:35:00,566 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:00,568 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml (25/74)
2025-07-10 16:35:00,568 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:00,569 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml
2025-07-10 16:35:00,570 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml
2025-07-10 16:35:00,578 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:00,579 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9
2025-07-10 16:35:00,581 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:00,583 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:00,586 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 49.41s ago] ('61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9', 1, 0)
2025-07-10 16:35:00,586 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9 already exists (ID: 79)
2025-07-10 16:35:00,590 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml
2025-07-10 16:35:00,595 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml
2025-07-10 16:35:00,595 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-10 00:00:00
2025-07-10 16:35:00,596 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $0.01
2025-07-10 16:35:00,598 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:00,600 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:00,601 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:00,603 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 49.43s ago] ('61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9', 1, 0)
2025-07-10 16:35:00,610 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:00,611 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9
2025-07-10 16:35:00,611 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml (ID: 79)
2025-07-10 16:35:00,611 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml
2025-07-10 16:35:00,614 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $0.01 vs $0.01
2025-07-10 16:35:00,614 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:00,614 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:00,614 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:00,618 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:00,620 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 49.4s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml', '{"filename": "61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml", "processing_time": 0.04593014717102051, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9 already exists"}', 0.04593014717102051, None, '61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml', None, '2025-07-10 23:35:00.618182')
2025-07-10 16:35:00,626 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:00,647 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml - moved to failed directory
2025-07-10 16:35:00,653 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml to data/failed
2025-07-10 16:35:00,659 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:00,662 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml (26/74)
2025-07-10 16:35:00,664 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:00,665 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml
2025-07-10 16:35:00,669 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml
2025-07-10 16:35:00,717 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:00,719 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 661EF9D7-AE9A-4A51-8E90-46EA6966E209
2025-07-10 16:35:00,719 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:00,724 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:00,730 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 49.56s ago] ('661EF9D7-AE9A-4A51-8E90-46EA6966E209', 1, 0)
2025-07-10 16:35:00,733 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 661EF9D7-AE9A-4A51-8E90-46EA6966E209 already exists (ID: 80)
2025-07-10 16:35:00,733 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml
2025-07-10 16:35:00,734 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml
2025-07-10 16:35:00,734 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-14 00:00:00
2025-07-10 16:35:00,735 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1576.28
2025-07-10 16:35:00,736 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:00,736 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:00,740 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:00,740 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 49.58s ago] ('661EF9D7-AE9A-4A51-8E90-46EA6966E209', 1, 0)
2025-07-10 16:35:00,750 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:00,751 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 661EF9D7-AE9A-4A51-8E90-46EA6966E209
2025-07-10 16:35:00,751 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml (ID: 80)
2025-07-10 16:35:00,751 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml
2025-07-10 16:35:00,753 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $1576.28 vs $1576.28
2025-07-10 16:35:00,753 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:00,753 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:00,761 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:00,762 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:00,764 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 49.54s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml', '{"filename": "661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml", "processing_time": 0.08732485771179199, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 661EF9D7-AE9A-4A51-8E90-46EA6966E209 already exists"}', 0.08732485771179199, None, '661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml', None, '2025-07-10 23:35:00.762857')
2025-07-10 16:35:00,769 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:00,780 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml - moved to failed directory
2025-07-10 16:35:00,785 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml to data/failed
2025-07-10 16:35:00,786 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:00,787 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml (27/74)
2025-07-10 16:35:00,788 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:00,788 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml
2025-07-10 16:35:00,790 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml
2025-07-10 16:35:00,799 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:00,800 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D
2025-07-10 16:35:00,803 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:00,804 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:00,807 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 49.64s ago] ('66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D', 1, 0)
2025-07-10 16:35:00,807 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D already exists (ID: 81)
2025-07-10 16:35:00,812 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml
2025-07-10 16:35:00,816 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml
2025-07-10 16:35:00,816 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-04 00:00:00
2025-07-10 16:35:00,817 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $716.30
2025-07-10 16:35:00,818 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:00,821 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:00,822 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:00,822 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 49.66s ago] ('66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D', 1, 0)
2025-07-10 16:35:00,832 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:00,833 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D
2025-07-10 16:35:00,834 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml (ID: 81)
2025-07-10 16:35:00,835 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml
2025-07-10 16:35:00,836 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $716.30 vs $716.30
2025-07-10 16:35:00,836 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:00,836 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:00,840 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:00,845 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:00,846 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 49.63s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml', '{"filename": "66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml", "processing_time": 0.05136275291442871, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D already exists"}', 0.05136275291442871, None, '66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml', None, '2025-07-10 23:35:00.845291')
2025-07-10 16:35:00,853 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:00,866 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml - moved to failed directory
2025-07-10 16:35:00,868 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml to data/failed
2025-07-10 16:35:00,868 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:00,869 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 670587E2-F5A5-4A27-8F10-58F5C605B1EC.xml (28/74)
2025-07-10 16:35:00,870 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:00,872 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 670587E2-F5A5-4A27-8F10-58F5C605B1EC.xml
2025-07-10 16:35:00,873 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 670587E2-F5A5-4A27-8F10-58F5C605B1EC.xml
2025-07-10 16:35:00,882 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:00,882 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 670587E2-F5A5-4A27-8F10-58F5C605B1EC
2025-07-10 16:35:00,884 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:00,886 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:00,893 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 49.72s ago] ('670587E2-F5A5-4A27-8F10-58F5C605B1EC', 1, 0)
2025-07-10 16:35:00,894 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:00,896 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 8 items
2025-07-10 16:35:00,898 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:00,900 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:00,903 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 49.62s ago] ('sku_6726ba1e_50171830_mayonesa_378_lt_wilsey', 1, 0)
2025-07-10 16:35:00,905 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:00,906 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_6726ba1e_50171830_mayonesa_378_lt_wilsey
2025-07-10 16:35:02,319 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Condimentos
2025-07-10 16:35:02,320 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Condimentos (units_per_package: 3.78)
2025-07-10 16:35:02,321 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_bd6f7e4b_50112010_pierna_de_pollo
2025-07-10 16:35:02,323 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:02,323 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:02,326 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 51.04s ago] ('sku_07ae298e_50304100_limon_amarillo', 1, 0)
2025-07-10 16:35:02,328 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_07ae298e_50304100_limon_amarillo -> Vegetales
2025-07-10 16:35:02,328 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:35:02,329 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 43.24s ago] (4, '2025-07-10 23:35:02.327330', 133)
2025-07-10 16:35:02,336 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:02,343 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_3823c19d_50405300_cebolla_blanca
2025-07-10 16:35:02,347 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:02,350 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:02,353 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 51.07s ago] ('sku_ae940683_50112009_tocino', 1, 0)
2025-07-10 16:35:02,354 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_ae940683_50112009_tocino -> Proteinas
2025-07-10 16:35:02,355 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:35:02,356 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 43.26s ago] (3, '2025-07-10 23:35:02.354225', 78)
2025-07-10 16:35:02,358 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:02,367 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_5a200fb8_50131800_queso_cheddar_cheddar_fuerte
2025-07-10 16:35:02,370 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:02,374 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:02,376 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 51.09s ago] ('sku_d73c5051_52152200_fibra_metal', 1, 0)
2025-07-10 16:35:02,377 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:02,380 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_d73c5051_52152200_fibra_metal
2025-07-10 16:35:03,544 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Jabón
2025-07-10 16:35:03,545 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Jabón (units_per_package: 1.0)
2025-07-10 16:35:03,546 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_9a57e1c2_50304100_limon_sin_semilla
2025-07-10 16:35:03,547 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:35:03,548 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:03,551 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:03,552 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 670587E2-F5A5-4A27-8F10-58F5C605B1EC.xml: Failed to save invoice to database
2025-07-10 16:35:03,554 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:03,555 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:03,557 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 52.33s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 670587E2-F5A5-4A27-8F10-58F5C605B1EC.xml', '{"filename": "670587E2-F5A5-4A27-8F10-58F5C605B1EC.xml", "processing_time": 2.680872917175293, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 2.680872917175293, None, '670587E2-F5A5-4A27-8F10-58F5C605B1EC.xml', None, '2025-07-10 23:35:03.555515')
2025-07-10 16:35:03,559 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:03,568 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 670587E2-F5A5-4A27-8F10-58F5C605B1EC.xml to data/failed
2025-07-10 16:35:03,569 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:03,569 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 67F16CA4-C800-409C-97D7-5B366AE5E6D4.xml (29/74)
2025-07-10 16:35:03,570 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:03,571 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 67F16CA4-C800-409C-97D7-5B366AE5E6D4.xml
2025-07-10 16:35:03,572 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 67F16CA4-C800-409C-97D7-5B366AE5E6D4.xml
2025-07-10 16:35:03,580 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:03,580 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 67F16CA4-C800-409C-97D7-5B366AE5E6D4
2025-07-10 16:35:03,581 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:03,582 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:03,584 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 52.41s ago] ('67F16CA4-C800-409C-97D7-5B366AE5E6D4', 1, 0)
2025-07-10 16:35:03,585 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:03,587 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 4 items
2025-07-10 16:35:03,588 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_9a57e1c2_50304100_limon_sin_semilla
2025-07-10 16:35:03,590 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_141a86f5_10161506_naranja
2025-07-10 16:35:03,592 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:03,592 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:03,594 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 52.31s ago] ('sku_306c40c7_50303300_toronja', 1, 0)
2025-07-10 16:35:03,595 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_306c40c7_50303300_toronja -> Vegetales
2025-07-10 16:35:03,596 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:35:03,597 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.5s ago] (4, '2025-07-10 23:35:03.595528', 130)
2025-07-10 16:35:03,603 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:03,612 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg
2025-07-10 16:35:03,613 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:35:03,614 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:03,615 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:03,616 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 67F16CA4-C800-409C-97D7-5B366AE5E6D4.xml: Failed to save invoice to database
2025-07-10 16:35:03,617 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:03,619 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:03,622 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 52.4s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 67F16CA4-C800-409C-97D7-5B366AE5E6D4.xml', '{"filename": "67F16CA4-C800-409C-97D7-5B366AE5E6D4.xml", "processing_time": 0.04551553726196289, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 0.04551553726196289, None, '67F16CA4-C800-409C-97D7-5B366AE5E6D4.xml', None, '2025-07-10 23:35:03.619106')
2025-07-10 16:35:03,628 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:03,636 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 67F16CA4-C800-409C-97D7-5B366AE5E6D4.xml to data/failed
2025-07-10 16:35:03,638 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:03,639 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml (30/74)
2025-07-10 16:35:03,640 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:03,641 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml
2025-07-10 16:35:03,641 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml
2025-07-10 16:35:03,682 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:03,684 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17
2025-07-10 16:35:03,684 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:03,686 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:03,694 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 52.52s ago] ('69190FB4-5FE0-4538-8B2D-FE3D2CD53B17', 1, 0)
2025-07-10 16:35:03,696 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17 already exists (ID: 82)
2025-07-10 16:35:03,697 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml
2025-07-10 16:35:03,698 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml
2025-07-10 16:35:03,698 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-01 00:00:00
2025-07-10 16:35:03,699 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2848.20
2025-07-10 16:35:03,700 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:03,700 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:03,709 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:03,711 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 52.54s ago] ('69190FB4-5FE0-4538-8B2D-FE3D2CD53B17', 1, 0)
2025-07-10 16:35:03,713 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:03,713 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17
2025-07-10 16:35:03,713 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml (ID: 82)
2025-07-10 16:35:03,713 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml
2025-07-10 16:35:03,716 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $2848.20 vs $2848.20
2025-07-10 16:35:03,717 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:03,717 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:03,724 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:03,725 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:03,726 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 52.5s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml', '{"filename": "69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml", "processing_time": 0.07967638969421387, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17 already exists"}', 0.07967638969421387, None, '69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml', None, '2025-07-10 23:35:03.725701')
2025-07-10 16:35:03,733 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:03,744 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml - moved to failed directory
2025-07-10 16:35:03,746 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml to data/failed
2025-07-10 16:35:03,747 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:03,747 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml (31/74)
2025-07-10 16:35:03,748 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:03,748 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml
2025-07-10 16:35:03,749 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml
2025-07-10 16:35:03,784 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:03,784 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 6A383059-80B7-4C4A-91B3-E39EE88DA4D4
2025-07-10 16:35:03,791 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:03,792 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:03,795 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 52.62s ago] ('6A383059-80B7-4C4A-91B3-E39EE88DA4D4', 1, 0)
2025-07-10 16:35:03,796 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 6A383059-80B7-4C4A-91B3-E39EE88DA4D4 already exists (ID: 83)
2025-07-10 16:35:03,796 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml
2025-07-10 16:35:03,796 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml
2025-07-10 16:35:03,798 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 00:00:00
2025-07-10 16:35:03,799 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1293.12
2025-07-10 16:35:03,800 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:03,800 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:03,804 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:03,810 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 52.64s ago] ('6A383059-80B7-4C4A-91B3-E39EE88DA4D4', 1, 0)
2025-07-10 16:35:03,811 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:03,812 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 6A383059-80B7-4C4A-91B3-E39EE88DA4D4
2025-07-10 16:35:03,812 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml (ID: 83)
2025-07-10 16:35:03,813 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml
2025-07-10 16:35:03,814 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $1293.12 vs $1293.12
2025-07-10 16:35:03,814 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:03,814 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:03,817 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:03,817 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:03,823 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 52.6s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml', '{"filename": "6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml", "processing_time": 0.06814074516296387, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 6A383059-80B7-4C4A-91B3-E39EE88DA4D4 already exists"}', 0.06814074516296387, None, '6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml', None, '2025-07-10 23:35:03.817311')
2025-07-10 16:35:03,829 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:03,833 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml - moved to failed directory
2025-07-10 16:35:03,841 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml to data/failed
2025-07-10 16:35:03,843 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:03,844 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml (32/74)
2025-07-10 16:35:03,844 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:03,846 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml
2025-07-10 16:35:03,846 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml
2025-07-10 16:35:03,892 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:03,894 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8
2025-07-10 16:35:03,896 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:03,897 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:03,900 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 52.73s ago] ('6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8', 1, 0)
2025-07-10 16:35:03,909 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8 already exists (ID: 84)
2025-07-10 16:35:03,910 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml
2025-07-10 16:35:03,912 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml
2025-07-10 16:35:03,912 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-10 00:00:00
2025-07-10 16:35:03,913 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1531.10
2025-07-10 16:35:03,913 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:03,917 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:03,917 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:03,921 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 52.75s ago] ('6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8', 1, 0)
2025-07-10 16:35:03,928 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:03,930 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8
2025-07-10 16:35:03,932 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml (ID: 84)
2025-07-10 16:35:03,933 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml
2025-07-10 16:35:03,934 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $1531.10 vs $1531.10
2025-07-10 16:35:03,934 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:03,934 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:03,943 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:03,943 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:03,943 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 52.73s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml', '{"filename": "6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml", "processing_time": 0.09338665008544922, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8 already exists"}', 0.09338665008544922, None, '6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml', None, '2025-07-10 23:35:03.943490')
2025-07-10 16:35:03,955 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:03,968 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml - moved to failed directory
2025-07-10 16:35:03,968 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml to data/failed
2025-07-10 16:35:03,977 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:03,979 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml (33/74)
2025-07-10 16:35:03,980 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:03,980 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml
2025-07-10 16:35:03,984 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml
2025-07-10 16:35:04,055 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:04,056 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4
2025-07-10 16:35:04,061 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:04,067 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:04,081 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 52.91s ago] ('6DDAE2B5-A48B-4601-A669-FF4482BAB8E4', 1, 0)
2025-07-10 16:35:04,084 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4 already exists (ID: 85)
2025-07-10 16:35:04,084 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml
2025-07-10 16:35:04,094 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml
2025-07-10 16:35:04,102 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-09 00:00:00
2025-07-10 16:35:04,104 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $305.52
2025-07-10 16:35:04,106 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:04,123 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:04,137 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:04,158 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 52.99s ago] ('6DDAE2B5-A48B-4601-A669-FF4482BAB8E4', 1, 0)
2025-07-10 16:35:04,207 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:04,232 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4
2025-07-10 16:35:04,243 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml (ID: 85)
2025-07-10 16:35:04,263 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml
2025-07-10 16:35:04,380 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $305.52 vs $305.52
2025-07-10 16:35:04,466 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:04,480 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:04,543 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:04,550 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:04,552 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 53.33s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml', '{"filename": "6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml", "processing_time": 0.5618758201599121, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4 already exists"}', 0.5618758201599121, None, '6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml', None, '2025-07-10 23:35:04.550403')
2025-07-10 16:35:04,574 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:04,595 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml - moved to failed directory
2025-07-10 16:35:04,651 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml to data/failed
2025-07-10 16:35:04,656 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:04,658 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 6F0697AD-B159-42DD-8CEC-3E553EA1C944.xml (34/74)
2025-07-10 16:35:04,659 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:04,662 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 6F0697AD-B159-42DD-8CEC-3E553EA1C944.xml
2025-07-10 16:35:04,742 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 6F0697AD-B159-42DD-8CEC-3E553EA1C944.xml
2025-07-10 16:35:05,009 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:05,032 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 6F0697AD-B159-42DD-8CEC-3E553EA1C944
2025-07-10 16:35:05,036 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:05,041 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:05,087 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 53.91s ago] ('6F0697AD-B159-42DD-8CEC-3E553EA1C944', 1, 0)
2025-07-10 16:35:05,102 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:05,106 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 2 items
2025-07-10 16:35:05,121 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg
2025-07-10 16:35:05,132 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:05,138 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:05,150 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 53.87s ago] ('sku_7da52c1e_50307037_pulpa_tamarindo', 1, 0)
2025-07-10 16:35:05,156 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:05,156 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_7da52c1e_50307037_pulpa_tamarindo
2025-07-10 16:35:06,572 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Pulpa
2025-07-10 16:35:06,573 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Pulpa (units_per_package: 1.0)
2025-07-10 16:35:06,573 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:35:06,574 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:06,576 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:06,578 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 6F0697AD-B159-42DD-8CEC-3E553EA1C944.xml: Failed to save invoice to database
2025-07-10 16:35:06,580 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:06,582 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:06,583 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 55.36s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 6F0697AD-B159-42DD-8CEC-3E553EA1C944.xml', '{"filename": "6F0697AD-B159-42DD-8CEC-3E553EA1C944.xml", "processing_time": 1.915247917175293, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 1.915247917175293, None, '6F0697AD-B159-42DD-8CEC-3E553EA1C944.xml', None, '2025-07-10 23:35:06.582291')
2025-07-10 16:35:06,591 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:06,603 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 6F0697AD-B159-42DD-8CEC-3E553EA1C944.xml to data/failed
2025-07-10 16:35:06,604 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:06,605 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 6F69F65C-0943-4D1B-91AF-3102A0D41C4D.xml (35/74)
2025-07-10 16:35:06,605 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:06,606 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 6F69F65C-0943-4D1B-91AF-3102A0D41C4D.xml
2025-07-10 16:35:06,608 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 6F69F65C-0943-4D1B-91AF-3102A0D41C4D.xml
2025-07-10 16:35:06,648 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:06,648 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 6F69F65C-0943-4D1B-91AF-3102A0D41C4D
2025-07-10 16:35:06,649 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:06,652 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:06,657 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 55.49s ago] ('6F69F65C-0943-4D1B-91AF-3102A0D41C4D', 1, 0)
2025-07-10 16:35:06,663 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:06,663 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 12 items
2025-07-10 16:35:06,663 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_bd6f7e4b_50112010_pierna_de_pollo
2025-07-10 16:35:06,668 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_09573e71_50417006_arugula
2025-07-10 16:35:06,668 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_65d00f8a_50404101_albahaca
2025-07-10 16:35:06,668 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_f355fb89_50403800_ajo
2025-07-10 16:35:06,668 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:06,673 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:06,682 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 55.4s ago] ('sku_6b45f921_50404600_lechuga_romana_baby', 1, 0)
2025-07-10 16:35:06,684 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:06,686 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_6b45f921_50404600_lechuga_romana_baby
2025-07-10 16:35:08,093 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Verduras
2025-07-10 16:35:08,094 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Verduras (units_per_package: 1.0)
2025-07-10 16:35:08,096 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_4d8ff92b_50404600_lechuga_bola
2025-07-10 16:35:08,096 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_11cd495e_50401700_aguacate
2025-07-10 16:35:08,097 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_75903dde_50404803_champiñon
2025-07-10 16:35:08,098 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:08,098 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:08,103 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 56.82s ago] ('sku_15acbdb3_50404125_tomillo', 1, 0)
2025-07-10 16:35:08,104 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:08,106 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_15acbdb3_50404125_tomillo
2025-07-10 16:35:09,536 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Frutas
2025-07-10 16:35:09,538 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Frutas (units_per_package: 1.0)
2025-07-10 16:35:09,542 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:09,545 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:09,549 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 58.27s ago] ('sku_6ec9c23c_50405625_chile_jalapeño', 1, 0)
2025-07-10 16:35:09,551 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_6ec9c23c_50405625_chile_jalapeño -> Vegetales
2025-07-10 16:35:09,552 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:35:09,555 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 50.46s ago] (4, '2025-07-10 23:35:09.551415', 155)
2025-07-10 16:35:09,565 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:09,576 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:09,578 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:09,579 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 58.3s ago] ('sku_f124e3b5_50465500_chipotle_lata', 1, 0)
2025-07-10 16:35:09,583 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_f124e3b5_50465500_chipotle_lata -> Abarrotes
2025-07-10 16:35:09,586 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:35:09,588 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 50.49s ago] (2, '2025-07-10 23:35:09.583936', 7)
2025-07-10 16:35:09,591 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:09,598 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:09,598 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:09,607 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 58.32s ago] ('sku_822118da_50101717_nuez', 1, 0)
2025-07-10 16:35:09,608 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_822118da_50101717_nuez -> Abarrotes
2025-07-10 16:35:09,609 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:35:09,610 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 50.52s ago] (4, '2025-07-10 23:35:09.608259', 38)
2025-07-10 16:35:09,613 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:09,617 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:35:09,617 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:09,621 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:09,621 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 6F69F65C-0943-4D1B-91AF-3102A0D41C4D.xml: Failed to save invoice to database
2025-07-10 16:35:09,628 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:09,629 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:09,630 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 58.41s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 6F69F65C-0943-4D1B-91AF-3102A0D41C4D.xml', '{"filename": "6F69F65C-0943-4D1B-91AF-3102A0D41C4D.xml", "processing_time": 3.0146257877349854, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 3.0146257877349854, None, '6F69F65C-0943-4D1B-91AF-3102A0D41C4D.xml', None, '2025-07-10 23:35:09.629490')
2025-07-10 16:35:09,634 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:09,647 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 6F69F65C-0943-4D1B-91AF-3102A0D41C4D.xml to data/failed
2025-07-10 16:35:09,647 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:09,650 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 71f0b5d3-962a-4381-8990-cd84c14a3522.xml (36/74)
2025-07-10 16:35:09,652 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:09,653 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 71f0b5d3-962a-4381-8990-cd84c14a3522.xml
2025-07-10 16:35:09,655 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 71f0b5d3-962a-4381-8990-cd84c14a3522.xml
2025-07-10 16:35:09,693 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:09,696 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 71f0b5d3-962a-4381-8990-cd84c14a3522
2025-07-10 16:35:09,696 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:09,701 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:09,706 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 58.54s ago] ('71f0b5d3-962a-4381-8990-cd84c14a3522', 1, 0)
2025-07-10 16:35:09,706 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 71f0b5d3-962a-4381-8990-cd84c14a3522 already exists (ID: 86)
2025-07-10 16:35:09,710 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 71f0b5d3-962a-4381-8990-cd84c14a3522.xml
2025-07-10 16:35:09,710 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 71f0b5d3-962a-4381-8990-cd84c14a3522.xml
2025-07-10 16:35:09,710 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 00:00:00
2025-07-10 16:35:09,710 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $21267.93
2025-07-10 16:35:09,710 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:09,710 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:09,710 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:09,721 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 58.55s ago] ('71f0b5d3-962a-4381-8990-cd84c14a3522', 1, 0)
2025-07-10 16:35:09,729 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:09,730 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 71f0b5d3-962a-4381-8990-cd84c14a3522
2025-07-10 16:35:09,730 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 71f0b5d3-962a-4381-8990-cd84c14a3522.xml (ID: 86)
2025-07-10 16:35:09,730 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  71f0b5d3-962a-4381-8990-cd84c14a3522.xml
2025-07-10 16:35:09,735 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $21267.93 vs $21267.93
2025-07-10 16:35:09,737 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:09,738 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:09,740 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:09,741 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:09,742 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 58.52s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 71f0b5d3-962a-4381-8990-cd84c14a3522.xml', '{"filename": "71f0b5d3-962a-4381-8990-cd84c14a3522.xml", "processing_time": 0.08712601661682129, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 71f0b5d3-962a-4381-8990-cd84c14a3522 already exists"}', 0.08712601661682129, None, '71f0b5d3-962a-4381-8990-cd84c14a3522.xml', None, '2025-07-10 23:35:09.741896')
2025-07-10 16:35:09,745 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:09,760 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 71f0b5d3-962a-4381-8990-cd84c14a3522.xml - moved to failed directory
2025-07-10 16:35:09,761 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 71f0b5d3-962a-4381-8990-cd84c14a3522.xml to data/failed
2025-07-10 16:35:09,764 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:09,764 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 7302660E-1483-43CD-8364-305180BA2531.xml (37/74)
2025-07-10 16:35:09,764 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:09,764 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 7302660E-1483-43CD-8364-305180BA2531.xml
2025-07-10 16:35:09,764 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 7302660E-1483-43CD-8364-305180BA2531.xml
2025-07-10 16:35:09,807 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:09,807 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 7302660E-1483-43CD-8364-305180BA2531
2025-07-10 16:35:09,807 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:09,807 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:09,812 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 58.64s ago] ('7302660E-1483-43CD-8364-305180BA2531', 1, 0)
2025-07-10 16:35:09,812 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 7302660E-1483-43CD-8364-305180BA2531 already exists (ID: 87)
2025-07-10 16:35:09,812 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 7302660E-1483-43CD-8364-305180BA2531.xml
2025-07-10 16:35:09,812 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 7302660E-1483-43CD-8364-305180BA2531.xml
2025-07-10 16:35:09,812 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-06 00:00:00
2025-07-10 16:35:09,812 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1503.80
2025-07-10 16:35:09,812 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:09,812 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:09,812 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:09,812 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 58.65s ago] ('7302660E-1483-43CD-8364-305180BA2531', 1, 0)
2025-07-10 16:35:09,828 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:09,828 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 7302660E-1483-43CD-8364-305180BA2531
2025-07-10 16:35:09,828 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 7302660E-1483-43CD-8364-305180BA2531.xml (ID: 87)
2025-07-10 16:35:09,828 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  7302660E-1483-43CD-8364-305180BA2531.xml
2025-07-10 16:35:09,828 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $1503.80 vs $1503.80
2025-07-10 16:35:09,828 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:09,828 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:09,834 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:09,840 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:09,840 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 58.62s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 7302660E-1483-43CD-8364-305180BA2531.xml', '{"filename": "7302660E-1483-43CD-8364-305180BA2531.xml", "processing_time": 0.07023382186889648, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 7302660E-1483-43CD-8364-305180BA2531 already exists"}', 0.07023382186889648, None, '7302660E-1483-43CD-8364-305180BA2531.xml', None, '2025-07-10 23:35:09.840383')
2025-07-10 16:35:09,847 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:09,850 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 7302660E-1483-43CD-8364-305180BA2531.xml - moved to failed directory
2025-07-10 16:35:09,860 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 7302660E-1483-43CD-8364-305180BA2531.xml to data/failed
2025-07-10 16:35:09,860 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:09,861 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 7579E18A-2439-4BFF-A0F7-96B110FB3A40.xml (38/74)
2025-07-10 16:35:09,862 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:09,862 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 7579E18A-2439-4BFF-A0F7-96B110FB3A40.xml
2025-07-10 16:35:09,863 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 7579E18A-2439-4BFF-A0F7-96B110FB3A40.xml
2025-07-10 16:35:09,900 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:09,900 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 7579E18A-2439-4BFF-A0F7-96B110FB3A40
2025-07-10 16:35:09,900 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:09,900 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:09,909 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 58.74s ago] ('7579E18A-2439-4BFF-A0F7-96B110FB3A40', 1, 0)
2025-07-10 16:35:09,910 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:09,912 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 18 items
2025-07-10 16:35:09,912 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:09,919 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:09,921 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 58.64s ago] ('sku_4bbffe27_50131612_huevo', 1, 0)
2025-07-10 16:35:09,924 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_4bbffe27_50131612_huevo -> Abarrotes
2025-07-10 16:35:09,924 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:35:09,924 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 50.83s ago] (3, '2025-07-10 23:35:09.924012', 33)
2025-07-10 16:35:09,932 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:09,947 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:09,947 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:09,957 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 58.67s ago] ('sku_e08ae5b6_50131700_leche_entera_lala_1_lt', 1, 0)
2025-07-10 16:35:09,961 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:09,962 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_e08ae5b6_50131700_leche_entera_lala_1_lt
2025-07-10 16:35:11,366 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Leche
2025-07-10 16:35:11,367 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Leche (units_per_package: 1.0)
2025-07-10 16:35:11,369 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_14c77eea_50414500_kale
2025-07-10 16:35:11,371 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:11,372 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:11,375 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 60.09s ago] ('sku_65674870_52121602_toalla_interdoblada_kleenex_kirkland', 1, 0)
2025-07-10 16:35:11,377 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:11,378 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_65674870_52121602_toalla_interdoblada_kleenex_kirkland
2025-07-10 16:35:12,552 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Toalla
2025-07-10 16:35:12,553 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Toalla (units_per_package: 1.0)
2025-07-10 16:35:12,555 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:12,556 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:12,558 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 61.28s ago] ('sku_f434acf4_47131805_pinol', 1, 0)
2025-07-10 16:35:12,561 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:12,561 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_f434acf4_47131805_pinol
2025-07-10 16:35:13,709 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Detergente
2025-07-10 16:35:13,709 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Detergente (units_per_package: 1.0)
2025-07-10 16:35:13,709 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:13,709 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:13,719 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 62.44s ago] ('sku_c1ceb28c_50221002_harina_selecta', 1, 0)
2025-07-10 16:35:13,721 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:13,723 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_c1ceb28c_50221002_harina_selecta
2025-07-10 16:35:15,027 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Harinas
2025-07-10 16:35:15,027 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Harinas (units_per_package: 1.0)
2025-07-10 16:35:15,030 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:15,031 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:15,033 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 63.75s ago] ('sku_3e6d3bf9_50221303_maicena_160gr', 1, 0)
2025-07-10 16:35:15,034 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:15,035 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_3e6d3bf9_50221303_maicena_160gr
2025-07-10 16:35:16,545 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Harinas
2025-07-10 16:35:16,546 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Harinas (units_per_package: 1.0)
2025-07-10 16:35:16,550 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:16,555 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:16,561 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 65.28s ago] ('sku_5ff83584_50131700_crema_acida_1ltr', 1, 0)
2025-07-10 16:35:16,563 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_5ff83584_50131700_crema_acida_1ltr -> Lacteos
2025-07-10 16:35:16,564 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:35:16,568 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 57.47s ago] (2, '2025-07-10 23:35:16.563136', 63)
2025-07-10 16:35:16,577 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:16,588 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_11cd495e_50401700_aguacate
2025-07-10 16:35:16,590 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:16,592 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:16,596 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 65.31s ago] ('sku_dd599020_50161509_azucar', 1, 0)
2025-07-10 16:35:16,600 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_dd599020_50161509_azucar -> Abarrotes
2025-07-10 16:35:16,602 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:35:16,605 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 57.51s ago] (4, '2025-07-10 23:35:16.600174', 21)
2025-07-10 16:35:16,608 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:16,616 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:16,618 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:16,620 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 65.34s ago] ('sku_4eba0de0_50404109_eneldo', 1, 0)
2025-07-10 16:35:16,622 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:16,623 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_4eba0de0_50404109_eneldo
2025-07-10 16:35:17,966 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Especias
2025-07-10 16:35:17,966 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Especias (units_per_package: 1.0)
2025-07-10 16:35:17,968 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_9d78fad1_50404100_perejil_liso
2025-07-10 16:35:17,969 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_65d00f8a_50404101_albahaca
2025-07-10 16:35:17,970 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:17,971 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:17,973 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 66.69s ago] ('sku_969a275e_50404803_champiñon_blanco', 1, 0)
2025-07-10 16:35:17,974 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:17,976 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_969a275e_50404803_champiñon_blanco
2025-07-10 16:35:19,287 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Hongo
2025-07-10 16:35:19,287 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Hongo (units_per_package: 1.0)
2025-07-10 16:35:19,287 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:19,303 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:19,306 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 68.02s ago] ('sku_a61a9167_24111503_bolsa_basura_negras', 1, 0)
2025-07-10 16:35:19,307 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:19,308 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_a61a9167_24111503_bolsa_basura_negras
2025-07-10 16:35:20,790 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Bolsas
2025-07-10 16:35:20,793 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Bolsas (units_per_package: 1.0)
2025-07-10 16:35:20,795 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:20,795 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:20,797 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 69.52s ago] ('sku_cfb9d61c_50191500_sopa_barilla_spaguetti', 1, 0)
2025-07-10 16:35:20,801 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:20,803 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_cfb9d61c_50191500_sopa_barilla_spaguetti
2025-07-10 16:35:22,213 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Otros-a
2025-07-10 16:35:22,213 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Otros-a (units_per_package: 1.0)
2025-07-10 16:35:22,216 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:22,217 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:22,219 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 70.94s ago] ('sku_a62ca54d_50466800_elote_lata', 1, 0)
2025-07-10 16:35:22,220 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:22,221 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_a62ca54d_50466800_elote_lata
2025-07-10 16:35:23,493 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Conservas
2025-07-10 16:35:23,493 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Conservas (units_per_package: 1.0)
2025-07-10 16:35:23,495 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:23,498 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:23,502 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 72.22s ago] ('sku_bd10aff8_50405600_morron_verde', 1, 0)
2025-07-10 16:35:23,505 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_bd10aff8_50405600_morron_verde -> Vegetales
2025-07-10 16:35:23,508 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:35:23,509 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 64.41s ago] (2, '2025-07-10 23:35:23.505654', 163)
2025-07-10 16:35:23,511 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:23,521 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:35:23,523 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:23,527 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:23,530 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 7579E18A-2439-4BFF-A0F7-96B110FB3A40.xml: Failed to save invoice to database
2025-07-10 16:35:23,531 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:23,532 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:23,532 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 72.31s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 7579E18A-2439-4BFF-A0F7-96B110FB3A40.xml', '{"filename": "7579E18A-2439-4BFF-A0F7-96B110FB3A40.xml", "processing_time": 13.667603969573975, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 13.667603969573975, None, '7579E18A-2439-4BFF-A0F7-96B110FB3A40.xml', None, '2025-07-10 23:35:23.532319')
2025-07-10 16:35:23,535 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:23,542 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 7579E18A-2439-4BFF-A0F7-96B110FB3A40.xml to data/failed
2025-07-10 16:35:23,544 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:23,545 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 7CB73D45-AF0A-434F-A1E0-902AC8314AC1.xml (39/74)
2025-07-10 16:35:23,545 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:23,546 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 7CB73D45-AF0A-434F-A1E0-902AC8314AC1.xml
2025-07-10 16:35:23,546 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 7CB73D45-AF0A-434F-A1E0-902AC8314AC1.xml
2025-07-10 16:35:23,548 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:23,549 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 7CB73D45-AF0A-434F-A1E0-902AC8314AC1
2025-07-10 16:35:23,556 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:23,558 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:23,560 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 72.39s ago] ('7CB73D45-AF0A-434F-A1E0-902AC8314AC1', 1, 0)
2025-07-10 16:35:23,565 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:23,568 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 4 items
2025-07-10 16:35:23,568 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_9a57e1c2_50304100_limon_sin_semilla
2025-07-10 16:35:23,570 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_141a86f5_10161506_naranja
2025-07-10 16:35:23,570 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_306c40c7_50303300_toronja
2025-07-10 16:35:23,570 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg
2025-07-10 16:35:23,574 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:35:23,577 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:23,579 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:23,580 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 7CB73D45-AF0A-434F-A1E0-902AC8314AC1.xml: Failed to save invoice to database
2025-07-10 16:35:23,581 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:23,582 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:23,583 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 72.36s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 7CB73D45-AF0A-434F-A1E0-902AC8314AC1.xml', '{"filename": "7CB73D45-AF0A-434F-A1E0-902AC8314AC1.xml", "processing_time": 0.03441596031188965, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 0.03441596031188965, None, '7CB73D45-AF0A-434F-A1E0-902AC8314AC1.xml', None, '2025-07-10 23:35:23.582667')
2025-07-10 16:35:23,587 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:23,597 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 7CB73D45-AF0A-434F-A1E0-902AC8314AC1.xml to data/failed
2025-07-10 16:35:23,597 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:23,600 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 7D2019DB-CD61-4600-8F65-DD44ADF4FC0E.xml (40/74)
2025-07-10 16:35:23,601 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:23,601 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 7D2019DB-CD61-4600-8F65-DD44ADF4FC0E.xml
2025-07-10 16:35:23,602 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 7D2019DB-CD61-4600-8F65-DD44ADF4FC0E.xml
2025-07-10 16:35:23,606 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:23,607 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 7D2019DB-CD61-4600-8F65-DD44ADF4FC0E
2025-07-10 16:35:23,608 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:23,610 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:23,611 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 72.44s ago] ('7D2019DB-CD61-4600-8F65-DD44ADF4FC0E', 1, 0)
2025-07-10 16:35:23,613 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:23,615 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 22 items
2025-07-10 16:35:23,617 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:23,621 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:23,624 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 72.34s ago] ('sku_d466594e_50405700_papa_russet', 1, 0)
2025-07-10 16:35:23,625 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_d466594e_50405700_papa_russet -> Vegetales
2025-07-10 16:35:23,630 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:35:23,631 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 64.54s ago] (4, '2025-07-10 23:35:23.625820', 152)
2025-07-10 16:35:23,633 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:23,637 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:23,645 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:23,648 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 72.37s ago] ('sku_80bf8a82_50401900_betabel', 1, 0)
2025-07-10 16:35:23,650 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_80bf8a82_50401900_betabel -> Vegetales
2025-07-10 16:35:23,651 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:35:23,652 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 64.56s ago] (4, '2025-07-10 23:35:23.650152', 147)
2025-07-10 16:35:23,655 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:23,667 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:23,670 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:23,673 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 72.39s ago] ('sku_ad883c3a_50171707_vinagre_blanca', 1, 0)
2025-07-10 16:35:23,678 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:23,679 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_ad883c3a_50171707_vinagre_blanca
2025-07-10 16:35:24,949 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Vinagre
2025-07-10 16:35:24,965 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Vinagre (units_per_package: 1.0)
2025-07-10 16:35:24,966 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_8f28f7c7_50402300_repollo_verde
2025-07-10 16:35:24,970 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_c1ceb28c_50221002_harina_selecta
2025-07-10 16:35:24,973 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:24,975 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:24,978 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 73.7s ago] ('sku_5d1c9e00_50221303_maicena', 1, 0)
2025-07-10 16:35:24,980 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:24,981 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_5d1c9e00_50221303_maicena
2025-07-10 16:35:26,227 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Harinas
2025-07-10 16:35:26,228 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Harinas (units_per_package: 1.0)
2025-07-10 16:35:26,229 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_4770c1ef_50402800_acelga
2025-07-10 16:35:26,230 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_9694c503_50403500_berenjena
2025-07-10 16:35:26,231 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_75903dde_50404803_champiñon
2025-07-10 16:35:26,232 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_14c77eea_50414500_kale
2025-07-10 16:35:26,235 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:26,236 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:26,239 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 74.96s ago] ('sku_da92dd80_50131700_leche_lala', 1, 0)
2025-07-10 16:35:26,240 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:26,241 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_da92dd80_50131700_leche_lala
2025-07-10 16:35:27,398 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Leche
2025-07-10 16:35:27,399 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Leche (units_per_package: 1.0)
2025-07-10 16:35:27,400 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_07ae298e_50304100_limon_amarillo
2025-07-10 16:35:27,401 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:27,403 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:27,405 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 76.12s ago] ('sku_430b655a_50131800_queso_cabra_kirkland', 1, 0)
2025-07-10 16:35:27,406 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:27,406 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_430b655a_50131800_queso_cabra_kirkland
2025-07-10 16:35:28,813 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Queso
2025-07-10 16:35:28,813 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Queso (units_per_package: 1.0)
2025-07-10 16:35:28,819 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_e6d42f0b_50403800_shallot
2025-07-10 16:35:28,822 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:28,824 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:28,825 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 77.54s ago] ('sku_cfc58a92_50193104_pure_de_tomate_el_fuerte', 1, 0)
2025-07-10 16:35:28,826 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:28,826 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_cfc58a92_50193104_pure_de_tomate_el_fuerte
2025-07-10 16:35:30,131 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Conservas
2025-07-10 16:35:30,133 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Conservas (units_per_package: 1.0)
2025-07-10 16:35:30,135 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:30,135 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:30,139 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 78.86s ago] ('sku_e943c485_50221001_arroz', 1, 0)
2025-07-10 16:35:30,141 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_e943c485_50221001_arroz -> Abarrotes
2025-07-10 16:35:30,142 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:35:30,144 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 71.05s ago] (3, '2025-07-10 23:35:30.141364', 5)
2025-07-10 16:35:30,151 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:30,161 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_a88cb11c_50402500_zanahoria
2025-07-10 16:35:30,162 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:30,164 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:30,165 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 78.88s ago] ('sku_c6f75d78_50112010_pechuga_de_pollo', 1, 0)
2025-07-10 16:35:30,168 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_c6f75d78_50112010_pechuga_de_pollo -> Proteinas
2025-07-10 16:35:30,171 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:35:30,172 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 71.08s ago] (3, '2025-07-10 23:35:30.168689', 91)
2025-07-10 16:35:30,177 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:30,186 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_a61a9167_24111503_bolsa_basura_negras
2025-07-10 16:35:30,187 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:30,188 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:30,190 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 78.91s ago] ('sku_65a78bb3_52121602_servilleta_kirklan', 1, 0)
2025-07-10 16:35:30,191 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:30,192 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_65a78bb3_52121602_servilleta_kirklan
2025-07-10 16:35:31,460 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Servilletas
2025-07-10 16:35:31,464 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Servilletas (units_per_package: 1.0)
2025-07-10 16:35:31,464 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:31,469 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:31,472 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 80.19s ago] ('sku_3241746a_53131608_jabon_roma5kg', 1, 0)
2025-07-10 16:35:31,475 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:31,477 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_3241746a_53131608_jabon_roma5kg
2025-07-10 16:35:32,766 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Jabón
2025-07-10 16:35:32,766 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Jabón (units_per_package: 1.0)
2025-07-10 16:35:32,769 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg
2025-07-10 16:35:32,769 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:35:32,771 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:32,771 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:32,771 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 7D2019DB-CD61-4600-8F65-DD44ADF4FC0E.xml: Failed to save invoice to database
2025-07-10 16:35:32,773 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:32,774 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:32,774 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 81.55s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 7D2019DB-CD61-4600-8F65-DD44ADF4FC0E.xml', '{"filename": "7D2019DB-CD61-4600-8F65-DD44ADF4FC0E.xml", "processing_time": 9.170469999313354, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 9.170469999313354, None, '7D2019DB-CD61-4600-8F65-DD44ADF4FC0E.xml', None, '2025-07-10 23:35:32.774833')
2025-07-10 16:35:32,783 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:32,792 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 7D2019DB-CD61-4600-8F65-DD44ADF4FC0E.xml to data/failed
2025-07-10 16:35:32,793 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:32,793 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 7E6332A9-BF15-4F9F-BE4F-CEADDF154AD7.xml (41/74)
2025-07-10 16:35:32,798 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:32,800 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 7E6332A9-BF15-4F9F-BE4F-CEADDF154AD7.xml
2025-07-10 16:35:32,802 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 7E6332A9-BF15-4F9F-BE4F-CEADDF154AD7.xml
2025-07-10 16:35:32,805 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:32,808 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 7E6332A9-BF15-4F9F-BE4F-CEADDF154AD7
2025-07-10 16:35:32,810 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:32,811 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:32,814 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 81.64s ago] ('7E6332A9-BF15-4F9F-BE4F-CEADDF154AD7', 1, 0)
2025-07-10 16:35:32,814 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:32,824 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 3 items
2025-07-10 16:35:32,824 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_f124e3b5_50465500_chipotle_lata
2025-07-10 16:35:32,826 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_44f0bbec_50403900_calabaza_negra
2025-07-10 16:35:32,826 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:32,826 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:32,837 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 81.55s ago] ('sku_e1a4a42f_50111516_arrachera_kirkland', 1, 0)
2025-07-10 16:35:32,837 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:32,841 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_e1a4a42f_50111516_arrachera_kirkland
2025-07-10 16:35:34,104 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Proteinas -> Carne de res
2025-07-10 16:35:34,104 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Proteinas -> Carne de res (units_per_package: 1.0)
2025-07-10 16:35:34,104 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:35:34,104 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:34,117 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:34,118 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 7E6332A9-BF15-4F9F-BE4F-CEADDF154AD7.xml: Failed to save invoice to database
2025-07-10 16:35:34,119 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:34,119 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:34,121 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 82.9s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 7E6332A9-BF15-4F9F-BE4F-CEADDF154AD7.xml', '{"filename": "7E6332A9-BF15-4F9F-BE4F-CEADDF154AD7.xml", "processing_time": 1.3177361488342285, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 1.3177361488342285, None, '7E6332A9-BF15-4F9F-BE4F-CEADDF154AD7.xml', None, '2025-07-10 23:35:34.119836')
2025-07-10 16:35:34,124 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:34,131 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 7E6332A9-BF15-4F9F-BE4F-CEADDF154AD7.xml to data/failed
2025-07-10 16:35:34,132 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:34,132 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 838AE357-5D6A-455A-863E-6DB46DCA43F7.xml (42/74)
2025-07-10 16:35:34,132 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:34,134 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 838AE357-5D6A-455A-863E-6DB46DCA43F7.xml
2025-07-10 16:35:34,135 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 838AE357-5D6A-455A-863E-6DB46DCA43F7.xml
2025-07-10 16:35:34,137 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:34,143 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 838AE357-5D6A-455A-863E-6DB46DCA43F7
2025-07-10 16:35:34,145 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:34,149 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:34,151 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 82.98s ago] ('838AE357-5D6A-455A-863E-6DB46DCA43F7', 1, 0)
2025-07-10 16:35:34,155 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 838AE357-5D6A-455A-863E-6DB46DCA43F7 already exists (ID: 88)
2025-07-10 16:35:34,155 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 838AE357-5D6A-455A-863E-6DB46DCA43F7.xml
2025-07-10 16:35:34,157 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 838AE357-5D6A-455A-863E-6DB46DCA43F7.xml
2025-07-10 16:35:34,158 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-18 00:00:00
2025-07-10 16:35:34,159 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $358.00
2025-07-10 16:35:34,160 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:34,161 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:34,163 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:34,165 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 83s ago] ('838AE357-5D6A-455A-863E-6DB46DCA43F7', 1, 0)
2025-07-10 16:35:34,165 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:34,165 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 838AE357-5D6A-455A-863E-6DB46DCA43F7
2025-07-10 16:35:34,174 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 838AE357-5D6A-455A-863E-6DB46DCA43F7.xml (ID: 88)
2025-07-10 16:35:34,174 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  838AE357-5D6A-455A-863E-6DB46DCA43F7.xml
2025-07-10 16:35:34,176 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $358.00 vs $358.00
2025-07-10 16:35:34,177 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:34,177 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:34,182 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:34,186 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:34,186 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 82.97s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 838AE357-5D6A-455A-863E-6DB46DCA43F7.xml', '{"filename": "838AE357-5D6A-455A-863E-6DB46DCA43F7.xml", "processing_time": 0.04870271682739258, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 838AE357-5D6A-455A-863E-6DB46DCA43F7 already exists"}', 0.04870271682739258, None, '838AE357-5D6A-455A-863E-6DB46DCA43F7.xml', None, '2025-07-10 23:35:34.186531')
2025-07-10 16:35:34,192 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:34,203 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 838AE357-5D6A-455A-863E-6DB46DCA43F7.xml - moved to failed directory
2025-07-10 16:35:34,206 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 838AE357-5D6A-455A-863E-6DB46DCA43F7.xml to data/failed
2025-07-10 16:35:34,206 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:34,207 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 85486D72-0E84-4A6E-8656-A366CBD3D64E.xml (43/74)
2025-07-10 16:35:34,208 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:34,208 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 85486D72-0E84-4A6E-8656-A366CBD3D64E.xml
2025-07-10 16:35:34,208 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 85486D72-0E84-4A6E-8656-A366CBD3D64E.xml
2025-07-10 16:35:34,218 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:34,220 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 85486D72-0E84-4A6E-8656-A366CBD3D64E
2025-07-10 16:35:34,222 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:34,222 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:34,226 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 83.05s ago] ('85486D72-0E84-4A6E-8656-A366CBD3D64E', 1, 0)
2025-07-10 16:35:34,228 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 85486D72-0E84-4A6E-8656-A366CBD3D64E already exists (ID: 89)
2025-07-10 16:35:34,228 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 85486D72-0E84-4A6E-8656-A366CBD3D64E.xml
2025-07-10 16:35:34,230 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 85486D72-0E84-4A6E-8656-A366CBD3D64E.xml
2025-07-10 16:35:34,230 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-14 00:00:00
2025-07-10 16:35:34,230 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $626.50
2025-07-10 16:35:34,239 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:34,240 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:34,240 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:34,245 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 83.07s ago] ('85486D72-0E84-4A6E-8656-A366CBD3D64E', 1, 0)
2025-07-10 16:35:34,250 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:34,250 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 85486D72-0E84-4A6E-8656-A366CBD3D64E
2025-07-10 16:35:34,252 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 85486D72-0E84-4A6E-8656-A366CBD3D64E.xml (ID: 89)
2025-07-10 16:35:34,252 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  85486D72-0E84-4A6E-8656-A366CBD3D64E.xml
2025-07-10 16:35:34,252 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $626.50 vs $626.50
2025-07-10 16:35:34,252 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:34,256 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:34,256 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:34,259 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:34,260 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 83.04s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 85486D72-0E84-4A6E-8656-A366CBD3D64E.xml', '{"filename": "85486D72-0E84-4A6E-8656-A366CBD3D64E.xml", "processing_time": 0.047631263732910156, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 85486D72-0E84-4A6E-8656-A366CBD3D64E already exists"}', 0.047631263732910156, None, '85486D72-0E84-4A6E-8656-A366CBD3D64E.xml', None, '2025-07-10 23:35:34.259035')
2025-07-10 16:35:34,263 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:34,275 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 85486D72-0E84-4A6E-8656-A366CBD3D64E.xml - moved to failed directory
2025-07-10 16:35:34,281 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 85486D72-0E84-4A6E-8656-A366CBD3D64E.xml to data/failed
2025-07-10 16:35:34,284 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:34,284 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 8AC2BFA4-8362-4291-B692-9C2D450198E4.xml (44/74)
2025-07-10 16:35:34,285 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:34,287 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 8AC2BFA4-8362-4291-B692-9C2D450198E4.xml
2025-07-10 16:35:34,289 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 8AC2BFA4-8362-4291-B692-9C2D450198E4.xml
2025-07-10 16:35:34,291 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:34,291 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 8AC2BFA4-8362-4291-B692-9C2D450198E4
2025-07-10 16:35:34,294 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:34,300 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:34,303 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 83.13s ago] ('8AC2BFA4-8362-4291-B692-9C2D450198E4', 1, 0)
2025-07-10 16:35:34,304 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:34,306 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 14 items
2025-07-10 16:35:34,306 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_4770c1ef_50402800_acelga
2025-07-10 16:35:34,308 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_14c77eea_50414500_kale
2025-07-10 16:35:34,308 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_4d8ff92b_50404600_lechuga_bola
2025-07-10 16:35:34,308 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_4fe3aae4_50171551_sal_la_fina_1_kg
2025-07-10 16:35:34,308 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_80bf8a82_50401900_betabel
2025-07-10 16:35:34,308 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_09573e71_50417006_arugula
2025-07-10 16:35:34,314 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:34,314 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:34,323 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 83.04s ago] ('sku_511e9537_50406500_tomate_cherry_rojo', 1, 0)
2025-07-10 16:35:34,325 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:34,325 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_511e9537_50406500_tomate_cherry_rojo
2025-07-10 16:35:35,646 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Frutas
2025-07-10 16:35:35,646 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Frutas (units_per_package: 1.0)
2025-07-10 16:35:35,646 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_6ec9c23c_50405625_chile_jalapeño
2025-07-10 16:35:35,648 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_bd6f7e4b_50112010_pierna_de_pollo
2025-07-10 16:35:35,648 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:35,648 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:35,650 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 84.37s ago] ('sku_d8b29b14_53131608_jabon_roma_5kg', 1, 0)
2025-07-10 16:35:35,650 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:35,654 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_d8b29b14_53131608_jabon_roma_5kg
2025-07-10 16:35:36,852 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Jabón
2025-07-10 16:35:36,863 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Jabón (units_per_package: 1.0)
2025-07-10 16:35:36,863 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_65d00f8a_50404101_albahaca
2025-07-10 16:35:36,863 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_07ae298e_50304100_limon_amarillo
2025-07-10 16:35:36,863 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_9a57e1c2_50304100_limon_sin_semilla
2025-07-10 16:35:36,866 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg
2025-07-10 16:35:36,866 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:35:36,867 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:36,867 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:36,868 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 8AC2BFA4-8362-4291-B692-9C2D450198E4.xml: Failed to save invoice to database
2025-07-10 16:35:36,869 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:36,870 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:36,873 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 85.65s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 8AC2BFA4-8362-4291-B692-9C2D450198E4.xml', '{"filename": "8AC2BFA4-8362-4291-B692-9C2D450198E4.xml", "processing_time": 2.5811774730682373, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 2.5811774730682373, None, '8AC2BFA4-8362-4291-B692-9C2D450198E4.xml', None, '2025-07-10 23:35:36.870944')
2025-07-10 16:35:36,886 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:36,893 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 8AC2BFA4-8362-4291-B692-9C2D450198E4.xml to data/failed
2025-07-10 16:35:36,899 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:36,900 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml (45/74)
2025-07-10 16:35:36,902 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:36,903 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml
2025-07-10 16:35:36,903 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml
2025-07-10 16:35:36,905 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:36,906 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15
2025-07-10 16:35:36,908 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:36,910 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:36,913 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 85.74s ago] ('8B42E65A-D0C1-4F16-8A77-9B9D2C513E15', 1, 0)
2025-07-10 16:35:36,913 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15 already exists (ID: 90)
2025-07-10 16:35:36,922 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml
2025-07-10 16:35:36,923 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml
2025-07-10 16:35:36,924 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-10 16:35:36,924 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $462.00
2025-07-10 16:35:36,925 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:36,926 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:36,927 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:36,930 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 85.76s ago] ('8B42E65A-D0C1-4F16-8A77-9B9D2C513E15', 1, 0)
2025-07-10 16:35:36,932 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:36,932 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15
2025-07-10 16:35:36,933 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml (ID: 90)
2025-07-10 16:35:36,934 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml
2025-07-10 16:35:36,935 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $462.00 vs $462.00
2025-07-10 16:35:36,935 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:36,936 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:36,938 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:36,943 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:36,944 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 85.72s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml', '{"filename": "8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml", "processing_time": 0.03574204444885254, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15 already exists"}', 0.03574204444885254, None, '8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml', None, '2025-07-10 23:35:36.942752')
2025-07-10 16:35:36,951 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:36,960 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml - moved to failed directory
2025-07-10 16:35:36,964 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml to data/failed
2025-07-10 16:35:36,965 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:36,966 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 8CCD00E8-8EAC-4926-BE8F-0B57C8856E84.xml (46/74)
2025-07-10 16:35:36,967 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:36,970 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 8CCD00E8-8EAC-4926-BE8F-0B57C8856E84.xml
2025-07-10 16:35:36,974 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 8CCD00E8-8EAC-4926-BE8F-0B57C8856E84.xml
2025-07-10 16:35:36,978 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:36,979 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 8CCD00E8-8EAC-4926-BE8F-0B57C8856E84
2025-07-10 16:35:36,982 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:36,984 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:36,988 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 85.82s ago] ('8CCD00E8-8EAC-4926-BE8F-0B57C8856E84', 1, 0)
2025-07-10 16:35:36,990 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:36,991 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 24 items
2025-07-10 16:35:36,993 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:36,995 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:36,996 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 85.72s ago] ('sku_198d9117_50305800_ciruela_españa', 1, 0)
2025-07-10 16:35:37,003 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:37,003 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_198d9117_50305800_ciruela_españa
2025-07-10 16:35:38,191 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Frutas
2025-07-10 16:35:38,192 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Frutas (units_per_package: 1.0)
2025-07-10 16:35:38,193 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:38,194 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:38,195 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 86.91s ago] ('sku_5fc7c639_50305400_pera_verde', 1, 0)
2025-07-10 16:35:38,197 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:38,199 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_5fc7c639_50305400_pera_verde
2025-07-10 16:35:39,569 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Frutas
2025-07-10 16:35:39,569 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Frutas (units_per_package: 1.0)
2025-07-10 16:35:39,575 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:39,577 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:39,581 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 88.3s ago] ('sku_6914c0d3_50307025_platano_portalimon', 1, 0)
2025-07-10 16:35:39,583 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:39,585 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_6914c0d3_50307025_platano_portalimon
2025-07-10 16:35:40,922 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Frutas
2025-07-10 16:35:40,922 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Frutas (units_per_package: 1.0)
2025-07-10 16:35:40,938 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:40,943 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:40,946 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 89.66s ago] ('sku_cb8ef419_50131701_yogurt_natural_kirkland', 1, 0)
2025-07-10 16:35:40,948 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:40,950 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_cb8ef419_50131701_yogurt_natural_kirkland
2025-07-10 16:35:42,070 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Otros-l
2025-07-10 16:35:42,070 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Otros-l (units_per_package: 1.0)
2025-07-10 16:35:42,083 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:42,084 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:42,088 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 90.8s ago] ('sku_5db02232_50131612_huevo_cartera_12pz', 1, 0)
2025-07-10 16:35:42,090 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:42,090 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_5db02232_50131612_huevo_cartera_12pz
2025-07-10 16:35:43,578 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Huevos
2025-07-10 16:35:43,578 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Huevos (units_per_package: 12.0)
2025-07-10 16:35:43,579 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:43,581 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:43,581 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 92.3s ago] ('sku_6e09edc1_50171548_chai', 1, 0)
2025-07-10 16:35:43,585 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_6e09edc1_50171548_chai -> Abarrotes
2025-07-10 16:35:43,586 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:35:43,586 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 84.49s ago] (3, '2025-07-10 23:35:43.585014', 43)
2025-07-10 16:35:43,591 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:43,601 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_f6ce5c99_50404600_lechuga_mixta
2025-07-10 16:35:43,602 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_6b45f921_50404600_lechuga_romana_baby
2025-07-10 16:35:43,602 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_14c77eea_50414500_kale
2025-07-10 16:35:43,604 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_4770c1ef_50402800_acelga
2025-07-10 16:35:43,604 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_70ae329c_50301500_manzana_verde
2025-07-10 16:35:43,609 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_bd6f7e4b_50112010_pierna_de_pollo
2025-07-10 16:35:43,613 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_e6d42f0b_50403800_shallot
2025-07-10 16:35:43,615 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:43,615 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:43,618 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 92.34s ago] ('sku_1c2f8922_50131700_mantequilla_gloria_con_sal', 1, 0)
2025-07-10 16:35:43,620 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:43,621 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_1c2f8922_50131700_mantequilla_gloria_con_sal
2025-07-10 16:35:45,040 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Otros-l
2025-07-10 16:35:45,040 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Otros-l (units_per_package: 1.0)
2025-07-10 16:35:45,042 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_3823c19d_50405300_cebolla_blanca
2025-07-10 16:35:45,045 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_09573e71_50417006_arugula
2025-07-10 16:35:45,046 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_822118da_50101717_nuez
2025-07-10 16:35:45,049 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_1f9cc88b_50131800_queso_cabra_blanco_340gr
2025-07-10 16:35:45,051 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:45,054 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:45,057 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 93.77s ago] ('sku_d2926dd5_50131800_queso_asadero', 1, 0)
2025-07-10 16:35:45,057 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:45,060 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_d2926dd5_50131800_queso_asadero
2025-07-10 16:35:46,502 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Queso
2025-07-10 16:35:46,503 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Queso (units_per_package: 1.0)
2025-07-10 16:35:46,505 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg
2025-07-10 16:35:46,507 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_9a57e1c2_50304100_limon_sin_semilla
2025-07-10 16:35:46,508 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_141a86f5_10161506_naranja
2025-07-10 16:35:46,510 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:46,512 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:46,516 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 95.23s ago] ('sku_b2aa8fa6_50307030_jamaica_12_kg', 1, 0)
2025-07-10 16:35:46,521 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:46,522 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_b2aa8fa6_50307030_jamaica_12_kg
2025-07-10 16:35:47,839 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Concentrados
2025-07-10 16:35:47,839 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Concentrados (units_per_package: 1.0)
2025-07-10 16:35:47,840 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_11cd495e_50401700_aguacate
2025-07-10 16:35:47,840 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:35:47,840 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:47,840 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:47,843 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 8CCD00E8-8EAC-4926-BE8F-0B57C8856E84.xml: Failed to save invoice to database
2025-07-10 16:35:47,843 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:47,844 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:47,846 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 96.62s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 8CCD00E8-8EAC-4926-BE8F-0B57C8856E84.xml', '{"filename": "8CCD00E8-8EAC-4926-BE8F-0B57C8856E84.xml", "processing_time": 10.873377084732056, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 10.873377084732056, None, '8CCD00E8-8EAC-4926-BE8F-0B57C8856E84.xml', None, '2025-07-10 23:35:47.844805')
2025-07-10 16:35:47,853 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:47,859 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 8CCD00E8-8EAC-4926-BE8F-0B57C8856E84.xml to data/failed
2025-07-10 16:35:47,860 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:47,861 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 90361E74-0E55-478B-9756-9B9D2C5106BE.xml (47/74)
2025-07-10 16:35:47,861 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:47,862 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 90361E74-0E55-478B-9756-9B9D2C5106BE.xml
2025-07-10 16:35:47,862 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 90361E74-0E55-478B-9756-9B9D2C5106BE.xml
2025-07-10 16:35:47,864 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:47,864 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 90361E74-0E55-478B-9756-9B9D2C5106BE
2025-07-10 16:35:47,867 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:47,873 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:47,874 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 96.7s ago] ('90361E74-0E55-478B-9756-9B9D2C5106BE', 1, 0)
2025-07-10 16:35:47,876 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 90361E74-0E55-478B-9756-9B9D2C5106BE already exists (ID: 91)
2025-07-10 16:35:47,877 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 90361E74-0E55-478B-9756-9B9D2C5106BE.xml
2025-07-10 16:35:47,877 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 90361E74-0E55-478B-9756-9B9D2C5106BE.xml
2025-07-10 16:35:47,878 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-10 16:35:47,878 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $308.00
2025-07-10 16:35:47,879 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:47,880 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:47,883 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:47,888 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 96.72s ago] ('90361E74-0E55-478B-9756-9B9D2C5106BE', 1, 0)
2025-07-10 16:35:47,889 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:47,890 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 90361E74-0E55-478B-9756-9B9D2C5106BE
2025-07-10 16:35:47,892 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 90361E74-0E55-478B-9756-9B9D2C5106BE.xml (ID: 91)
2025-07-10 16:35:47,893 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  90361E74-0E55-478B-9756-9B9D2C5106BE.xml
2025-07-10 16:35:47,893 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $308.00 vs $308.00
2025-07-10 16:35:47,893 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:47,893 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:47,895 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:47,896 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:47,897 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 96.67s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 90361E74-0E55-478B-9756-9B9D2C5106BE.xml', '{"filename": "90361E74-0E55-478B-9756-9B9D2C5106BE.xml", "processing_time": 0.032689809799194336, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 90361E74-0E55-478B-9756-9B9D2C5106BE already exists"}', 0.032689809799194336, None, '90361E74-0E55-478B-9756-9B9D2C5106BE.xml', None, '2025-07-10 23:35:47.896190')
2025-07-10 16:35:47,897 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:47,913 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 90361E74-0E55-478B-9756-9B9D2C5106BE.xml - moved to failed directory
2025-07-10 16:35:47,914 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 90361E74-0E55-478B-9756-9B9D2C5106BE.xml to data/failed
2025-07-10 16:35:47,922 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:47,923 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml (48/74)
2025-07-10 16:35:47,924 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:47,925 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml
2025-07-10 16:35:47,927 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml
2025-07-10 16:35:47,930 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:47,930 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 96752AF7-7702-4BC1-939B-B0EA13BC5D3C
2025-07-10 16:35:47,937 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:47,940 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:47,944 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 96.77s ago] ('96752AF7-7702-4BC1-939B-B0EA13BC5D3C', 1, 0)
2025-07-10 16:35:47,945 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 96752AF7-7702-4BC1-939B-B0EA13BC5D3C already exists (ID: 92)
2025-07-10 16:35:47,945 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml
2025-07-10 16:35:47,948 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml
2025-07-10 16:35:47,948 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-10 16:35:47,948 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $3243.00
2025-07-10 16:35:47,953 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:47,957 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:47,958 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:47,961 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 96.79s ago] ('96752AF7-7702-4BC1-939B-B0EA13BC5D3C', 1, 0)
2025-07-10 16:35:47,964 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:47,964 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 96752AF7-7702-4BC1-939B-B0EA13BC5D3C
2025-07-10 16:35:47,968 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml (ID: 92)
2025-07-10 16:35:47,968 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml
2025-07-10 16:35:47,975 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $3243.00 vs $3243.00
2025-07-10 16:35:47,975 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:47,977 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:47,978 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:47,980 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:47,984 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 96.76s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml', '{"filename": "96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml", "processing_time": 0.05321073532104492, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 96752AF7-7702-4BC1-939B-B0EA13BC5D3C already exists"}', 0.05321073532104492, None, '96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml', None, '2025-07-10 23:35:47.980812')
2025-07-10 16:35:47,994 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:48,000 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml - moved to failed directory
2025-07-10 16:35:48,006 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml to data/failed
2025-07-10 16:35:48,007 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:48,007 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 9B316DDF-0827-4012-B8E8-9C08161BF41B.xml (49/74)
2025-07-10 16:35:48,009 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:48,010 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 9B316DDF-0827-4012-B8E8-9C08161BF41B.xml
2025-07-10 16:35:48,010 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 9B316DDF-0827-4012-B8E8-9C08161BF41B.xml
2025-07-10 16:35:48,014 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:48,017 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 9B316DDF-0827-4012-B8E8-9C08161BF41B
2025-07-10 16:35:48,021 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:48,021 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:48,023 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 96.85s ago] ('9B316DDF-0827-4012-B8E8-9C08161BF41B', 1, 0)
2025-07-10 16:35:48,023 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:48,029 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 17 items
2025-07-10 16:35:48,029 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_14c77eea_50414500_kale
2025-07-10 16:35:48,030 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_6ec9c23c_50405625_chile_jalapeño
2025-07-10 16:35:48,030 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_6b45f921_50404600_lechuga_romana_baby
2025-07-10 16:35:48,036 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_f6ce5c99_50404600_lechuga_mixta
2025-07-10 16:35:48,038 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_4770c1ef_50402800_acelga
2025-07-10 16:35:48,038 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_11cd495e_50401700_aguacate
2025-07-10 16:35:48,038 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_bd6f7e4b_50112010_pierna_de_pollo
2025-07-10 16:35:48,038 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_09573e71_50417006_arugula
2025-07-10 16:35:48,038 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_07ae298e_50304100_limon_amarillo
2025-07-10 16:35:48,038 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_3823c19d_50405300_cebolla_blanca
2025-07-10 16:35:48,045 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:48,047 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:48,049 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 96.77s ago] ('sku_b3f78bc6_50401806_frijol_pinto', 1, 0)
2025-07-10 16:35:48,053 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_b3f78bc6_50401806_frijol_pinto -> Abarrotes
2025-07-10 16:35:48,056 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:35:48,058 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 88.96s ago] (3, '2025-07-10 23:35:48.053462', 36)
2025-07-10 16:35:48,064 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:48,074 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_4d8ff92b_50404600_lechuga_bola
2025-07-10 16:35:48,074 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_5ff83584_50131700_crema_acida_1ltr
2025-07-10 16:35:48,074 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_d2926dd5_50131800_queso_asadero
2025-07-10 16:35:48,074 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_5ac938a8_50221300_tortilla_maiz
2025-07-10 16:35:48,079 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:48,081 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:48,082 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 96.8s ago] ('sku_03063d42_50221300_tortilla_maiz_medio_kilo', 1, 0)
2025-07-10 16:35:48,089 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_03063d42_50221300_tortilla_maiz_medio_kilo -> Abarrotes
2025-07-10 16:35:48,090 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:35:48,093 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 89s ago] (2, '2025-07-10 23:35:48.089225', 50)
2025-07-10 16:35:48,099 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:48,107 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_c6f75d78_50112010_pechuga_de_pollo
2025-07-10 16:35:48,107 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:35:48,112 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:48,113 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:48,113 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process 9B316DDF-0827-4012-B8E8-9C08161BF41B.xml: Failed to save invoice to database
2025-07-10 16:35:48,117 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:48,121 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:48,126 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 96.9s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 9B316DDF-0827-4012-B8E8-9C08161BF41B.xml', '{"filename": "9B316DDF-0827-4012-B8E8-9C08161BF41B.xml", "processing_time": 0.10424470901489258, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 0.10424470901489258, None, '9B316DDF-0827-4012-B8E8-9C08161BF41B.xml', None, '2025-07-10 23:35:48.121849')
2025-07-10 16:35:48,141 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:48,155 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 9B316DDF-0827-4012-B8E8-9C08161BF41B.xml to data/failed
2025-07-10 16:35:48,156 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:48,157 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml (50/74)
2025-07-10 16:35:48,157 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:48,159 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml
2025-07-10 16:35:48,159 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml
2025-07-10 16:35:48,163 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:48,164 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 9EAF508A-96FB-4058-9E8D-8B087391B4E7
2025-07-10 16:35:48,164 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:48,168 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:48,172 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 97s ago] ('9EAF508A-96FB-4058-9E8D-8B087391B4E7', 1, 0)
2025-07-10 16:35:48,174 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 9EAF508A-96FB-4058-9E8D-8B087391B4E7 already exists (ID: 93)
2025-07-10 16:35:48,175 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml
2025-07-10 16:35:48,175 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml
2025-07-10 16:35:48,176 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 00:00:00
2025-07-10 16:35:48,176 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $845.51
2025-07-10 16:35:48,176 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:48,176 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:48,179 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:48,180 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 97.01s ago] ('9EAF508A-96FB-4058-9E8D-8B087391B4E7', 1, 0)
2025-07-10 16:35:48,186 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:48,189 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 9EAF508A-96FB-4058-9E8D-8B087391B4E7
2025-07-10 16:35:48,189 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: 9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml (ID: 93)
2025-07-10 16:35:48,190 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml
2025-07-10 16:35:48,191 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $845.51 vs $845.51
2025-07-10 16:35:48,191 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:48,193 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:48,193 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:48,194 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:48,194 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 96.97s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml', '{"filename": "9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml", "processing_time": 0.03467535972595215, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 9EAF508A-96FB-4058-9E8D-8B087391B4E7 already exists"}', 0.03467535972595215, None, '9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml', None, '2025-07-10 23:35:48.194853')
2025-07-10 16:35:48,197 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:48,209 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml - moved to failed directory
2025-07-10 16:35:48,211 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml to data/failed
2025-07-10 16:35:48,211 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:48,212 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml (51/74)
2025-07-10 16:35:48,214 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:48,214 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml
2025-07-10 16:35:48,214 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml
2025-07-10 16:35:48,223 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:48,225 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: AB31CFD1-C61A-4637-A9C0-71B7C676AAA8
2025-07-10 16:35:48,226 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:48,227 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:48,229 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 97.06s ago] ('AB31CFD1-C61A-4637-A9C0-71B7C676AAA8', 1, 0)
2025-07-10 16:35:48,230 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID AB31CFD1-C61A-4637-A9C0-71B7C676AAA8 already exists (ID: 94)
2025-07-10 16:35:48,232 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml
2025-07-10 16:35:48,232 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml
2025-07-10 16:35:48,232 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-05 00:00:00
2025-07-10 16:35:48,232 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1116.80
2025-07-10 16:35:48,232 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:48,241 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:48,241 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:48,243 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 97.07s ago] ('AB31CFD1-C61A-4637-A9C0-71B7C676AAA8', 1, 0)
2025-07-10 16:35:48,247 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:48,248 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: AB31CFD1-C61A-4637-A9C0-71B7C676AAA8
2025-07-10 16:35:48,248 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml (ID: 94)
2025-07-10 16:35:48,251 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml
2025-07-10 16:35:48,251 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $1116.80 vs $1116.80
2025-07-10 16:35:48,255 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:48,255 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:48,259 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:48,260 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:48,260 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 97.04s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml', '{"filename": "AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml", "processing_time": 0.04415726661682129, "item_count": 0, "success": false, "error": "DUPLICATE: UUID AB31CFD1-C61A-4637-A9C0-71B7C676AAA8 already exists"}', 0.04415726661682129, None, 'AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml', None, '2025-07-10 23:35:48.260201')
2025-07-10 16:35:48,267 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:48,276 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml - moved to failed directory
2025-07-10 16:35:48,277 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml to data/failed
2025-07-10 16:35:48,279 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:48,280 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing ACF5E9D9-459A-485E-A8DF-9A2E14F03941.xml (52/74)
2025-07-10 16:35:48,280 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:48,280 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: ACF5E9D9-459A-485E-A8DF-9A2E14F03941.xml
2025-07-10 16:35:48,280 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: ACF5E9D9-459A-485E-A8DF-9A2E14F03941.xml
2025-07-10 16:35:48,287 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:48,289 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: ACF5E9D9-459A-485E-A8DF-9A2E14F03941
2025-07-10 16:35:48,290 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:48,292 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:48,295 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 97.12s ago] ('ACF5E9D9-459A-485E-A8DF-9A2E14F03941', 1, 0)
2025-07-10 16:35:48,296 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:48,297 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 1 items
2025-07-10 16:35:48,300 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:48,303 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:48,306 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 97.02s ago] ('sku_be1a0fa1_84121500_servicios_bancarios', 1, 0)
2025-07-10 16:35:48,306 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:48,306 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_be1a0fa1_84121500_servicios_bancarios
2025-07-10 16:35:49,378 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Gastos Generales -> Servicios Administrativos
2025-07-10 16:35:49,379 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Gastos Generales -> Servicios Administrativos (units_per_package: 1.0)
2025-07-10 16:35:49,379 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:35:49,380 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:49,380 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:49,382 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process ACF5E9D9-459A-485E-A8DF-9A2E14F03941.xml: Failed to save invoice to database
2025-07-10 16:35:49,384 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:49,385 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:49,386 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 98.16s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process ACF5E9D9-459A-485E-A8DF-9A2E14F03941.xml', '{"filename": "ACF5E9D9-459A-485E-A8DF-9A2E14F03941.xml", "processing_time": 1.1015148162841797, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 1.1015148162841797, None, 'ACF5E9D9-459A-485E-A8DF-9A2E14F03941.xml', None, '2025-07-10 23:35:49.384265')
2025-07-10 16:35:49,390 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:49,426 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved ACF5E9D9-459A-485E-A8DF-9A2E14F03941.xml to data/failed
2025-07-10 16:35:49,427 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:49,427 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing AFF831E7-A2A9-4366-A0B5-AA295076786B.xml (53/74)
2025-07-10 16:35:49,428 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:49,429 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: AFF831E7-A2A9-4366-A0B5-AA295076786B.xml
2025-07-10 16:35:49,430 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: AFF831E7-A2A9-4366-A0B5-AA295076786B.xml
2025-07-10 16:35:49,434 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:49,435 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: AFF831E7-A2A9-4366-A0B5-AA295076786B
2025-07-10 16:35:49,439 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:49,444 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:49,447 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 98.28s ago] ('AFF831E7-A2A9-4366-A0B5-AA295076786B', 1, 0)
2025-07-10 16:35:49,450 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID AFF831E7-A2A9-4366-A0B5-AA295076786B already exists (ID: 95)
2025-07-10 16:35:49,452 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: AFF831E7-A2A9-4366-A0B5-AA295076786B.xml
2025-07-10 16:35:49,453 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: AFF831E7-A2A9-4366-A0B5-AA295076786B.xml
2025-07-10 16:35:49,454 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-01 00:00:00
2025-07-10 16:35:49,458 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $117.60
2025-07-10 16:35:49,461 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:49,463 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:49,464 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:49,468 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 98.3s ago] ('AFF831E7-A2A9-4366-A0B5-AA295076786B', 1, 0)
2025-07-10 16:35:49,472 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:49,473 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: AFF831E7-A2A9-4366-A0B5-AA295076786B
2025-07-10 16:35:49,477 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: AFF831E7-A2A9-4366-A0B5-AA295076786B.xml (ID: 95)
2025-07-10 16:35:49,477 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  AFF831E7-A2A9-4366-A0B5-AA295076786B.xml
2025-07-10 16:35:49,478 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $117.60 vs $117.60
2025-07-10 16:35:49,479 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:49,479 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:49,481 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:49,483 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:49,485 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 98.26s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process AFF831E7-A2A9-4366-A0B5-AA295076786B.xml', '{"filename": "AFF831E7-A2A9-4366-A0B5-AA295076786B.xml", "processing_time": 0.05184149742126465, "item_count": 0, "success": false, "error": "DUPLICATE: UUID AFF831E7-A2A9-4366-A0B5-AA295076786B already exists"}', 0.05184149742126465, None, 'AFF831E7-A2A9-4366-A0B5-AA295076786B.xml', None, '2025-07-10 23:35:49.483386')
2025-07-10 16:35:49,491 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:49,499 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice AFF831E7-A2A9-4366-A0B5-AA295076786B.xml - moved to failed directory
2025-07-10 16:35:49,506 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved AFF831E7-A2A9-4366-A0B5-AA295076786B.xml to data/failed
2025-07-10 16:35:49,507 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:49,512 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml (54/74)
2025-07-10 16:35:49,512 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:49,513 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml
2025-07-10 16:35:49,514 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml
2025-07-10 16:35:49,518 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:49,518 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: B1A47CC5-3B55-457F-8D72-9E8AB8109EBC
2025-07-10 16:35:49,521 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:49,524 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:49,530 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 98.36s ago] ('B1A47CC5-3B55-457F-8D72-9E8AB8109EBC', 1, 0)
2025-07-10 16:35:49,531 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID B1A47CC5-3B55-457F-8D72-9E8AB8109EBC already exists (ID: 96)
2025-07-10 16:35:49,532 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml
2025-07-10 16:35:49,533 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml
2025-07-10 16:35:49,533 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 00:00:00
2025-07-10 16:35:49,534 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1127.07
2025-07-10 16:35:49,535 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:49,540 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:49,542 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:49,545 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 98.38s ago] ('B1A47CC5-3B55-457F-8D72-9E8AB8109EBC', 1, 0)
2025-07-10 16:35:49,552 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:49,552 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: B1A47CC5-3B55-457F-8D72-9E8AB8109EBC
2025-07-10 16:35:49,553 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml (ID: 96)
2025-07-10 16:35:49,553 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml
2025-07-10 16:35:49,553 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $1127.07 vs $1127.07
2025-07-10 16:35:49,554 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:49,556 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:49,557 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:49,562 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:49,564 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 98.34s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml', '{"filename": "B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml", "processing_time": 0.044295310974121094, "item_count": 0, "success": false, "error": "DUPLICATE: UUID B1A47CC5-3B55-457F-8D72-9E8AB8109EBC already exists"}', 0.044295310974121094, None, 'B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml', None, '2025-07-10 23:35:49.562560')
2025-07-10 16:35:49,570 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:49,579 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml - moved to failed directory
2025-07-10 16:35:49,581 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml to data/failed
2025-07-10 16:35:49,582 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:49,583 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml (55/74)
2025-07-10 16:35:49,584 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:49,585 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml
2025-07-10 16:35:49,588 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml
2025-07-10 16:35:49,598 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:49,599 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: B4C82F5B-735B-4D18-8F12-8A7634CC02A8
2025-07-10 16:35:49,601 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:49,603 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:49,606 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 98.43s ago] ('B4C82F5B-735B-4D18-8F12-8A7634CC02A8', 1, 0)
2025-07-10 16:35:49,608 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID B4C82F5B-735B-4D18-8F12-8A7634CC02A8 already exists (ID: 97)
2025-07-10 16:35:49,613 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml
2025-07-10 16:35:49,614 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml
2025-07-10 16:35:49,615 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-14 00:00:00
2025-07-10 16:35:49,615 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $301.10
2025-07-10 16:35:49,616 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:49,618 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:49,621 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:49,628 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 98.46s ago] ('B4C82F5B-735B-4D18-8F12-8A7634CC02A8', 1, 0)
2025-07-10 16:35:49,634 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:49,635 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: B4C82F5B-735B-4D18-8F12-8A7634CC02A8
2025-07-10 16:35:49,636 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml (ID: 97)
2025-07-10 16:35:49,636 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml
2025-07-10 16:35:49,638 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $301.10 vs $301.10
2025-07-10 16:35:49,639 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:49,639 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:49,642 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:49,644 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:49,646 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 98.42s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml', '{"filename": "B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml", "processing_time": 0.05518603324890137, "item_count": 0, "success": false, "error": "DUPLICATE: UUID B4C82F5B-735B-4D18-8F12-8A7634CC02A8 already exists"}', 0.05518603324890137, None, 'B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml', None, '2025-07-10 23:35:49.644694')
2025-07-10 16:35:49,654 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:49,669 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml - moved to failed directory
2025-07-10 16:35:49,679 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml to data/failed
2025-07-10 16:35:49,682 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:49,688 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml (56/74)
2025-07-10 16:35:49,688 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:49,688 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml
2025-07-10 16:35:49,688 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml
2025-07-10 16:35:49,698 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:49,700 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8
2025-07-10 16:35:49,702 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:49,705 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:49,711 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 98.54s ago] ('B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8', 1, 0)
2025-07-10 16:35:49,719 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8 already exists (ID: 98)
2025-07-10 16:35:49,721 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml
2025-07-10 16:35:49,724 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml
2025-07-10 16:35:49,732 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-10 16:35:49,732 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2624.20
2025-07-10 16:35:49,740 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:49,746 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:49,747 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:49,756 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 98.59s ago] ('B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8', 1, 0)
2025-07-10 16:35:49,761 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:49,762 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8
2025-07-10 16:35:49,762 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml (ID: 98)
2025-07-10 16:35:49,762 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml
2025-07-10 16:35:49,762 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $2624.20 vs $2624.20
2025-07-10 16:35:49,762 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:49,762 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:49,781 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:49,781 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:49,795 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 98.57s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml', '{"filename": "B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml", "processing_time": 0.08953237533569336, "item_count": 0, "success": false, "error": "DUPLICATE: UUID B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8 already exists"}', 0.08953237533569336, None, 'B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml', None, '2025-07-10 23:35:49.781553')
2025-07-10 16:35:49,806 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:49,813 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml - moved to failed directory
2025-07-10 16:35:49,828 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml to data/failed
2025-07-10 16:35:49,828 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:49,837 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing C0B10257-639A-4AF0-9805-17293FA38AE3.xml (57/74)
2025-07-10 16:35:49,837 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:49,841 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: C0B10257-639A-4AF0-9805-17293FA38AE3.xml
2025-07-10 16:35:49,842 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: C0B10257-639A-4AF0-9805-17293FA38AE3.xml
2025-07-10 16:35:49,847 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:49,851 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: C0B10257-639A-4AF0-9805-17293FA38AE3
2025-07-10 16:35:49,857 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:49,861 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:49,866 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 98.69s ago] ('C0B10257-639A-4AF0-9805-17293FA38AE3', 1, 0)
2025-07-10 16:35:49,867 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID C0B10257-639A-4AF0-9805-17293FA38AE3 already exists (ID: 99)
2025-07-10 16:35:49,870 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: C0B10257-639A-4AF0-9805-17293FA38AE3.xml
2025-07-10 16:35:49,870 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: C0B10257-639A-4AF0-9805-17293FA38AE3.xml
2025-07-10 16:35:49,871 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-10 16:35:49,873 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $603.56
2025-07-10 16:35:49,874 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:49,879 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:49,891 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:49,897 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 98.73s ago] ('C0B10257-639A-4AF0-9805-17293FA38AE3', 1, 0)
2025-07-10 16:35:49,903 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:49,903 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: C0B10257-639A-4AF0-9805-17293FA38AE3
2025-07-10 16:35:49,913 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: C0B10257-639A-4AF0-9805-17293FA38AE3.xml (ID: 99)
2025-07-10 16:35:49,913 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  C0B10257-639A-4AF0-9805-17293FA38AE3.xml
2025-07-10 16:35:49,913 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $603.56 vs $603.56
2025-07-10 16:35:49,913 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:49,913 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:49,920 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:49,920 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:49,930 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 98.71s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process C0B10257-639A-4AF0-9805-17293FA38AE3.xml', '{"filename": "C0B10257-639A-4AF0-9805-17293FA38AE3.xml", "processing_time": 0.07958555221557617, "item_count": 0, "success": false, "error": "DUPLICATE: UUID C0B10257-639A-4AF0-9805-17293FA38AE3 already exists"}', 0.07958555221557617, None, 'C0B10257-639A-4AF0-9805-17293FA38AE3.xml', None, '2025-07-10 23:35:49.920777')
2025-07-10 16:35:49,935 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:49,950 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice C0B10257-639A-4AF0-9805-17293FA38AE3.xml - moved to failed directory
2025-07-10 16:35:49,952 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved C0B10257-639A-4AF0-9805-17293FA38AE3.xml to data/failed
2025-07-10 16:35:49,953 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:49,953 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing C8E39A35-3357-4C8F-AF22-534AFE703FEA.xml (58/74)
2025-07-10 16:35:49,953 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:49,963 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: C8E39A35-3357-4C8F-AF22-534AFE703FEA.xml
2025-07-10 16:35:49,963 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: C8E39A35-3357-4C8F-AF22-534AFE703FEA.xml
2025-07-10 16:35:49,969 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:49,969 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: C8E39A35-3357-4C8F-AF22-534AFE703FEA
2025-07-10 16:35:49,969 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:49,979 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:49,984 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 98.81s ago] ('C8E39A35-3357-4C8F-AF22-534AFE703FEA', 1, 0)
2025-07-10 16:35:49,986 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:49,986 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 6 items
2025-07-10 16:35:49,994 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_f95bb8a3_50307024_pepino
2025-07-10 16:35:49,998 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:50,001 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:50,010 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 98.73s ago] ('sku_8dc8f53b_50304100_limon_300', 1, 0)
2025-07-10 16:35:50,010 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_8dc8f53b_50304100_limon_300 -> Vegetales
2025-07-10 16:35:50,010 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:35:50,021 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 90.93s ago] (3, '2025-07-10 23:35:50.010846', 140)
2025-07-10 16:35:50,026 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:50,042 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_9d78fad1_50404100_perejil_liso
2025-07-10 16:35:50,042 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_c0496069_50406500_tomate_salades
2025-07-10 16:35:50,051 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:50,051 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:50,054 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 98.77s ago] ('sku_5018e28f_50405300_cebolla_cambray', 1, 0)
2025-07-10 16:35:50,054 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:50,058 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_5018e28f_50405300_cebolla_cambray
2025-07-10 16:35:51,114 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Verduras
2025-07-10 16:35:51,115 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Verduras (units_per_package: 1.0)
2025-07-10 16:35:51,118 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,118 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:51,124 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 99.84s ago] ('sku_561f6ebe_50404114_menta', 1, 0)
2025-07-10 16:35:51,125 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_561f6ebe_50404114_menta -> Vegetales
2025-07-10 16:35:51,127 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-10 16:35:51,134 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 92.04s ago] (3, '2025-07-10 23:35:51.125552', 166)
2025-07-10 16:35:51,140 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,151 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:35:51,154 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:51,156 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:51,158 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process C8E39A35-3357-4C8F-AF22-534AFE703FEA.xml: Failed to save invoice to database
2025-07-10 16:35:51,160 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,163 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:51,165 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 99.94s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process C8E39A35-3357-4C8F-AF22-534AFE703FEA.xml', '{"filename": "C8E39A35-3357-4C8F-AF22-534AFE703FEA.xml", "processing_time": 1.1950597763061523, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 1.1950597763061523, None, 'C8E39A35-3357-4C8F-AF22-534AFE703FEA.xml', None, '2025-07-10 23:35:51.163838')
2025-07-10 16:35:51,169 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,209 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved C8E39A35-3357-4C8F-AF22-534AFE703FEA.xml to data/failed
2025-07-10 16:35:51,222 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:51,226 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml (59/74)
2025-07-10 16:35:51,238 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:51,240 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml
2025-07-10 16:35:51,241 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml
2025-07-10 16:35:51,251 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:51,255 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02
2025-07-10 16:35:51,260 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,265 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:51,274 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.1s ago] ('D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02', 1, 0)
2025-07-10 16:35:51,278 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02 already exists (ID: 100)
2025-07-10 16:35:51,279 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml
2025-07-10 16:35:51,279 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml
2025-07-10 16:35:51,288 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 00:00:00
2025-07-10 16:35:51,288 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2437.59
2025-07-10 16:35:51,290 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,298 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,299 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:51,306 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.1s ago] ('D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02', 1, 0)
2025-07-10 16:35:51,318 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:51,320 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02
2025-07-10 16:35:51,321 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml (ID: 100)
2025-07-10 16:35:51,324 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml
2025-07-10 16:35:51,326 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $2437.59 vs $2437.59
2025-07-10 16:35:51,328 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:51,329 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,337 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,346 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:51,360 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.1s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml', '{"filename": "D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml", "processing_time": 0.09690213203430176, "item_count": 0, "success": false, "error": "DUPLICATE: UUID D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02 already exists"}', 0.09690213203430176, None, 'D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml', None, '2025-07-10 23:35:51.346775')
2025-07-10 16:35:51,364 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,372 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml - moved to failed directory
2025-07-10 16:35:51,374 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml to data/failed
2025-07-10 16:35:51,375 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:51,378 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml (60/74)
2025-07-10 16:35:51,383 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:51,383 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml
2025-07-10 16:35:51,385 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml
2025-07-10 16:35:51,388 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:51,390 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: D0EB9CD6-3DAC-4077-8716-B034369ABB23
2025-07-10 16:35:51,392 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,395 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:51,408 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.2s ago] ('D0EB9CD6-3DAC-4077-8716-B034369ABB23', 1, 0)
2025-07-10 16:35:51,413 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID D0EB9CD6-3DAC-4077-8716-B034369ABB23 already exists (ID: 101)
2025-07-10 16:35:51,415 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml
2025-07-10 16:35:51,417 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml
2025-07-10 16:35:51,423 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-07 00:00:00
2025-07-10 16:35:51,424 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1497.50
2025-07-10 16:35:51,425 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,428 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,435 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:51,439 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.3s ago] ('D0EB9CD6-3DAC-4077-8716-B034369ABB23', 1, 0)
2025-07-10 16:35:51,442 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:51,443 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: D0EB9CD6-3DAC-4077-8716-B034369ABB23
2025-07-10 16:35:51,444 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml (ID: 101)
2025-07-10 16:35:51,446 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml
2025-07-10 16:35:51,447 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $1497.50 vs $1497.50
2025-07-10 16:35:51,447 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:51,448 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,449 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,451 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:51,454 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.2s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml', '{"filename": "D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml", "processing_time": 0.0658867359161377, "item_count": 0, "success": false, "error": "DUPLICATE: UUID D0EB9CD6-3DAC-4077-8716-B034369ABB23 already exists"}', 0.0658867359161377, None, 'D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml', None, '2025-07-10 23:35:51.451515')
2025-07-10 16:35:51,460 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,470 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml - moved to failed directory
2025-07-10 16:35:51,472 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml to data/failed
2025-07-10 16:35:51,473 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:51,473 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml (61/74)
2025-07-10 16:35:51,475 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:51,475 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml
2025-07-10 16:35:51,476 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml
2025-07-10 16:35:51,479 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:51,480 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: D23B3AF6-E187-44FA-84E0-EF33FE58DE7C
2025-07-10 16:35:51,481 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,482 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:51,490 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.3s ago] ('D23B3AF6-E187-44FA-84E0-EF33FE58DE7C', 1, 0)
2025-07-10 16:35:51,493 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID D23B3AF6-E187-44FA-84E0-EF33FE58DE7C already exists (ID: 102)
2025-07-10 16:35:51,494 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml
2025-07-10 16:35:51,495 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml
2025-07-10 16:35:51,496 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-15 00:00:00
2025-07-10 16:35:51,496 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $0.00
2025-07-10 16:35:51,496 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,503 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,506 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:51,508 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.3s ago] ('D23B3AF6-E187-44FA-84E0-EF33FE58DE7C', 1, 0)
2025-07-10 16:35:51,510 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:51,511 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: D23B3AF6-E187-44FA-84E0-EF33FE58DE7C
2025-07-10 16:35:51,511 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml (ID: 102)
2025-07-10 16:35:51,512 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml
2025-07-10 16:35:51,512 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $0.00 vs $0.00
2025-07-10 16:35:51,514 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:51,515 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,516 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,517 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:51,521 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.3s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml', '{"filename": "D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml", "processing_time": 0.04067635536193848, "item_count": 0, "success": false, "error": "DUPLICATE: UUID D23B3AF6-E187-44FA-84E0-EF33FE58DE7C already exists"}', 0.04067635536193848, None, 'D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml', None, '2025-07-10 23:35:51.517763')
2025-07-10 16:35:51,532 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,537 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml - moved to failed directory
2025-07-10 16:35:51,539 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml to data/failed
2025-07-10 16:35:51,541 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:51,541 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing D43FD29D-9115-4198-B521-9B9D2C51F209.xml (62/74)
2025-07-10 16:35:51,542 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:51,547 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: D43FD29D-9115-4198-B521-9B9D2C51F209.xml
2025-07-10 16:35:51,548 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: D43FD29D-9115-4198-B521-9B9D2C51F209.xml
2025-07-10 16:35:51,551 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:51,552 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: D43FD29D-9115-4198-B521-9B9D2C51F209
2025-07-10 16:35:51,554 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,557 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:51,560 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.4s ago] ('D43FD29D-9115-4198-B521-9B9D2C51F209', 1, 0)
2025-07-10 16:35:51,561 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID D43FD29D-9115-4198-B521-9B9D2C51F209 already exists (ID: 103)
2025-07-10 16:35:51,563 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: D43FD29D-9115-4198-B521-9B9D2C51F209.xml
2025-07-10 16:35:51,565 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: D43FD29D-9115-4198-B521-9B9D2C51F209.xml
2025-07-10 16:35:51,566 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 00:00:00
2025-07-10 16:35:51,566 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $319.00
2025-07-10 16:35:51,566 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,566 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,577 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:51,583 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.4s ago] ('D43FD29D-9115-4198-B521-9B9D2C51F209', 1, 0)
2025-07-10 16:35:51,584 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:51,584 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: D43FD29D-9115-4198-B521-9B9D2C51F209
2025-07-10 16:35:51,587 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: D43FD29D-9115-4198-B521-9B9D2C51F209.xml (ID: 103)
2025-07-10 16:35:51,590 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  D43FD29D-9115-4198-B521-9B9D2C51F209.xml
2025-07-10 16:35:51,591 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $319.00 vs $319.00
2025-07-10 16:35:51,591 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:51,592 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,594 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,594 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:51,594 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.4s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process D43FD29D-9115-4198-B521-9B9D2C51F209.xml', '{"filename": "D43FD29D-9115-4198-B521-9B9D2C51F209.xml", "processing_time": 0.04682588577270508, "item_count": 0, "success": false, "error": "DUPLICATE: UUID D43FD29D-9115-4198-B521-9B9D2C51F209 already exists"}', 0.04682588577270508, None, 'D43FD29D-9115-4198-B521-9B9D2C51F209.xml', None, '2025-07-10 23:35:51.594399')
2025-07-10 16:35:51,603 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,611 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice D43FD29D-9115-4198-B521-9B9D2C51F209.xml - moved to failed directory
2025-07-10 16:35:51,620 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved D43FD29D-9115-4198-B521-9B9D2C51F209.xml to data/failed
2025-07-10 16:35:51,620 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:51,623 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml (63/74)
2025-07-10 16:35:51,623 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:51,625 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml
2025-07-10 16:35:51,626 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml
2025-07-10 16:35:51,627 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:51,627 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: D4F2EBCD-1E69-4990-AE06-DA683ED84393
2025-07-10 16:35:51,627 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,627 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:51,634 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.5s ago] ('D4F2EBCD-1E69-4990-AE06-DA683ED84393', 1, 0)
2025-07-10 16:35:51,635 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID D4F2EBCD-1E69-4990-AE06-DA683ED84393 already exists (ID: 104)
2025-07-10 16:35:51,636 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml
2025-07-10 16:35:51,636 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml
2025-07-10 16:35:51,637 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-10 16:35:51,637 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2171.65
2025-07-10 16:35:51,638 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,638 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,639 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:51,641 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.5s ago] ('D4F2EBCD-1E69-4990-AE06-DA683ED84393', 1, 0)
2025-07-10 16:35:51,643 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:51,644 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: D4F2EBCD-1E69-4990-AE06-DA683ED84393
2025-07-10 16:35:51,644 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml (ID: 104)
2025-07-10 16:35:51,645 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml
2025-07-10 16:35:51,645 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $2171.65 vs $2171.65
2025-07-10 16:35:51,646 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:51,647 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,648 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,649 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:51,650 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.4s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml', '{"filename": "D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml", "processing_time": 0.02378106117248535, "item_count": 0, "success": false, "error": "DUPLICATE: UUID D4F2EBCD-1E69-4990-AE06-DA683ED84393 already exists"}', 0.02378106117248535, None, 'D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml', None, '2025-07-10 23:35:51.649806')
2025-07-10 16:35:51,652 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,658 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml - moved to failed directory
2025-07-10 16:35:51,663 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml to data/failed
2025-07-10 16:35:51,666 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:51,667 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml (64/74)
2025-07-10 16:35:51,668 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:51,669 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml
2025-07-10 16:35:51,670 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml
2025-07-10 16:35:51,672 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:51,672 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3
2025-07-10 16:35:51,673 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,675 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:51,677 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.5s ago] ('DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3', 1, 0)
2025-07-10 16:35:51,678 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3 already exists (ID: 105)
2025-07-10 16:35:51,679 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml
2025-07-10 16:35:51,680 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml
2025-07-10 16:35:51,681 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-03 00:00:00
2025-07-10 16:35:51,682 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1713.12
2025-07-10 16:35:51,683 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,686 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,686 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:51,693 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.5s ago] ('DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3', 1, 0)
2025-07-10 16:35:51,694 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:51,695 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3
2025-07-10 16:35:51,696 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml (ID: 105)
2025-07-10 16:35:51,696 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml
2025-07-10 16:35:51,699 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $1713.12 vs $1713.12
2025-07-10 16:35:51,699 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:51,705 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,705 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,708 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:51,711 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.5s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml', '{"filename": "DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml", "processing_time": 0.03585338592529297, "item_count": 0, "success": false, "error": "DUPLICATE: UUID DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3 already exists"}', 0.03585338592529297, None, 'DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml', None, '2025-07-10 23:35:51.708678')
2025-07-10 16:35:51,711 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,727 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml - moved to failed directory
2025-07-10 16:35:51,736 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml to data/failed
2025-07-10 16:35:51,736 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:51,736 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml (65/74)
2025-07-10 16:35:51,736 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:51,736 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml
2025-07-10 16:35:51,736 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml
2025-07-10 16:35:51,745 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:51,745 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: E1FF3B5A-D418-4080-91EC-E3DCB3811162
2025-07-10 16:35:51,745 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,745 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:51,754 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.6s ago] ('E1FF3B5A-D418-4080-91EC-E3DCB3811162', 1, 0)
2025-07-10 16:35:51,760 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID E1FF3B5A-D418-4080-91EC-E3DCB3811162 already exists (ID: 106)
2025-07-10 16:35:51,760 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml
2025-07-10 16:35:51,760 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml
2025-07-10 16:35:51,760 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-11 00:00:00
2025-07-10 16:35:51,765 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $696.00
2025-07-10 16:35:51,765 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,765 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,771 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:51,771 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.6s ago] ('E1FF3B5A-D418-4080-91EC-E3DCB3811162', 1, 0)
2025-07-10 16:35:51,776 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:51,777 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: E1FF3B5A-D418-4080-91EC-E3DCB3811162
2025-07-10 16:35:51,777 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml (ID: 106)
2025-07-10 16:35:51,777 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml
2025-07-10 16:35:51,777 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $696.00 vs $696.00
2025-07-10 16:35:51,777 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:51,777 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,777 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,777 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:51,777 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.6s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml', '{"filename": "E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml", "processing_time": 0.041116952896118164, "item_count": 0, "success": false, "error": "DUPLICATE: UUID E1FF3B5A-D418-4080-91EC-E3DCB3811162 already exists"}', 0.041116952896118164, None, 'E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml', None, '2025-07-10 23:35:51.777723')
2025-07-10 16:35:51,799 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,804 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml - moved to failed directory
2025-07-10 16:35:51,805 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml to data/failed
2025-07-10 16:35:51,805 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:51,807 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing E3BAA208-BB42-49C5-9E72-D7702308F471.xml (66/74)
2025-07-10 16:35:51,807 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:51,808 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: E3BAA208-BB42-49C5-9E72-D7702308F471.xml
2025-07-10 16:35:51,808 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: E3BAA208-BB42-49C5-9E72-D7702308F471.xml
2025-07-10 16:35:51,811 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:51,812 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: E3BAA208-BB42-49C5-9E72-D7702308F471
2025-07-10 16:35:51,814 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,815 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:51,817 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.6s ago] ('E3BAA208-BB42-49C5-9E72-D7702308F471', 1, 0)
2025-07-10 16:35:51,818 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,819 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 2 items
2025-07-10 16:35:51,820 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:51,821 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:51,822 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 100.5s ago] ('sku_858782d0_50202201_indio_1x1_brr_20l', 1, 0)
2025-07-10 16:35:51,823 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:51,823 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_858782d0_50202201_indio_1x1_brr_20l
2025-07-10 16:35:53,324 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Cerveza
2025-07-10 16:35:53,327 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Cerveza (units_per_package: 1.0)
2025-07-10 16:35:53,332 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:53,334 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:53,339 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 102.1s ago] ('sku_4044bfc3_24122000_env_generico_ccm_b16', 1, 0)
2025-07-10 16:35:53,341 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:53,344 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_4044bfc3_24122000_env_generico_ccm_b16
2025-07-10 16:35:54,628 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Otros-a
2025-07-10 16:35:54,628 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Otros-a (units_per_package: 1.0)
2025-07-10 16:35:54,630 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:35:54,630 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:54,630 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:54,632 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process E3BAA208-BB42-49C5-9E72-D7702308F471.xml: Failed to save invoice to database
2025-07-10 16:35:54,633 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:54,634 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:54,636 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 103.4s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process E3BAA208-BB42-49C5-9E72-D7702308F471.xml', '{"filename": "E3BAA208-BB42-49C5-9E72-D7702308F471.xml", "processing_time": 2.8238019943237305, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 2.8238019943237305, None, 'E3BAA208-BB42-49C5-9E72-D7702308F471.xml', None, '2025-07-10 23:35:54.634904')
2025-07-10 16:35:54,638 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:54,651 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved E3BAA208-BB42-49C5-9E72-D7702308F471.xml to data/failed
2025-07-10 16:35:54,651 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:54,651 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml (67/74)
2025-07-10 16:35:54,656 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:54,656 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml
2025-07-10 16:35:54,657 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml
2025-07-10 16:35:54,662 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:54,664 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4
2025-07-10 16:35:54,667 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:54,672 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:54,678 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 103.5s ago] ('E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4', 1, 0)
2025-07-10 16:35:54,682 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4 already exists (ID: 107)
2025-07-10 16:35:54,685 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml
2025-07-10 16:35:54,689 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml
2025-07-10 16:35:54,689 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-08 00:00:00
2025-07-10 16:35:54,690 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1257.28
2025-07-10 16:35:54,692 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:54,694 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:54,700 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:54,707 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 103.5s ago] ('E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4', 1, 0)
2025-07-10 16:35:54,708 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:54,709 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4
2025-07-10 16:35:54,710 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml (ID: 107)
2025-07-10 16:35:54,710 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml
2025-07-10 16:35:54,711 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $1257.28 vs $1257.28
2025-07-10 16:35:54,711 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:54,712 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:54,714 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:54,716 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:54,717 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 103.5s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml', '{"filename": "E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml", "processing_time": 0.058850765228271484, "item_count": 0, "success": false, "error": "DUPLICATE: UUID E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4 already exists"}', 0.058850765228271484, None, 'E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml', None, '2025-07-10 23:35:54.716007')
2025-07-10 16:35:54,719 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:54,728 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml - moved to failed directory
2025-07-10 16:35:54,730 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml to data/failed
2025-07-10 16:35:54,732 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:54,732 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml (68/74)
2025-07-10 16:35:54,733 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:54,733 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml
2025-07-10 16:35:54,734 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml
2025-07-10 16:35:54,737 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:54,737 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: E6BB6F45-D94E-4A27-97B8-BA5474658B2D
2025-07-10 16:35:54,738 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:54,740 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:54,745 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 103.6s ago] ('E6BB6F45-D94E-4A27-97B8-BA5474658B2D', 1, 0)
2025-07-10 16:35:54,749 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID E6BB6F45-D94E-4A27-97B8-BA5474658B2D already exists (ID: 108)
2025-07-10 16:35:54,749 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml
2025-07-10 16:35:54,751 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml
2025-07-10 16:35:54,751 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-02 00:00:00
2025-07-10 16:35:54,754 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1695.20
2025-07-10 16:35:54,754 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:54,755 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:54,756 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:54,759 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 103.6s ago] ('E6BB6F45-D94E-4A27-97B8-BA5474658B2D', 1, 0)
2025-07-10 16:35:54,763 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:54,765 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: E6BB6F45-D94E-4A27-97B8-BA5474658B2D
2025-07-10 16:35:54,766 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml (ID: 108)
2025-07-10 16:35:54,766 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml
2025-07-10 16:35:54,767 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $1695.20 vs $1695.20
2025-07-10 16:35:54,767 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:54,770 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:54,770 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:54,770 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:54,770 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 103.6s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml', '{"filename": "E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml", "processing_time": 0.037909746170043945, "item_count": 0, "success": false, "error": "DUPLICATE: UUID E6BB6F45-D94E-4A27-97B8-BA5474658B2D already exists"}', 0.037909746170043945, None, 'E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml', None, '2025-07-10 23:35:54.770964')
2025-07-10 16:35:54,776 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:54,784 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml - moved to failed directory
2025-07-10 16:35:54,788 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml to data/failed
2025-07-10 16:35:54,788 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:54,789 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml (69/74)
2025-07-10 16:35:54,789 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:54,789 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml
2025-07-10 16:35:54,790 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml
2025-07-10 16:35:54,799 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:54,799 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: EB705A95-CDFF-4226-A6BA-0A99E68D321B
2025-07-10 16:35:54,800 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:54,802 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:54,804 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 103.6s ago] ('EB705A95-CDFF-4226-A6BA-0A99E68D321B', 1, 0)
2025-07-10 16:35:54,804 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID EB705A95-CDFF-4226-A6BA-0A99E68D321B already exists (ID: 109)
2025-07-10 16:35:54,806 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml
2025-07-10 16:35:54,806 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml
2025-07-10 16:35:54,807 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-09 00:00:00
2025-07-10 16:35:54,808 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2926.04
2025-07-10 16:35:54,809 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:54,815 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:54,816 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:54,820 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 103.6s ago] ('EB705A95-CDFF-4226-A6BA-0A99E68D321B', 1, 0)
2025-07-10 16:35:54,820 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:54,820 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: EB705A95-CDFF-4226-A6BA-0A99E68D321B
2025-07-10 16:35:54,820 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml (ID: 109)
2025-07-10 16:35:54,820 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml
2025-07-10 16:35:54,820 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $2926.04 vs $2926.04
2025-07-10 16:35:54,820 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:54,820 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:54,825 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:54,831 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:54,832 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 103.6s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml', '{"filename": "EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml", "processing_time": 0.0353703498840332, "item_count": 0, "success": false, "error": "DUPLICATE: UUID EB705A95-CDFF-4226-A6BA-0A99E68D321B already exists"}', 0.0353703498840332, None, 'EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml', None, '2025-07-10 23:35:54.831211')
2025-07-10 16:35:54,835 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:54,841 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml - moved to failed directory
2025-07-10 16:35:54,847 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml to data/failed
2025-07-10 16:35:54,848 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:54,850 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing EFCD0679-9CE8-400D-8869-9B9D2C51DE62.xml (70/74)
2025-07-10 16:35:54,850 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:54,851 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: EFCD0679-9CE8-400D-8869-9B9D2C51DE62.xml
2025-07-10 16:35:54,852 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: EFCD0679-9CE8-400D-8869-9B9D2C51DE62.xml
2025-07-10 16:35:54,855 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:54,856 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: EFCD0679-9CE8-400D-8869-9B9D2C51DE62
2025-07-10 16:35:54,857 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:54,859 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:54,865 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 103.7s ago] ('EFCD0679-9CE8-400D-8869-9B9D2C51DE62', 1, 0)
2025-07-10 16:35:54,865 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:54,868 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 1 items
2025-07-10 16:35:54,869 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:54,871 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:54,872 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 103.6s ago] ('sku_e3b92121_81141601_servicios_integrales_de_logistica_v0', 1, 0)
2025-07-10 16:35:54,872 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:54,874 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_e3b92121_81141601_servicios_integrales_de_logistica_v0
2025-07-10 16:35:56,306 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Gastos Generales -> Fletes y acarreos
2025-07-10 16:35:56,306 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Gastos Generales -> Fletes y acarreos (units_per_package: 1.0)
2025-07-10 16:35:56,311 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-10 16:35:56,312 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:56,313 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Database save failed: 'datetime.datetime' object has no attribute 'strip'
2025-07-10 16:35:56,313 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [ERROR] Failed to process EFCD0679-9CE8-400D-8869-9B9D2C51DE62.xml: Failed to save invoice to database
2025-07-10 16:35:56,315 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:56,316 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:56,317 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 105.1s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process EFCD0679-9CE8-400D-8869-9B9D2C51DE62.xml', '{"filename": "EFCD0679-9CE8-400D-8869-9B9D2C51DE62.xml", "processing_time": 1.4626827239990234, "item_count": 0, "success": false, "error": "Failed to save invoice to database"}', 1.4626827239990234, None, 'EFCD0679-9CE8-400D-8869-9B9D2C51DE62.xml', None, '2025-07-10 23:35:56.316541')
2025-07-10 16:35:56,325 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:56,336 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved EFCD0679-9CE8-400D-8869-9B9D2C51DE62.xml to data/failed
2025-07-10 16:35:56,336 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:56,338 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml (71/74)
2025-07-10 16:35:56,339 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:56,341 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml
2025-07-10 16:35:56,343 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml
2025-07-10 16:35:56,351 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:56,353 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9
2025-07-10 16:35:56,355 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:56,356 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:56,360 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 105.2s ago] ('F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9', 1, 0)
2025-07-10 16:35:56,364 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9 already exists (ID: 110)
2025-07-10 16:35:56,366 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml
2025-07-10 16:35:56,367 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml
2025-07-10 16:35:56,367 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-20 00:00:00
2025-07-10 16:35:56,368 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1986.48
2025-07-10 16:35:56,370 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:56,370 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:56,370 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:56,377 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 105.2s ago] ('F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9', 1, 0)
2025-07-10 16:35:56,383 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:56,383 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9
2025-07-10 16:35:56,385 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml (ID: 110)
2025-07-10 16:35:56,385 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml
2025-07-10 16:35:56,388 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $1986.48 vs $1986.48
2025-07-10 16:35:56,389 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:56,390 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:56,396 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:56,399 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:56,401 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 105.2s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml', '{"filename": "F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml", "processing_time": 0.05328249931335449, "item_count": 0, "success": false, "error": "DUPLICATE: UUID F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9 already exists"}', 0.05328249931335449, None, 'F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml', None, '2025-07-10 23:35:56.399496')
2025-07-10 16:35:56,430 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:56,450 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml - moved to failed directory
2025-07-10 16:35:56,467 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved F7A6D003-B2E5-482A-B20D-CE1CCCBBBAE9.xml to data/failed
2025-07-10 16:35:56,481 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:56,488 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing c82b2675-beff-4470-ba00-d74bacfe06ee.xml (72/74)
2025-07-10 16:35:56,490 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:56,502 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: c82b2675-beff-4470-ba00-d74bacfe06ee.xml
2025-07-10 16:35:56,507 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: c82b2675-beff-4470-ba00-d74bacfe06ee.xml
2025-07-10 16:35:56,536 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:56,537 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: c82b2675-beff-4470-ba00-d74bacfe06ee
2025-07-10 16:35:56,538 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:56,543 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:56,551 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 105.4s ago] ('c82b2675-beff-4470-ba00-d74bacfe06ee', 1, 0)
2025-07-10 16:35:56,552 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID c82b2675-beff-4470-ba00-d74bacfe06ee already exists (ID: 111)
2025-07-10 16:35:56,556 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: c82b2675-beff-4470-ba00-d74bacfe06ee.xml
2025-07-10 16:35:56,560 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: c82b2675-beff-4470-ba00-d74bacfe06ee.xml
2025-07-10 16:35:56,565 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 00:00:00
2025-07-10 16:35:56,566 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $10815.55
2025-07-10 16:35:56,567 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:56,568 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:56,569 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:56,580 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 105.4s ago] ('c82b2675-beff-4470-ba00-d74bacfe06ee', 1, 0)
2025-07-10 16:35:56,582 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:56,583 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: c82b2675-beff-4470-ba00-d74bacfe06ee
2025-07-10 16:35:56,585 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: c82b2675-beff-4470-ba00-d74bacfe06ee.xml (ID: 111)
2025-07-10 16:35:56,587 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  c82b2675-beff-4470-ba00-d74bacfe06ee.xml
2025-07-10 16:35:56,588 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $10815.55 vs $10815.55
2025-07-10 16:35:56,591 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:56,592 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:56,594 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:56,595 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:56,597 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 105.4s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process c82b2675-beff-4470-ba00-d74bacfe06ee.xml', '{"filename": "c82b2675-beff-4470-ba00-d74bacfe06ee.xml", "processing_time": 0.09057807922363281, "item_count": 0, "success": false, "error": "DUPLICATE: UUID c82b2675-beff-4470-ba00-d74bacfe06ee already exists"}', 0.09057807922363281, None, 'c82b2675-beff-4470-ba00-d74bacfe06ee.xml', None, '2025-07-10 23:35:56.595533')
2025-07-10 16:35:56,619 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:56,626 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice c82b2675-beff-4470-ba00-d74bacfe06ee.xml - moved to failed directory
2025-07-10 16:35:56,629 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved c82b2675-beff-4470-ba00-d74bacfe06ee.xml to data/failed
2025-07-10 16:35:56,630 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:56,631 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml (73/74)
2025-07-10 16:35:56,634 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:56,635 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml
2025-07-10 16:35:56,638 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml
2025-07-10 16:35:56,644 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:56,644 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: d2799f2a-5efd-46a3-90cf-e3f41a6c1a43
2025-07-10 16:35:56,647 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:56,647 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:56,657 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 105.5s ago] ('d2799f2a-5efd-46a3-90cf-e3f41a6c1a43', 1, 0)
2025-07-10 16:35:56,657 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID d2799f2a-5efd-46a3-90cf-e3f41a6c1a43 already exists (ID: 112)
2025-07-10 16:35:56,657 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml
2025-07-10 16:35:56,657 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml
2025-07-10 16:35:56,657 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-18 00:00:00
2025-07-10 16:35:56,657 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2900.00
2025-07-10 16:35:56,672 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:56,674 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:56,676 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:56,680 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 105.5s ago] ('d2799f2a-5efd-46a3-90cf-e3f41a6c1a43', 1, 0)
2025-07-10 16:35:56,681 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:56,685 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: d2799f2a-5efd-46a3-90cf-e3f41a6c1a43
2025-07-10 16:35:56,690 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml (ID: 112)
2025-07-10 16:35:56,694 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml
2025-07-10 16:35:56,694 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $2900.00 vs $2900.00
2025-07-10 16:35:56,697 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:56,697 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:56,699 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:56,699 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:56,707 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 105.5s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml', '{"filename": "d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml", "processing_time": 0.06370139122009277, "item_count": 0, "success": false, "error": "DUPLICATE: UUID d2799f2a-5efd-46a3-90cf-e3f41a6c1a43 already exists"}', 0.06370139122009277, None, 'd2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml', None, '2025-07-10 23:35:56.699586')
2025-07-10 16:35:56,713 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:56,733 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml - moved to failed directory
2025-07-10 16:35:56,735 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml to data/failed
2025-07-10 16:35:56,735 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:56,739 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing f525505f-f7f0-4d56-b685-99166d38d287.xml (74/74)
2025-07-10 16:35:56,740 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:56,743 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: f525505f-f7f0-4d56-b685-99166d38d287.xml
2025-07-10 16:35:56,748 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: f525505f-f7f0-4d56-b685-99166d38d287.xml
2025-07-10 16:35:56,752 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-10 16:35:56,753 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: f525505f-f7f0-4d56-b685-99166d38d287
2025-07-10 16:35:56,756 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:56,757 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:56,764 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 105.6s ago] ('f525505f-f7f0-4d56-b685-99166d38d287', 1, 0)
2025-07-10 16:35:56,769 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID f525505f-f7f0-4d56-b685-99166d38d287 already exists (ID: 113)
2025-07-10 16:35:56,771 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: f525505f-f7f0-4d56-b685-99166d38d287.xml
2025-07-10 16:35:56,771 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: f525505f-f7f0-4d56-b685-99166d38d287.xml
2025-07-10 16:35:56,773 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-10 16:35:56,783 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2785.59
2025-07-10 16:35:56,784 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:56,789 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:56,799 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-10 16:35:56,803 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 105.6s ago] ('f525505f-f7f0-4d56-b685-99166d38d287', 1, 0)
2025-07-10 16:35:56,806 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-10 16:35:56,806 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: f525505f-f7f0-4d56-b685-99166d38d287
2025-07-10 16:35:56,810 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Existing: f525505f-f7f0-4d56-b685-99166d38d287.xml (ID: 113)
2025-07-10 16:35:56,810 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current:  f525505f-f7f0-4d56-b685-99166d38d287.xml
2025-07-10 16:35:56,810 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Amount:   $2785.59 vs $2785.59
2025-07-10 16:35:56,810 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action:   Skipping duplicate file
2025-07-10 16:35:56,817 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:56,818 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-10 16:35:56,821 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10 16:35:56,823 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 105.6s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process f525505f-f7f0-4d56-b685-99166d38d287.xml', '{"filename": "f525505f-f7f0-4d56-b685-99166d38d287.xml", "processing_time": 0.07444906234741211, "item_count": 0, "success": false, "error": "DUPLICATE: UUID f525505f-f7f0-4d56-b685-99166d38d287 already exists"}', 0.07444906234741211, None, 'f525505f-f7f0-4d56-b685-99166d38d287.xml', None, '2025-07-10 23:35:56.821957')
2025-07-10 16:35:56,826 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-10 16:35:56,835 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice f525505f-f7f0-4d56-b685-99166d38d287.xml - moved to failed directory
2025-07-10 16:35:56,842 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved f525505f-f7f0-4d56-b685-99166d38d287.xml to data/failed
2025-07-10 16:35:56,842 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-10 16:35:56,843 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - FINAL PROCESSING SUMMARY
2025-07-10 16:35:56,845 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-10 16:35:56,846 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Total files: 74
2025-07-10 16:35:56,846 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Successfully processed: 0
2025-07-10 16:35:56,847 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Failed: 74
2025-07-10 16:35:56,848 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Success rate: 0.0%
2025-07-10 16:35:56,849 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Total processing time: 105.79s
2025-07-10 16:35:56,849 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Average time per file: 1.43s
2025-07-10 16:35:56,851 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Inbox processing completed
2025-07-10 17:02:10,098 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Logging configured for environment: dev
2025-07-10 17:02:10,100 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Log level: DEBUG
2025-07-10 17:02:10,100 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Log directory: logs
2025-07-10 17:02:10,100 - __main__ - INFO - File: main.py - File: main.py - File: main.py - CFDI Processing System v4 started
2025-07-10 17:02:10,100 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Environment: dev
2025-07-10 17:02:10,100 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Log level: DEBUG
2025-07-10 17:02:10,100 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Starting inbox processing...
2025-07-10 17:02:10,106 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - CFDI Parser initialized
2025-07-10 17:02:10,138 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database connection established: sqlite:///data/database/cfdi_system_v4.db
2025-07-10 17:02:10,138 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database Manager initialized
2025-07-10 17:02:10,138 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API initialized with model: gemini-2.0-flash
2025-07-10 17:02:10,141 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Loaded P62 categories: 11 main categories
2025-07-10 17:02:10,141 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - GeminiClassifier initialized successfully
2025-07-10 17:02:10,141 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database connection established: sqlite:///data/database/cfdi_system_v4.db
2025-07-10 17:02:10,154 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database Manager initialized
2025-07-10 17:02:10,156 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - BatchProcessor initialized successfully
2025-07-10 17:02:10,157 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Starting inbox processing: data/inbox
2025-07-10 17:02:10,159 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Found 0 XML files in data/inbox
2025-07-10 17:02:10,159 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [INFO] No XML files found in inbox
2025-07-10 17:02:10,162 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Inbox processing completed
2025-07-11 16:26:34,914 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Logging configured for environment: dev
2025-07-11 16:26:34,917 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Log level: DEBUG
2025-07-11 16:26:34,918 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Log directory: logs
2025-07-11 16:26:34,919 - __main__ - INFO - File: main.py - File: main.py - File: main.py - CFDI Processing System v4 started
2025-07-11 16:26:34,919 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Environment: dev
2025-07-11 16:26:34,920 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Log level: DEBUG
2025-07-11 16:26:34,921 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Initializing complete database system...
2025-07-11 16:26:35,118 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database connection established: sqlite:///data/database/cfdi_system_v4.db
2025-07-11 16:26:35,119 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database Manager initialized
2025-07-11 16:26:35,139 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:26:35,140 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.table_info("invoices")
2025-07-11 16:26:35,142 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-11 16:26:35,156 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.table_info("invoice_items")
2025-07-11 16:26:35,162 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-11 16:26:35,164 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.table_info("approved_skus")
2025-07-11 16:26:35,174 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-11 16:26:35,178 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.table_info("processing_logs")
2025-07-11 16:26:35,178 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-11 16:26:35,184 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.table_info("invoice_metadata")
2025-07-11 16:26:35,187 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-11 16:26:35,191 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.table_info("sales_orders")
2025-07-11 16:26:35,193 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-11 16:26:35,194 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.table_info("sales_items")
2025-07-11 16:26:35,195 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-11 16:26:35,197 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.table_info("sales_quality_log")
2025-07-11 16:26:35,197 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-11 16:26:35,200 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:26:35,201 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database tables created successfully
2025-07-11 16:26:35,202 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Table 'invoices': initialized
2025-07-11 16:26:35,203 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Table 'invoice_items': initialized
2025-07-11 16:26:35,204 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Table 'approved_skus': initialized
2025-07-11 16:26:35,207 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Table 'processing_logs': initialized
2025-07-11 16:26:35,211 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Table 'invoice_metadata': initialized
2025-07-11 16:26:35,217 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Table 'sales_orders': initialized
2025-07-11 16:26:35,220 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Table 'sales_items': initialized
2025-07-11 16:26:35,223 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Table 'sales_quality_log': initialized
2025-07-11 16:26:35,380 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Complete database setup completed successfully
2025-07-11 16:37:10,129 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Logging configured for environment: dev
2025-07-11 16:37:10,131 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Log level: DEBUG
2025-07-11 16:37:10,132 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Log directory: logs
2025-07-11 16:37:10,136 - __main__ - INFO - File: main.py - File: main.py - File: main.py - CFDI Processing System v4 started
2025-07-11 16:37:10,137 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Environment: dev
2025-07-11 16:37:10,140 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Log level: DEBUG
2025-07-11 16:37:10,141 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Creating purchase_details table...
2025-07-11 16:37:10,190 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Purchase_details table created successfully
2025-07-11 16:38:31,513 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Logging configured for environment: dev
2025-07-11 16:38:31,521 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Log level: DEBUG
2025-07-11 16:38:31,522 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Log directory: logs
2025-07-11 16:38:31,522 - __main__ - INFO - File: main.py - File: main.py - File: main.py - CFDI Processing System v4 started
2025-07-11 16:38:31,523 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Environment: dev
2025-07-11 16:38:31,523 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Log level: DEBUG
2025-07-11 16:38:31,523 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Starting inbox processing...
2025-07-11 16:38:31,526 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - CFDI Parser initialized
2025-07-11 16:38:31,557 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database connection established: sqlite:///data/database/cfdi_system_v4.db
2025-07-11 16:38:31,557 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database Manager initialized
2025-07-11 16:38:31,558 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API initialized with model: gemini-2.0-flash
2025-07-11 16:38:31,560 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Loaded P62 categories: 11 main categories
2025-07-11 16:38:31,561 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - GeminiClassifier initialized successfully
2025-07-11 16:38:31,563 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database connection established: sqlite:///data/database/cfdi_system_v4.db
2025-07-11 16:38:31,568 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database Manager initialized
2025-07-11 16:38:31,569 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - BatchProcessor initialized successfully
2025-07-11 16:38:31,571 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Starting inbox processing: data/inbox
2025-07-11 16:38:31,575 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Found 64 XML files in data/inbox
2025-07-11 16:38:31,575 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [FILES] Processing 64 XML files
2025-07-11 16:38:31,577 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:38:31,578 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 04061ab5-c50d-46f3-aba1-148bdc5c2333.xml (1/64)
2025-07-11 16:38:31,579 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:38:31,579 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 04061ab5-c50d-46f3-aba1-148bdc5c2333.xml
2025-07-11 16:38:31,580 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 04061ab5-c50d-46f3-aba1-148bdc5c2333.xml
2025-07-11 16:38:31,596 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:38:31,597 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 04061ab5-c50d-46f3-aba1-148bdc5c2333
2025-07-11 16:38:31,652 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:31,671 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:31,674 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00270s] ('04061ab5-c50d-46f3-aba1-148bdc5c2333', 1, 0)
2025-07-11 16:38:31,677 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:31,679 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 4 items
2025-07-11 16:38:31,687 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:31,692 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:31,695 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00278s] ('sku_8330c5d1_50112023_salami_deshidratado_molinari_kg', 1, 0)
2025-07-11 16:38:31,705 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_8330c5d1_50112023_salami_deshidratado_molinari_kg -> Proteinas
2025-07-11 16:38:31,708 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:38:31,710 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00129s] (4, '2025-07-11 23:38:31.704157', 84)
2025-07-11 16:38:31,713 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:31,727 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:31,729 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:31,736 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 0.04318s ago] ('sku_9758ee3a_50131800_queso_ricotta_belgioioso_cube_226kg_180', 1, 0)
2025-07-11 16:38:31,739 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_9758ee3a_50131800_queso_ricotta_belgioioso_cube_226kg_180 -> Lacteos
2025-07-11 16:38:31,740 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:38:31,741 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 0.03233s ago] (4, '2025-07-11 23:38:31.739171', 72)
2025-07-11 16:38:31,742 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:31,755 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:31,756 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:31,758 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 0.06522s ago] ('sku_39ed0331_50171550_especia_pimienta_negra_molida_454gr_80217', 1, 0)
2025-07-11 16:38:31,758 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_39ed0331_50171550_especia_pimienta_negra_molida_454gr_80217 -> Abarrotes
2025-07-11 16:38:31,759 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:38:31,760 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 0.05186s ago] (3, '2025-07-11 23:38:31.758110', 25)
2025-07-11 16:38:31,763 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:31,776 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:31,779 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:31,784 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 0.09159s ago] ('sku_25436dd7_50151513_aceite_oliva_evirgen_genco_mezcla378lt', 1, 0)
2025-07-11 16:38:31,790 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:31,791 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_25436dd7_50151513_aceite_oliva_evirgen_genco_mezcla378lt
2025-07-11 16:38:34,359 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Aceite
2025-07-11 16:38:34,362 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Aceite (units_per_package: 1.0)
2025-07-11 16:38:34,364 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-11 16:38:34,375 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:34,385 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoices (uuid, series, folio, invoice_type, version, issue_date, certification_date, created_at, updated_at, issuer_rfc, issuer_name, issuer_fiscal_regime, issuer_use_cfdi, issuer_residence, issuer_tax_id, receiver_rfc, receiver_name, receiver_fiscal_address, receiver_residence, receiver_tax_id, receiver_use_cfdi, payment_method, payment_method_desc, payment_terms, payment_conditions, currency, exchange_rate, subtotal, total_discount, total_transferred_taxes, total_withheld_taxes, total_amount, digital_stamp, certificate_number, certificate, sat_seal, sat_certificate, fiscal_folio, stamp_datetime, expedition_place, export_operation, confirmation, source_filename, xml_file_size, confidence_score, processing_time, processing_status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:34,388 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00364s] ('04061ab5-c50d-46f3-aba1-148bdc5c2333', 'AA', '96972', 'I', '4.0', '2025-07-03 14:22:24.000000', None, '2025-07-11 23:38:34.384812', '2025-07-11 23:38:34.384812', 'AAE******3E6', 'ABASTECEDORA DE ALIMENTOS Y EMBUTIDOS VALLE HERMANOS', '601', None, None, None, 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', '23300', None, None, None, '28', None, 'PUE', None, 'MXN', 1.0, 3241.75, 0.0, 0.0, 0.0, 3241.75, 'WM2c5wnz37d7akX61nmf4o+Uw0oowaEzanFwo8KhaXMEfJa2ci98NrbaQv5Otzp3kNATpS/VE0NnIoAnAFtaad/ql5+g3QV2HBrbQvbDiQE+OpFoxGPruESm/L1/5S7QqBr9758z3XxXo+8lj0M7f ... (46 characters truncated) ... 7m2VN2Lwx0PQHh6+eYwjb1IfxmwLMV4AwiByEjpwIezXmHIcOMSpN/z0LIGlTFOGklDgRb6b8cTqEZwep3jNOBDjYRv5Ugu6sqwm6a/mUiXEinskHwRJrFTquA74Rpanam9CN/8bebmcuPFLBEA==', '00001000000514916510', None, 'mi3SMzsZ7EV5PWKe5fJEyJqmwGEQPko5xXWftxZDqznpNz1H37fWw38yvZ+uuC047jz5sXEWLfjYGsiPB+glimjXiZEiW9V9tqfczvUXasHl6oc0mrSL7er7bGt6NbMepEvGTptc39ovmK2wM/xWL ... (46 characters truncated) ... vPRF/yUas0LdiosSefWInCBiPDhvfHfMxTR8uoGU1d2uSsopgCcxJEGZoaF9HM6sIBi/Z+PCuIiRfOAiPT4ZjRRF5MqMC/QPOiXor4qz1vgszjkFW2r+w9Yge8FiGZlG6iAtvfCFRjp6j30h2+A==', None, '04061ab5-c50d-46f3-aba1-148bdc5c2333', '2025-07-03 15:22:30.000000', None, None, None, '04061ab5-c50d-46f3-aba1-148bdc5c2333.xml', 7239, None, None, 'processed')
2025-07-11 16:38:34,393 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Saved invoice 04061ab5-c50d-46f3-aba1-148bdc5c2333 with 4 items (ID: 114)
2025-07-11 16:38:34,400 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE invoices SET confidence_score=?, processing_time=? WHERE invoices.id = ?
2025-07-11 16:38:34,404 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00367s] (0.9875, 2.56447696685791, 114)
2025-07-11 16:38:34,408 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:34,411 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00067s (insertmanyvalues) 1/4 (ordered; batch not supported)] (114, 1, '50112023', None, 'SALAMI DESHIDRATADO MOLINARI KG', 1.8, 'KGM', None, 1.0, None, 533.0, 959.4, 0.0, 0.0, 959.4, 'Proteinas', 'Embutidos', 'Salami', 'Kilogramos', 1.8, 1.0, 1.0, 'approved_sku', 'approved', 'sku_8330c5d1_50112023_salami_deshidratado_molinari_kg', '2025-07-11 23:38:34.408238', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:38:34.408238', '2025-07-11 23:38:34.408238')
2025-07-11 16:38:34,419 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:34,423 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 2/4 (ordered; batch not supported)] (114, 2, '50131800', None, 'QUESO RICOTTA BELGIOIOSO CUBE 2.26KG 180', 3.0, 'H87', None, 2.26, None, 367.25, 1101.75, 0.0, 0.0, 1101.75, 'Lacteos', 'Queso', 'Queso Ricotta', 'Kilogramos', 6.78, 2.26, 1.0, 'approved_sku', 'approved', 'sku_9758ee3a_50131800_queso_ricotta_belgioioso_cube_226kg_180', '2025-07-11 23:38:34.408238', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:38:34.408238', '2025-07-11 23:38:34.408238')
2025-07-11 16:38:34,424 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:34,425 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 3/4 (ordered; batch not supported)] (114, 3, '50171550', None, 'ESPECIA PIMIENTA NEGRA MOLIDA 454GR 80217', 1.0, 'H87', None, 0.454, None, 271.0, 271.0, 0.0, 0.0, 271.0, 'Abarrotes', 'Especias', 'Pimienta', 'Kilogramos', 0.454, 0.454, 1.0, 'approved_sku', 'approved', 'sku_39ed0331_50171550_especia_pimienta_negra_molida_454gr_80217', '2025-07-11 23:38:34.408238', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:38:34.408238', '2025-07-11 23:38:34.408238')
2025-07-11 16:38:34,427 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:34,430 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 4/4 (ordered; batch not supported)] (114, 4, '50151513', None, 'ACEITE OLIVA E.VIRGEN GENCO MEZCLA3.78LT', 3.0, 'H87', None, 1.0, 'Botella', 303.2, 909.6, 0.0, 0.0, 909.6, 'Abarrotes', 'Aceite', 'Aceite de oliva', 'Litros', 3.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_25436dd7_50151513_aceite_oliva_evirgen_genco_mezcla378lt', '2025-07-11 23:38:34.408238', '{"processing_time": 2.56447696685791, "api_attempt": 1, "reasoning": "The item is described as \'ACEITE OLIVA E.VIRGEN\', which translates to \'OLIVE ... (126 characters truncated) ... and the unit is H87, which is likely a bottle. Since the description refers to a single bottle of olive oil, units_per_package is 1.", "error": null}', '2025-07-11 23:38:34.408238', '2025-07-11 23:38:34.408238')
2025-07-11 16:38:34,439 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:34,457 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [METADATA] Creating business metadata
2025-07-11 16:38:34,460 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Created metadata for invoice ID 114
2025-07-11 16:38:34,461 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:34,474 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_metadata (invoice_id, uuid, folio, issue_date, issuer_rfc, issuer_name, receiver_rfc, receiver_name, original_currency, original_total, exchange_rate, mxn_total, payment_method, payment_terms, is_installments, is_immediate, total_items, total_categories, avg_confidence, processing_status, has_errors, error_count, is_export, has_digital_stamp, is_certified, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:34,475 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00267s] (114, '04061ab5-c50d-46f3-aba1-148bdc5c2333', '96972', '2025-07-03', 'AAE******3E6', 'ABASTECEDORA DE ALIMENTOS Y EMBUTIDOS VALLE HERMANOS', 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', 'MXN', 3241.75, 1.0, 3241.75, '28', 'PUE', 0, 1, 4, 3, 0.9875, 'completed', 0, 0, 0, 1, 1, '2025-07-11 23:38:34.473737', '2025-07-11 23:38:34.473737')
2025-07-11 16:38:34,485 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:34,493 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Saving to purchase_details table
2025-07-11 16:38:34,500 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:34,507 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.id = ?
2025-07-11 16:38:34,511 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00487s] (114,)
2025-07-11 16:38:34,527 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoice_metadata.id AS invoice_metadata_id, invoice_metadata.invoice_id AS invoice_metadata_invoice_id, invoice_metadata.uuid AS invoice_metadata_uuid, invoice_metadata.folio AS invoice_metadata_folio, invoice_metadata.issue_date AS invoice_metadata_issue_date, invoice_metadata.issuer_rfc AS invoice_metadata_issuer_rfc, invoice_metadata.issuer_name AS invoice_metadata_issuer_name, invoice_metadata.receiver_rfc AS invoice_metadata_receiver_rfc, invoice_metadata.receiver_name AS invoice_metadata_receiver_name, invoice_metadata.original_currency AS invoice_metadata_original_currency, invoice_metadata.original_total AS invoice_metadata_original_total, invoice_metadata.exchange_rate AS invoice_metadata_exchange_rate, invoice_metadata.mxn_total AS invoice_metadata_mxn_total, invoice_metadata.payment_method AS invoice_metadata_payment_method, invoice_metadata.payment_terms AS invoice_metadata_payment_terms, invoice_metadata.is_installments AS invoice_metadata_is_installments, invoice_metadata.is_immediate AS invoice_metadata_is_immediate, invoice_metadata.total_items AS invoice_metadata_total_items, invoice_metadata.total_categories AS invoice_metadata_total_categories, invoice_metadata.avg_confidence AS invoice_metadata_avg_confidence, invoice_metadata.processing_status AS invoice_metadata_processing_status, invoice_metadata.has_errors AS invoice_metadata_has_errors, invoice_metadata.error_count AS invoice_metadata_error_count, invoice_metadata.is_export AS invoice_metadata_is_export, invoice_metadata.has_digital_stamp AS invoice_metadata_has_digital_stamp, invoice_metadata.is_certified AS invoice_metadata_is_certified, invoice_metadata.created_at AS invoice_metadata_created_at, invoice_metadata.updated_at AS invoice_metadata_updated_at 
FROM invoice_metadata 
WHERE invoice_metadata.invoice_id = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:34,534 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00701s] (114, 1, 0)
2025-07-11 16:38:34,543 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - ROLLBACK
2025-07-11 16:38:34,545 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 37 values for 38 columns
2025-07-11 16:38:34,551 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Failed to save to purchase_details table: 37 values for 38 columns
2025-07-11 16:38:34,555 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:34,560 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:34,561 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00264s] (114, 'INFO', 'batch_processor', 'process_file', 'Successfully processed 04061ab5-c50d-46f3-aba1-148bdc5c2333.xml', '{"filename": "04061ab5-c50d-46f3-aba1-148bdc5c2333.xml", "processing_time": 2.9759960174560547, "item_count": 4, "success": true, "gemini_calls": 1, "approved_skus": 3, "avg_confidence": 0.9875}', 2.9759960174560547, None, '04061ab5-c50d-46f3-aba1-148bdc5c2333.xml', None, '2025-07-11 23:38:34.558736')
2025-07-11 16:38:34,573 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:34,585 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SUCCESS] Processed 04061ab5-c50d-46f3-aba1-148bdc5c2333.xml in 2.98s
2025-07-11 16:38:34,590 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 04061ab5-c50d-46f3-aba1-148bdc5c2333.xml to data/processed
2025-07-11 16:38:34,592 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:38:34,593 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 0781DA3A-D65A-4B8C-827C-104B8D3F52F8.xml (2/64)
2025-07-11 16:38:34,594 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:38:34,597 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 0781DA3A-D65A-4B8C-827C-104B8D3F52F8.xml
2025-07-11 16:38:34,601 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 0781DA3A-D65A-4B8C-827C-104B8D3F52F8.xml
2025-07-11 16:38:34,608 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:38:34,609 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 0781DA3A-D65A-4B8C-827C-104B8D3F52F8
2025-07-11 16:38:34,611 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:34,618 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:34,624 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 2.953s ago] ('0781DA3A-D65A-4B8C-827C-104B8D3F52F8', 1, 0)
2025-07-11 16:38:34,627 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:34,637 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 18 items
2025-07-11 16:38:34,641 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:34,645 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:34,653 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 2.961s ago] ('sku_bd6f7e4b_50112010_pierna_de_pollo', 1, 0)
2025-07-11 16:38:34,658 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_bd6f7e4b_50112010_pierna_de_pollo -> Proteinas
2025-07-11 16:38:34,661 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:38:34,667 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 2.958s ago] (5, '2025-07-11 23:38:34.658029', 90)
2025-07-11 16:38:34,676 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:34,691 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:34,695 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:34,703 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 3.01s ago] ('sku_9694c503_50403500_berenjena', 1, 0)
2025-07-11 16:38:34,706 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_9694c503_50403500_berenjena -> Vegetales
2025-07-11 16:38:34,709 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:38:34,711 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 3.003s ago] (5, '2025-07-11 23:38:34.706727', 148)
2025-07-11 16:38:34,720 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:34,734 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:34,741 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:34,747 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 3.054s ago] ('sku_44f0bbec_50403900_calabaza_negra', 1, 0)
2025-07-11 16:38:34,753 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_44f0bbec_50403900_calabaza_negra -> Vegetales
2025-07-11 16:38:34,757 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:38:34,759 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 3.05s ago] (5, '2025-07-11 23:38:34.752068', 145)
2025-07-11 16:38:34,768 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:34,786 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:34,789 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:34,792 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 3.1s ago] ('sku_09573e71_50417006_arugula', 1, 0)
2025-07-11 16:38:34,801 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:34,805 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_09573e71_50417006_arugula
2025-07-11 16:38:36,233 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Verduras
2025-07-11 16:38:36,235 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Verduras (units_per_package: 1.0)
2025-07-11 16:38:36,239 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:36,241 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:36,246 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 4.554s ago] ('sku_6ec9c23c_50405625_chile_jalapeño', 1, 0)
2025-07-11 16:38:36,252 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_6ec9c23c_50405625_chile_jalapeño -> Vegetales
2025-07-11 16:38:36,254 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:38:36,255 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 4.547s ago] (5, '2025-07-11 23:38:36.252396', 155)
2025-07-11 16:38:36,261 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:36,284 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:36,291 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:36,300 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 4.608s ago] ('sku_75903dde_50404803_champiñon', 1, 0)
2025-07-11 16:38:36,302 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:36,304 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_75903dde_50404803_champiñon
2025-07-11 16:38:38,207 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Hongo
2025-07-11 16:38:38,208 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Hongo (units_per_package: 1.0)
2025-07-11 16:38:38,215 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:38,218 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:38,219 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 6.528s ago] ('sku_14c77eea_50414500_kale', 1, 0)
2025-07-11 16:38:38,221 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_14c77eea_50414500_kale -> Vegetales
2025-07-11 16:38:38,221 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:38:38,223 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 6.515s ago] (5, '2025-07-11 23:38:38.221847', 142)
2025-07-11 16:38:38,230 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:38,240 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:38,243 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:38,248 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 6.556s ago] ('sku_11cd495e_50401700_aguacate', 1, 0)
2025-07-11 16:38:38,252 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_11cd495e_50401700_aguacate -> Vegetales
2025-07-11 16:38:38,253 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:38:38,255 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 6.546s ago] (5, '2025-07-11 23:38:38.252026', 126)
2025-07-11 16:38:38,259 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:38,271 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:38,274 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:38,278 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 6.586s ago] ('sku_c1ceb28c_50221002_harina_selecta', 1, 0)
2025-07-11 16:38:38,282 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:38,286 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_c1ceb28c_50221002_harina_selecta
2025-07-11 16:38:39,881 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Harinas
2025-07-11 16:38:39,882 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Harinas (units_per_package: 1.0)
2025-07-11 16:38:39,883 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:39,885 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:39,888 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 8.196s ago] ('sku_8f28f7c7_50402300_repollo_verde', 1, 0)
2025-07-11 16:38:39,890 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_8f28f7c7_50402300_repollo_verde -> Vegetales
2025-07-11 16:38:39,894 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:38:39,898 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 8.19s ago] (5, '2025-07-11 23:38:39.890435', 153)
2025-07-11 16:38:39,905 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:39,916 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:39,917 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:39,921 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 8.228s ago] ('sku_e6d42f0b_50403800_shallot', 1, 0)
2025-07-11 16:38:39,922 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_e6d42f0b_50403800_shallot -> Vegetales
2025-07-11 16:38:39,928 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:38:39,929 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 8.221s ago] (5, '2025-07-11 23:38:39.922164', 143)
2025-07-11 16:38:39,934 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:39,947 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:39,950 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:39,952 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 8.26s ago] ('sku_f6ce5c99_50404600_lechuga_mixta', 1, 0)
2025-07-11 16:38:39,954 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:39,955 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_f6ce5c99_50404600_lechuga_mixta
2025-07-11 16:38:41,447 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Verduras
2025-07-11 16:38:41,448 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Verduras (units_per_package: 1.0)
2025-07-11 16:38:41,449 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:41,450 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:41,451 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 9.76s ago] ('sku_6b45f921_50404600_lechuga_romana_baby', 1, 0)
2025-07-11 16:38:41,454 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:41,455 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_6b45f921_50404600_lechuga_romana_baby
2025-07-11 16:38:43,149 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Verduras
2025-07-11 16:38:43,149 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Verduras (units_per_package: 1.0)
2025-07-11 16:38:43,150 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:43,152 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:43,156 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 11.46s ago] ('sku_4770c1ef_50402800_acelga', 1, 0)
2025-07-11 16:38:43,160 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:43,163 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_4770c1ef_50402800_acelga
2025-07-11 16:38:44,692 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Verduras
2025-07-11 16:38:44,693 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Verduras (units_per_package: 1.0)
2025-07-11 16:38:44,694 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:44,695 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:44,697 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 13.01s ago] ('sku_4d8ff92b_50404600_lechuga_bola', 1, 0)
2025-07-11 16:38:44,698 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:44,699 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_4d8ff92b_50404600_lechuga_bola
2025-07-11 16:38:46,186 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Verduras
2025-07-11 16:38:46,191 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Verduras (units_per_package: 1.0)
2025-07-11 16:38:46,194 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:46,196 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:46,198 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.51s ago] ('sku_3823c19d_50405300_cebolla_blanca', 1, 0)
2025-07-11 16:38:46,199 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_3823c19d_50405300_cebolla_blanca -> Vegetales
2025-07-11 16:38:46,201 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:38:46,206 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.5s ago] (5, '2025-07-11 23:38:46.199344', 150)
2025-07-11 16:38:46,214 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:46,227 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:46,228 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:46,230 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.54s ago] ('sku_07ae298e_50304100_limon_amarillo', 1, 0)
2025-07-11 16:38:46,231 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_07ae298e_50304100_limon_amarillo -> Vegetales
2025-07-11 16:38:46,232 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:38:46,234 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.52s ago] (5, '2025-07-11 23:38:46.231617', 133)
2025-07-11 16:38:46,240 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:46,248 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:46,249 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:46,256 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.56s ago] ('sku_c0496069_50406500_tomate_salades', 1, 0)
2025-07-11 16:38:46,260 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_c0496069_50406500_tomate_salades -> Vegetales
2025-07-11 16:38:46,261 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:38:46,262 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.55s ago] (5, '2025-07-11 23:38:46.260319', 136)
2025-07-11 16:38:46,264 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:46,275 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-11 16:38:46,279 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:46,281 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoices (uuid, series, folio, invoice_type, version, issue_date, certification_date, created_at, updated_at, issuer_rfc, issuer_name, issuer_fiscal_regime, issuer_use_cfdi, issuer_residence, issuer_tax_id, receiver_rfc, receiver_name, receiver_fiscal_address, receiver_residence, receiver_tax_id, receiver_use_cfdi, payment_method, payment_method_desc, payment_terms, payment_conditions, currency, exchange_rate, subtotal, total_discount, total_transferred_taxes, total_withheld_taxes, total_amount, digital_stamp, certificate_number, certificate, sat_seal, sat_certificate, fiscal_folio, stamp_datetime, expedition_place, export_operation, confirmation, source_filename, xml_file_size, confidence_score, processing_time, processing_status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:46,282 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 11.9s ago] ('0781DA3A-D65A-4B8C-827C-104B8D3F52F8', None, '51821', 'I', '4.0', '2025-07-08 10:11:05.000000', None, '2025-07-11 23:38:46.281094', '2025-07-11 23:38:46.281094', 'PIVV******RR4', 'VANESSA IVON PIÑUELAS VERDUGO', '612', None, None, None, 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', '23300', None, None, None, '03', None, 'PUE', None, 'MXN', 1.0, 1566.92, 0.0, 0.0, 0.0, 1566.92, 'FxBwMSOmNzoQmoi/rM3kfd7Amur3cbjd81HGeaITf8tBg0/tnMVZk6qRvwxTNshNcqqnaRbW2PRTjvazcXBxPXuMy69fkOuOR7nUB1tkFGkuu21Bb+wVBvnN7DbBB9vSgz70lnW8VawqMRmKvErkt ... (46 characters truncated) ... VnVLKF7GsAef3tu2wYcdvgcljUFWFi8ZV/VMvMolJXc+hZpMzp3X4LpPypT4/i7k8HFjiV9DVyYIOSH4ttDiaDnHKff4Q3sUqSc0yQcZgfomVHYa2SaDV4lVcAZs66BdnEyllxpnONQdDb00LKw==', '00001000000705018977', None, 'F+Wa/MVftgITH1GkiXt2TEEAqdSB1BL/RNHiE2mCrsfAanD0UafmhBF1v69xuG+MXqJRgbsC3mq0sQD0VT1eLFW15DS/0Ixe0ZWL6gbf6Tq/Fgxro3NZf73sc6mG9GYgGwpoQdHJTIKwudc7VexLh ... (46 characters truncated) ... 2wi2oCyADtYoT9eiLlvRqi8kMKigz+ePxERgK8odYgsl1csl33cEr7Ev0csnEYJJKCrEepGjXEG2d0D8QNwwaecdUfG4ZUWEXIydNVd1gI/vRS/b9kGQgliApKGlBBF63fz8B794DW5kKDELk2Q==', None, '0781DA3A-D65A-4B8C-827C-104B8D3F52F8', '2025-07-08 11:11:07.000000', None, None, None, '0781DA3A-D65A-4B8C-827C-104B8D3F52F8.xml', 11403, None, None, 'processed')
2025-07-11 16:38:46,295 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Saved invoice 0781DA3A-D65A-4B8C-827C-104B8D3F52F8 with 18 items (ID: 115)
2025-07-11 16:38:46,297 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE invoices SET confidence_score=?, processing_time=? WHERE invoices.id = ?
2025-07-11 16:38:46,298 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 11.9s ago] (0.9805555555555555, 11.110983848571777, 115)
2025-07-11 16:38:46,306 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:46,308 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 11.9s ago (insertmanyvalues) 1/18 (ordered; batch not supported)] (115, 1, '50112010', None, 'PIERNA DE POLLO', 2.44, 'KGM', None, 1.0, None, 48.0, 117.12, 0.0, 0.0, 117.12, 'Proteinas', 'Pollo', 'Pierna', 'Kilogramos', 2.44, 1.0, 1.0, 'approved_sku', 'approved', 'sku_bd6f7e4b_50112010_pierna_de_pollo', '2025-07-11 23:38:46.301985', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:38:46.301985', '2025-07-11 23:38:46.301985')
2025-07-11 16:38:46,310 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:46,311 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 2/18 (ordered; batch not supported)] (115, 2, '50403500', None, 'BERENJENA', 3.0, 'KGM', None, 1.0, None, 65.0, 195.0, 0.0, 0.0, 195.0, 'Vegetales', 'Verduras', 'Berenjena', 'Kilogramos', 3.0, 1.0, 1.0, 'approved_sku', 'approved', 'sku_9694c503_50403500_berenjena', '2025-07-11 23:38:46.301985', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:38:46.301985', '2025-07-11 23:38:46.301985')
2025-07-11 16:38:46,313 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:46,313 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 3/18 (ordered; batch not supported)] (115, 3, '50403900', None, 'CALABAZA NEGRA', 3.0, 'KGM', None, 1.0, None, 28.0, 84.0, 0.0, 0.0, 84.0, 'Vegetales', 'Verduras', 'Calabaza', 'Kilogramos', 3.0, 1.0, 1.0, 'approved_sku', 'approved', 'sku_44f0bbec_50403900_calabaza_negra', '2025-07-11 23:38:46.301985', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:38:46.301985', '2025-07-11 23:38:46.301985')
2025-07-11 16:38:46,315 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:46,317 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 4/18 (ordered; batch not supported)] (115, 4, '50417006', None, 'ARUGULA', 2.0, 'H87', None, 1.0, None, 55.0, 110.0, 0.0, 0.0, 110.0, 'Vegetales', 'Verduras', 'Arugula', 'Kilogramos', 2.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_09573e71_50417006_arugula', '2025-07-11 23:38:46.301985', '{"processing_time": 1.4267644882202148, "api_attempt": 1, "reasoning": "Arugula is a vegetable, specifically a leafy green. The item is sold by weight (kilograms), and there is no indication of a package containing multiple units, so units_per_package is 1.", "error": null}', '2025-07-11 23:38:46.301985', '2025-07-11 23:38:46.301985')
2025-07-11 16:38:46,322 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:46,324 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 5/18 (ordered; batch not supported)] (115, 5, '50405625', None, 'CHILE JALAPEÑO', 1.0, 'KGM', None, 1.0, None, 30.0, 30.0, 0.0, 0.0, 30.0, 'Vegetales', 'Verduras', 'Chile Jalapeño', 'Kilogramos', 1.0, 1.0, 1.0, 'approved_sku', 'approved', 'sku_6ec9c23c_50405625_chile_jalapeño', '2025-07-11 23:38:46.301985', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:38:46.301985', '2025-07-11 23:38:46.301985')
2025-07-11 16:38:46,327 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:46,328 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 6/18 (ordered; batch not supported)] (115, 6, '50404803', None, 'CHAMPIÑON', 3.0, 'H87', None, 1.0, None, 35.0, 105.0, 0.0, 0.0, 105.0, 'Vegetales', 'Hongo', 'Champiñon', 'Kilogramos', 3.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_75903dde_50404803_champiñon', '2025-07-11 23:38:46.301985', '{"processing_time": 1.9023773670196533, "api_attempt": 1, "reasoning": "The item is \'CHAMPI\\u00d1ON\', which is a type of mushroom. The taxonomy ha ... (60 characters truncated) ... . Since it\'s a vegetable, the standardized unit is Kilogramos. There is no package information, so units_per_package defaults to 1.", "error": null}', '2025-07-11 23:38:46.301985', '2025-07-11 23:38:46.301985')
2025-07-11 16:38:46,331 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:46,332 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 7/18 (ordered; batch not supported)] (115, 7, '50414500', None, 'KALE', 0.44, 'KGM', None, 1.0, None, 400.0, 176.0, 0.0, 0.0, 176.0, 'Vegetales', 'Verduras', 'Col', 'Kilogramos', 0.44, 1.0, 1.0, 'approved_sku', 'approved', 'sku_14c77eea_50414500_kale', '2025-07-11 23:38:46.301985', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:38:46.301985', '2025-07-11 23:38:46.301985')
2025-07-11 16:38:46,334 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:46,337 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 8/18 (ordered; batch not supported)] (115, 8, '50401700', None, 'AGUACATE', 1.19, 'KGM', None, 1.0, None, 110.0, 130.9, 0.0, 0.0, 130.9, 'Vegetales', 'Frutas', 'Aguacate', 'Kilogramos', 1.19, 1.0, 1.0, 'approved_sku', 'approved', 'sku_11cd495e_50401700_aguacate', '2025-07-11 23:38:46.301985', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:38:46.301985', '2025-07-11 23:38:46.301985')
2025-07-11 16:38:46,342 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:46,345 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 9/18 (ordered; batch not supported)] (115, 9, '50221002', None, 'HARINA SELECTA', 3.0, 'H87', None, 1.0, None, 25.0, 75.0, 0.0, 0.0, 75.0, 'Abarrotes', 'Harinas', 'Harina de trigo', 'Kilogramos', 3.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_c1ceb28c_50221002_harina_selecta', '2025-07-11 23:38:46.301985', '{"processing_time": 1.5936708450317383, "api_attempt": 1, "reasoning": "\\"HARINA SELECTA\\" is classified as \\"Harina de trigo\\" under the \\"Hari ... (54 characters truncated) ... d unit is Kilogramos, and since the description doesn\'t specify a package size, it\'s assumed to be sold individually per kilogram.", "error": null}', '2025-07-11 23:38:46.301985', '2025-07-11 23:38:46.301985')
2025-07-11 16:38:46,346 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:46,347 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 10/18 (ordered; batch not supported)] (115, 10, '50402300', None, 'REPOLLO VERDE', 1.3, 'KGM', None, 1.0, None, 25.0, 32.5, 0.0, 0.0, 32.5, 'Vegetales', 'Verduras', 'Repollo', 'Kilogramos', 1.3, 1.0, 1.0, 'approved_sku', 'approved', 'sku_8f28f7c7_50402300_repollo_verde', '2025-07-11 23:38:46.301985', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:38:46.301985', '2025-07-11 23:38:46.301985')
2025-07-11 16:38:46,349 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:46,350 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 11/18 (ordered; batch not supported)] (115, 11, '50403800', None, 'SHALLOT', 0.5, 'KGM', None, 1.0, None, 240.0, 120.0, 0.0, 0.0, 120.0, 'Vegetales', 'Verduras', 'Shallot', 'Kilogramos', 0.5, 1.0, 1.0, 'approved_sku', 'approved', 'sku_e6d42f0b_50403800_shallot', '2025-07-11 23:38:46.301985', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:38:46.301985', '2025-07-11 23:38:46.301985')
2025-07-11 16:38:46,356 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:46,359 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 12/18 (ordered; batch not supported)] (115, 12, '50404600', None, 'LECHUGA MIXTA', 1.0, 'H87', None, 1.0, None, 130.0, 130.0, 0.0, 0.0, 130.0, 'Vegetales', 'Verduras', 'Lechuga Mixta', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_f6ce5c99_50404600_lechuga_mixta', '2025-07-11 23:38:46.301985', '{"processing_time": 1.4898877143859863, "api_attempt": 1, "reasoning": "The item is \'LECHUGA MIXTA\' which is \'Lechuga Mixta\' in the Vegetables >  ... (30 characters truncated) ...  a vegetable, the standardized unit is Kilogramos. The quantity is 1 and there is no package information, so units_per_package is 1.", "error": null}', '2025-07-11 23:38:46.301985', '2025-07-11 23:38:46.301985')
2025-07-11 16:38:46,360 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:46,362 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 13/18 (ordered; batch not supported)] (115, 13, '50404600', None, 'LECHUGA ROMANA BABY', 1.0, 'H87', None, 1.0, None, 110.0, 110.0, 0.0, 0.0, 110.0, 'Vegetales', 'Verduras', 'Lechuga Romana', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_6b45f921_50404600_lechuga_romana_baby', '2025-07-11 23:38:46.301985', '{"processing_time": 1.68709397315979, "api_attempt": 1, "reasoning": "The item is \'LECHUGA ROMANA BABY\', which is a type of lettuce. Therefore, it  ... (143 characters truncated) ... ized unit is \'Kilogramos\'. The quantity is 1, and there\'s no indication of multiple units per package, so units_per_package is 1.", "error": null}', '2025-07-11 23:38:46.301985', '2025-07-11 23:38:46.301985')
2025-07-11 16:38:46,364 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:46,365 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 14/18 (ordered; batch not supported)] (115, 14, '50402800', None, 'ACELGA', 1.0, 'XBH', None, 1.0, None, 14.0, 14.0, 0.0, 0.0, 14.0, 'Vegetales', 'Verduras', 'Acelga', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_4770c1ef_50402800_acelga', '2025-07-11 23:38:46.301985', '{"processing_time": 1.5273375511169434, "api_attempt": 1, "reasoning": "\\"Acelga\\" is classified as a vegetable. Since the unit is XBH and quantity is 1, it\'s likely sold by weight. Assuming XBH represents a bulk weight, it is classified as Kilogramos with 1 unit per package.", "error": null}', '2025-07-11 23:38:46.301985', '2025-07-11 23:38:46.301985')
2025-07-11 16:38:46,367 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:46,374 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 15/18 (ordered; batch not supported)] (115, 15, '50404600', None, 'LECHUGA BOLA', 2.0, 'H87', None, 1.0, None, 30.0, 60.0, 0.0, 0.0, 60.0, 'Vegetales', 'Verduras', 'Lechuga Bola', 'Kilogramos', 2.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_4d8ff92b_50404600_lechuga_bola', '2025-07-11 23:38:46.301985', '{"processing_time": 1.4838519096374512, "api_attempt": 1, "reasoning": "\\"LECHUGA BOLA\\" is classified under \'Vegetales\' -> \'Verduras\' -> \'Lec ... (18 characters truncated) ...  it\'s a vegetable, the standardized unit is \'Kilogramos\'. No package information is provided, so units_per_package defaults to 1.", "error": null}', '2025-07-11 23:38:46.301985', '2025-07-11 23:38:46.301985')
2025-07-11 16:38:46,378 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:46,379 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 16/18 (ordered; batch not supported)] (115, 16, '50405300', None, 'CEBOLLA BLANCA', 1.3, 'KGM', None, 1.0, None, 22.0, 28.6, 0.0, 0.0, 28.6, 'Vegetales', 'Verduras', 'Cebolla Blanca', 'Kilogramos', 1.3, 1.0, 1.0, 'approved_sku', 'approved', 'sku_3823c19d_50405300_cebolla_blanca', '2025-07-11 23:38:46.301985', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:38:46.301985', '2025-07-11 23:38:46.301985')
2025-07-11 16:38:46,380 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:46,381 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 17/18 (ordered; batch not supported)] (115, 17, '50304100', None, 'LIMON AMARILLO', 0.6, 'KGM', None, 1.0, None, 58.0, 34.8, 0.0, 0.0, 34.8, 'Vegetales', 'Frutas', 'Limon Amarillo', 'Kilogramos', 0.6, 1.0, 1.0, 'approved_sku', 'approved', 'sku_07ae298e_50304100_limon_amarillo', '2025-07-11 23:38:46.301985', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:38:46.301985', '2025-07-11 23:38:46.301985')
2025-07-11 16:38:46,385 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:46,390 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 18/18 (ordered; batch not supported)] (115, 18, '50406500', None, 'TOMATE SALADES', 0.56, 'KGM', None, 1.0, None, 25.0, 14.0, 0.0, 0.0, 14.0, 'Vegetales', 'Frutas', 'Tomate Saladette', 'Kilogramos', 0.56, 1.0, 1.0, 'approved_sku', 'approved', 'sku_c0496069_50406500_tomate_salades', '2025-07-11 23:38:46.301985', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:38:46.301985', '2025-07-11 23:38:46.301985')
2025-07-11 16:38:46,393 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:46,407 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [METADATA] Creating business metadata
2025-07-11 16:38:46,407 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Created metadata for invoice ID 115
2025-07-11 16:38:46,407 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:46,413 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_metadata (invoice_id, uuid, folio, issue_date, issuer_rfc, issuer_name, receiver_rfc, receiver_name, original_currency, original_total, exchange_rate, mxn_total, payment_method, payment_terms, is_installments, is_immediate, total_items, total_categories, avg_confidence, processing_status, has_errors, error_count, is_export, has_digital_stamp, is_certified, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:46,415 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 11.94s ago] (115, '0781DA3A-D65A-4B8C-827C-104B8D3F52F8', '51821', '2025-07-08', 'PIVV******RR4', 'VANESSA IVON PIÑUELAS VERDUGO', 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', 'MXN', 1566.92, 1.0, 1566.92, '03', 'PUE', 0, 1, 18, 3, 0.9805555555555555, 'completed', 0, 0, 0, 1, 1, '2025-07-11 23:38:46.413975', '2025-07-11 23:38:46.413975')
2025-07-11 16:38:46,418 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:46,429 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Saving to purchase_details table
2025-07-11 16:38:46,429 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:46,431 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.id = ?
2025-07-11 16:38:46,435 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 11.93s ago] (115,)
2025-07-11 16:38:46,442 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoice_metadata.id AS invoice_metadata_id, invoice_metadata.invoice_id AS invoice_metadata_invoice_id, invoice_metadata.uuid AS invoice_metadata_uuid, invoice_metadata.folio AS invoice_metadata_folio, invoice_metadata.issue_date AS invoice_metadata_issue_date, invoice_metadata.issuer_rfc AS invoice_metadata_issuer_rfc, invoice_metadata.issuer_name AS invoice_metadata_issuer_name, invoice_metadata.receiver_rfc AS invoice_metadata_receiver_rfc, invoice_metadata.receiver_name AS invoice_metadata_receiver_name, invoice_metadata.original_currency AS invoice_metadata_original_currency, invoice_metadata.original_total AS invoice_metadata_original_total, invoice_metadata.exchange_rate AS invoice_metadata_exchange_rate, invoice_metadata.mxn_total AS invoice_metadata_mxn_total, invoice_metadata.payment_method AS invoice_metadata_payment_method, invoice_metadata.payment_terms AS invoice_metadata_payment_terms, invoice_metadata.is_installments AS invoice_metadata_is_installments, invoice_metadata.is_immediate AS invoice_metadata_is_immediate, invoice_metadata.total_items AS invoice_metadata_total_items, invoice_metadata.total_categories AS invoice_metadata_total_categories, invoice_metadata.avg_confidence AS invoice_metadata_avg_confidence, invoice_metadata.processing_status AS invoice_metadata_processing_status, invoice_metadata.has_errors AS invoice_metadata_has_errors, invoice_metadata.error_count AS invoice_metadata_error_count, invoice_metadata.is_export AS invoice_metadata_is_export, invoice_metadata.has_digital_stamp AS invoice_metadata_has_digital_stamp, invoice_metadata.is_certified AS invoice_metadata_is_certified, invoice_metadata.created_at AS invoice_metadata_created_at, invoice_metadata.updated_at AS invoice_metadata_updated_at 
FROM invoice_metadata 
WHERE invoice_metadata.invoice_id = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:46,445 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 11.92s ago] (115, 1, 0)
2025-07-11 16:38:46,450 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - ROLLBACK
2025-07-11 16:38:46,456 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 37 values for 38 columns
2025-07-11 16:38:46,457 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Failed to save to purchase_details table: 37 values for 38 columns
2025-07-11 16:38:46,460 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:46,462 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:46,462 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 11.9s ago] (115, 'INFO', 'batch_processor', 'process_file', 'Successfully processed 0781DA3A-D65A-4B8C-827C-104B8D3F52F8.xml', '{"filename": "0781DA3A-D65A-4B8C-827C-104B8D3F52F8.xml", "processing_time": 11.861981630325317, "item_count": 18, "success": true, "gemini_calls": 7, "approved_skus": 11, "avg_confidence": 0.9805555555555555}', 11.861981630325317, None, '0781DA3A-D65A-4B8C-827C-104B8D3F52F8.xml', None, '2025-07-11 23:38:46.462026')
2025-07-11 16:38:46,464 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:46,476 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SUCCESS] Processed 0781DA3A-D65A-4B8C-827C-104B8D3F52F8.xml in 11.86s
2025-07-11 16:38:46,478 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 0781DA3A-D65A-4B8C-827C-104B8D3F52F8.xml to data/processed
2025-07-11 16:38:46,479 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:38:46,479 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml (3/64)
2025-07-11 16:38:46,480 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:38:46,480 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml
2025-07-11 16:38:46,481 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml
2025-07-11 16:38:46,491 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:38:46,493 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 0C4370C7-7AD0-4050-8912-B5CD2B5468BF
2025-07-11 16:38:46,495 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:46,496 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:46,499 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.83s ago] ('0C4370C7-7AD0-4050-8912-B5CD2B5468BF', 1, 0)
2025-07-11 16:38:46,503 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 0C4370C7-7AD0-4050-8912-B5CD2B5468BF already exists (ID: 64)
2025-07-11 16:38:46,509 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml
2025-07-11 16:38:46,511 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml
2025-07-11 16:38:46,512 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-03 00:00:00
2025-07-11 16:38:46,513 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1476.74
2025-07-11 16:38:46,514 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:46,516 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:38:46,517 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 0C4370C7-7AD0-4050-8912-B5CD2B5468BF
2025-07-11 16:38:46,518 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml
2025-07-11 16:38:46,523 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-03 07:50:56
2025-07-11 16:38:46,524 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:38:46,527 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 1476.74
2025-07-11 16:38:46,528 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:38:46,529 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:46,530 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:46,531 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 11.97s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml', '{"filename": "0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml", "processing_time": 0.0492403507232666, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 0C4370C7-7AD0-4050-8912-B5CD2B5468BF already exists"}', 0.0492403507232666, None, '0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml', None, '2025-07-11 23:38:46.530867')
2025-07-11 16:38:46,539 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:46,549 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml - moved to failed directory
2025-07-11 16:38:46,554 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 0C4370C7-7AD0-4050-8912-B5CD2B5468BF.xml to data/failed
2025-07-11 16:38:46,557 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:38:46,560 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 109BCCAF-DC6E-4C71-B0B4-468D3D894E02.xml (4/64)
2025-07-11 16:38:46,561 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:38:46,561 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 109BCCAF-DC6E-4C71-B0B4-468D3D894E02.xml
2025-07-11 16:38:46,561 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 109BCCAF-DC6E-4C71-B0B4-468D3D894E02.xml
2025-07-11 16:38:46,614 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:38:46,617 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 109BCCAF-DC6E-4C71-B0B4-468D3D894E02
2025-07-11 16:38:46,665 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:46,725 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:46,729 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 15.06s ago] ('109BCCAF-DC6E-4C71-B0B4-468D3D894E02', 1, 0)
2025-07-11 16:38:46,731 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:46,732 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 5 items
2025-07-11 16:38:46,736 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:46,797 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:46,959 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 15.27s ago] ('sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg', 1, 0)
2025-07-11 16:38:46,961 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:46,962 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg
2025-07-11 16:38:48,522 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Otros-a
2025-07-11 16:38:48,523 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Otros-a (units_per_package: 1.0)
2025-07-11 16:38:48,525 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:48,526 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:48,528 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 16.84s ago] ('sku_9a57e1c2_50304100_limon_sin_semilla', 1, 0)
2025-07-11 16:38:48,529 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_9a57e1c2_50304100_limon_sin_semilla -> Vegetales
2025-07-11 16:38:48,530 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:38:48,532 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 16.82s ago] (5, '2025-07-11 23:38:48.529288', 127)
2025-07-11 16:38:48,544 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:48,556 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:48,559 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:48,561 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 16.87s ago] ('sku_141a86f5_10161506_naranja', 1, 0)
2025-07-11 16:38:48,563 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_141a86f5_10161506_naranja -> Vegetales
2025-07-11 16:38:48,563 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:38:48,564 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 16.86s ago] (5, '2025-07-11 23:38:48.563187', 128)
2025-07-11 16:38:48,571 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:48,580 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:48,581 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:48,588 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 16.9s ago] ('sku_306c40c7_50303300_toronja', 1, 0)
2025-07-11 16:38:48,592 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_306c40c7_50303300_toronja -> Vegetales
2025-07-11 16:38:48,593 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:38:48,593 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 16.89s ago] (5, '2025-07-11 23:38:48.592299', 130)
2025-07-11 16:38:48,596 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:48,609 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:48,610 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:48,611 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 16.92s ago] ('sku_f95bb8a3_50307024_pepino', 1, 0)
2025-07-11 16:38:48,613 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_f95bb8a3_50307024_pepino -> Vegetales
2025-07-11 16:38:48,615 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:38:48,616 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 16.91s ago] (5, '2025-07-11 23:38:48.613397', 157)
2025-07-11 16:38:48,624 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:48,630 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-11 16:38:48,638 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:48,642 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoices (uuid, series, folio, invoice_type, version, issue_date, certification_date, created_at, updated_at, issuer_rfc, issuer_name, issuer_fiscal_regime, issuer_use_cfdi, issuer_residence, issuer_tax_id, receiver_rfc, receiver_name, receiver_fiscal_address, receiver_residence, receiver_tax_id, receiver_use_cfdi, payment_method, payment_method_desc, payment_terms, payment_conditions, currency, exchange_rate, subtotal, total_discount, total_transferred_taxes, total_withheld_taxes, total_amount, digital_stamp, certificate_number, certificate, sat_seal, sat_certificate, fiscal_folio, stamp_datetime, expedition_place, export_operation, confirmation, source_filename, xml_file_size, confidence_score, processing_time, processing_status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:48,643 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.26s ago] ('109BCCAF-DC6E-4C71-B0B4-468D3D894E02', None, '51819', 'I', '4.0', '2025-07-08 07:32:32.000000', None, '2025-07-11 23:38:48.642354', '2025-07-11 23:38:48.642354', 'PIVV******RR4', 'VANESSA IVON PIÑUELAS VERDUGO', '612', None, None, None, 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', '23300', None, None, None, '03', None, 'PUE', None, 'MXN', 1.0, 365.76, 0.0, 0.0, 0.0, 365.76, 'akwnWdO2NTvJSmEB1DFP/xaeoiL1YM3qQEv93oVNpxIoHtIlfFS5/FsLe6emH0bCIus1aPeJB/LVTh3L8di06KRhtUUfWrMao6bhYon0KqTs80mxDg5pkBEQwEzaDZrtpeY1DPiPPOaMas2QIEMuq ... (46 characters truncated) ... r+HWvgdVAVZ+9LvGTJNNiR4J1TtvPs6HdeVHdA6YLEyfIWqZA0vb5hd8OJLk2qtTtSpupL46fblMBz0ke5qVN5vaa5uQo3CB5fHUnuKocVLbEf7Or72W8yaAEZCxki2Xx0YHDiZNQOt7Ct8u2uA==', '00001000000705018977', None, 'VdpNcTy6RA9pQ4FNnu/KniAHe9jFCih75wL4D/S0lXMCu8optRDs7fidF3IQ53fPBy0fRyCP9q6cMU4PbT2GUrlJrAwtmnn0TDPsWSeJ8T9D4oU0zs/hSSzDsG7oo/J5BKXMQG6v+KWGQx8uj5xBg ... (46 characters truncated) ... tRwj20dG15kf5FyeDcxrZClsC5zaD02dkv6xH6r7D/cU+oyYa0MF93oWFyfZ+PfBp5c5lqAMKiJ2av1K3obRAUDmIU2iprgcAUP2mw5tVA+lFWxk39k5LO/4V0oWl7G/MmV/AG3feiBUwXW+fzg==', None, '109BCCAF-DC6E-4C71-B0B4-468D3D894E02', '2025-07-08 08:32:33.000000', None, None, None, '109BCCAF-DC6E-4C71-B0B4-468D3D894E02.xml', 6494, None, None, 'processed')
2025-07-11 16:38:48,648 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Saved invoice 109BCCAF-DC6E-4C71-B0B4-468D3D894E02 with 5 items (ID: 116)
2025-07-11 16:38:48,654 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE invoices SET confidence_score=?, processing_time=? WHERE invoices.id = ?
2025-07-11 16:38:48,657 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.26s ago] (0.99, 1.5589585304260254, 116)
2025-07-11 16:38:48,658 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:48,659 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.25s ago (insertmanyvalues) 1/5 (ordered; batch not supported)] (116, 1, '50202302', None, 'HIELO BOLSA DE HIELO 5KG', 3.0, 'H87', None, 1.0, 'Bolsa', 33.0, 99.0, 0.0, 0.0, 99.0, 'Abarrotes', 'Otros-a', 'Otros', 'Kilogramos', 3.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg', '2025-07-11 23:38:48.658871', '{"processing_time": 1.5589585304260254, "api_attempt": 1, "reasoning": "Ice is not explicitly listed, so it falls under \'Otros\' in Abarrotes. The item is sold in a 5KG bag, but the units are per item, so units_per_package is 1.", "error": null}', '2025-07-11 23:38:48.658871', '2025-07-11 23:38:48.658871')
2025-07-11 16:38:48,662 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:48,662 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 2/5 (ordered; batch not supported)] (116, 2, '50304100', None, 'LIMON SIN SEMILLA', 4.04, 'KGM', None, 1.0, None, 35.0, 141.4, 0.0, 0.0, 141.4, 'Vegetales', 'Frutas', 'Limon Sin Semilla', 'Kilogramos', 4.04, 1.0, 1.0, 'approved_sku', 'approved', 'sku_9a57e1c2_50304100_limon_sin_semilla', '2025-07-11 23:38:48.658871', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:38:48.658871', '2025-07-11 23:38:48.658871')
2025-07-11 16:38:48,664 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:48,667 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 3/5 (ordered; batch not supported)] (116, 3, '10161506', None, 'NARANJA', 1.42, 'KGM', None, 1.0, None, 32.0, 45.44, 0.0, 0.0, 45.44, 'Vegetales', 'Frutas', 'Naranja', 'Kilogramos', 1.42, 1.0, 1.0, 'approved_sku', 'approved', 'sku_141a86f5_10161506_naranja', '2025-07-11 23:38:48.658871', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:38:48.658871', '2025-07-11 23:38:48.658871')
2025-07-11 16:38:48,673 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:48,675 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 4/5 (ordered; batch not supported)] (116, 4, '50303300', None, 'TORONJA', 2.16, 'KGM', None, 1.0, None, 33.0, 71.28, 0.0, 0.0, 71.28, 'Vegetales', 'Frutas', 'Toronja', 'Kilogramos', 2.16, 1.0, 1.0, 'approved_sku', 'approved', 'sku_306c40c7_50303300_toronja', '2025-07-11 23:38:48.658871', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:38:48.658871', '2025-07-11 23:38:48.658871')
2025-07-11 16:38:48,676 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:48,677 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 5/5 (ordered; batch not supported)] (116, 5, '50307024', None, 'PEPINO', 0.36, 'KGM', None, 1.0, None, 24.0, 8.64, 0.0, 0.0, 8.64, 'Vegetales', 'Verduras', 'Pepino Verde', 'Kilogramos', 0.36, 1.0, 1.0, 'approved_sku', 'approved', 'sku_f95bb8a3_50307024_pepino', '2025-07-11 23:38:48.658871', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:38:48.658871', '2025-07-11 23:38:48.658871')
2025-07-11 16:38:48,679 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:48,695 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [METADATA] Creating business metadata
2025-07-11 16:38:48,697 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Created metadata for invoice ID 116
2025-07-11 16:38:48,698 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:48,704 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_metadata (invoice_id, uuid, folio, issue_date, issuer_rfc, issuer_name, receiver_rfc, receiver_name, original_currency, original_total, exchange_rate, mxn_total, payment_method, payment_terms, is_installments, is_immediate, total_items, total_categories, avg_confidence, processing_status, has_errors, error_count, is_export, has_digital_stamp, is_certified, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:48,704 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.23s ago] (116, '109BCCAF-DC6E-4C71-B0B4-468D3D894E02', '51819', '2025-07-08', 'PIVV******RR4', 'VANESSA IVON PIÑUELAS VERDUGO', 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', 'MXN', 365.76, 1.0, 365.76, '03', 'PUE', 0, 1, 5, 2, 0.99, 'completed', 0, 0, 0, 1, 1, '2025-07-11 23:38:48.704912', '2025-07-11 23:38:48.704912')
2025-07-11 16:38:48,711 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:48,721 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Saving to purchase_details table
2025-07-11 16:38:48,724 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:48,725 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.id = ?
2025-07-11 16:38:48,727 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.22s ago] (116,)
2025-07-11 16:38:48,729 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoice_metadata.id AS invoice_metadata_id, invoice_metadata.invoice_id AS invoice_metadata_invoice_id, invoice_metadata.uuid AS invoice_metadata_uuid, invoice_metadata.folio AS invoice_metadata_folio, invoice_metadata.issue_date AS invoice_metadata_issue_date, invoice_metadata.issuer_rfc AS invoice_metadata_issuer_rfc, invoice_metadata.issuer_name AS invoice_metadata_issuer_name, invoice_metadata.receiver_rfc AS invoice_metadata_receiver_rfc, invoice_metadata.receiver_name AS invoice_metadata_receiver_name, invoice_metadata.original_currency AS invoice_metadata_original_currency, invoice_metadata.original_total AS invoice_metadata_original_total, invoice_metadata.exchange_rate AS invoice_metadata_exchange_rate, invoice_metadata.mxn_total AS invoice_metadata_mxn_total, invoice_metadata.payment_method AS invoice_metadata_payment_method, invoice_metadata.payment_terms AS invoice_metadata_payment_terms, invoice_metadata.is_installments AS invoice_metadata_is_installments, invoice_metadata.is_immediate AS invoice_metadata_is_immediate, invoice_metadata.total_items AS invoice_metadata_total_items, invoice_metadata.total_categories AS invoice_metadata_total_categories, invoice_metadata.avg_confidence AS invoice_metadata_avg_confidence, invoice_metadata.processing_status AS invoice_metadata_processing_status, invoice_metadata.has_errors AS invoice_metadata_has_errors, invoice_metadata.error_count AS invoice_metadata_error_count, invoice_metadata.is_export AS invoice_metadata_is_export, invoice_metadata.has_digital_stamp AS invoice_metadata_has_digital_stamp, invoice_metadata.is_certified AS invoice_metadata_is_certified, invoice_metadata.created_at AS invoice_metadata_created_at, invoice_metadata.updated_at AS invoice_metadata_updated_at 
FROM invoice_metadata 
WHERE invoice_metadata.invoice_id = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:48,731 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.21s ago] (116, 1, 0)
2025-07-11 16:38:48,743 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - ROLLBACK
2025-07-11 16:38:48,745 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 37 values for 38 columns
2025-07-11 16:38:48,746 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Failed to save to purchase_details table: 37 values for 38 columns
2025-07-11 16:38:48,748 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:48,749 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:48,755 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.2s ago] (116, 'INFO', 'batch_processor', 'process_file', 'Successfully processed 109BCCAF-DC6E-4C71-B0B4-468D3D894E02.xml', '{"filename": "109BCCAF-DC6E-4C71-B0B4-468D3D894E02.xml", "processing_time": 2.1853482723236084, "item_count": 5, "success": true, "gemini_calls": 1, "approved_skus": 4, "avg_confidence": 0.99}', 2.1853482723236084, None, '109BCCAF-DC6E-4C71-B0B4-468D3D894E02.xml', None, '2025-07-11 23:38:48.749316')
2025-07-11 16:38:48,759 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:48,767 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SUCCESS] Processed 109BCCAF-DC6E-4C71-B0B4-468D3D894E02.xml in 2.19s
2025-07-11 16:38:48,773 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 109BCCAF-DC6E-4C71-B0B4-468D3D894E02.xml to data/processed
2025-07-11 16:38:48,776 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:38:48,777 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml (5/64)
2025-07-11 16:38:48,778 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:38:48,778 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml
2025-07-11 16:38:48,779 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml
2025-07-11 16:38:48,783 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:38:48,788 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 1C70987C-FC75-4A90-81D8-9B9D2C51C084
2025-07-11 16:38:48,790 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:48,792 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:48,795 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 17.12s ago] ('1C70987C-FC75-4A90-81D8-9B9D2C51C084', 1, 0)
2025-07-11 16:38:48,796 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 1C70987C-FC75-4A90-81D8-9B9D2C51C084 already exists (ID: 65)
2025-07-11 16:38:48,798 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml
2025-07-11 16:38:48,801 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml
2025-07-11 16:38:48,804 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-11 16:38:48,806 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $264.00
2025-07-11 16:38:48,808 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:48,810 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:38:48,810 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 1C70987C-FC75-4A90-81D8-9B9D2C51C084
2025-07-11 16:38:48,811 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml
2025-07-11 16:38:48,811 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 09:54:21
2025-07-11 16:38:48,812 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: EXPINS
2025-07-11 16:38:48,813 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 264.00
2025-07-11 16:38:48,813 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:38:48,815 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:48,819 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:48,822 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.26s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml', '{"filename": "1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml", "processing_time": 0.03646707534790039, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 1C70987C-FC75-4A90-81D8-9B9D2C51C084 already exists"}', 0.03646707534790039, None, '1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml', None, '2025-07-11 23:38:48.818335')
2025-07-11 16:38:48,826 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:48,838 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml - moved to failed directory
2025-07-11 16:38:48,842 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 1C70987C-FC75-4A90-81D8-9B9D2C51C084.xml to data/failed
2025-07-11 16:38:48,843 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:38:48,845 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 1CED90AB-44DC-445D-8330-FF97B0858E8D.xml (6/64)
2025-07-11 16:38:48,845 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:38:48,846 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 1CED90AB-44DC-445D-8330-FF97B0858E8D.xml
2025-07-11 16:38:48,847 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 1CED90AB-44DC-445D-8330-FF97B0858E8D.xml
2025-07-11 16:38:48,857 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:38:48,858 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 1CED90AB-44DC-445D-8330-FF97B0858E8D
2025-07-11 16:38:48,860 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:48,861 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:48,864 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 17.19s ago] ('1CED90AB-44DC-445D-8330-FF97B0858E8D', 1, 0)
2025-07-11 16:38:48,869 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 1CED90AB-44DC-445D-8330-FF97B0858E8D already exists (ID: 66)
2025-07-11 16:38:48,871 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 1CED90AB-44DC-445D-8330-FF97B0858E8D.xml
2025-07-11 16:38:48,873 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 1CED90AB-44DC-445D-8330-FF97B0858E8D.xml
2025-07-11 16:38:48,876 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-15 00:00:00
2025-07-11 16:38:48,876 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2679.81
2025-07-11 16:38:48,878 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:48,880 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:38:48,881 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 1CED90AB-44DC-445D-8330-FF97B0858E8D
2025-07-11 16:38:48,881 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 1CED90AB-44DC-445D-8330-FF97B0858E8D.xml
2025-07-11 16:38:48,883 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-15 12:02:06
2025-07-11 16:38:48,888 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:38:48,890 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 2679.81
2025-07-11 16:38:48,892 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:38:48,892 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:48,893 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:48,893 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.34s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 1CED90AB-44DC-445D-8330-FF97B0858E8D.xml', '{"filename": "1CED90AB-44DC-445D-8330-FF97B0858E8D.xml", "processing_time": 0.0460972785949707, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 1CED90AB-44DC-445D-8330-FF97B0858E8D already exists"}', 0.0460972785949707, None, '1CED90AB-44DC-445D-8330-FF97B0858E8D.xml', None, '2025-07-11 23:38:48.893773')
2025-07-11 16:38:48,898 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:48,907 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 1CED90AB-44DC-445D-8330-FF97B0858E8D.xml - moved to failed directory
2025-07-11 16:38:48,910 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 1CED90AB-44DC-445D-8330-FF97B0858E8D.xml to data/failed
2025-07-11 16:38:48,910 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:38:48,911 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml (7/64)
2025-07-11 16:38:48,911 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:38:48,913 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml
2025-07-11 16:38:48,914 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml
2025-07-11 16:38:48,921 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:38:48,923 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 20C79FA9-E04A-4AB4-8EF1-496CA21939E7
2025-07-11 16:38:48,926 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:48,927 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:48,930 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 17.26s ago] ('20C79FA9-E04A-4AB4-8EF1-496CA21939E7', 1, 0)
2025-07-11 16:38:48,932 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 20C79FA9-E04A-4AB4-8EF1-496CA21939E7 already exists (ID: 67)
2025-07-11 16:38:48,934 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml
2025-07-11 16:38:48,938 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml
2025-07-11 16:38:48,940 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-11 16:38:48,941 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $697.55
2025-07-11 16:38:48,941 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:48,943 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:38:48,944 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 20C79FA9-E04A-4AB4-8EF1-496CA21939E7
2025-07-11 16:38:48,944 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml
2025-07-11 16:38:48,945 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 09:33:37
2025-07-11 16:38:48,946 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: CERVEZAS CUAUHTEMOC MOCTEZUMA
2025-07-11 16:38:48,947 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 697.55
2025-07-11 16:38:48,948 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:38:48,953 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:48,956 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:48,958 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.4s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml', '{"filename": "20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml", "processing_time": 0.03593802452087402, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 20C79FA9-E04A-4AB4-8EF1-496CA21939E7 already exists"}', 0.03593802452087402, None, '20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml', None, '2025-07-11 23:38:48.955724')
2025-07-11 16:38:48,965 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:48,976 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml - moved to failed directory
2025-07-11 16:38:48,978 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 20C79FA9-E04A-4AB4-8EF1-496CA21939E7.xml to data/failed
2025-07-11 16:38:48,979 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:38:48,979 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 233A87F1-B492-4265-8E1B-206DC4C46711.xml (8/64)
2025-07-11 16:38:48,980 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:38:48,981 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 233A87F1-B492-4265-8E1B-206DC4C46711.xml
2025-07-11 16:38:48,986 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 233A87F1-B492-4265-8E1B-206DC4C46711.xml
2025-07-11 16:38:48,993 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:38:48,994 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 233A87F1-B492-4265-8E1B-206DC4C46711
2025-07-11 16:38:48,995 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:48,996 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:48,999 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 17.33s ago] ('233A87F1-B492-4265-8E1B-206DC4C46711', 1, 0)
2025-07-11 16:38:49,005 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 233A87F1-B492-4265-8E1B-206DC4C46711 already exists (ID: 68)
2025-07-11 16:38:49,008 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 233A87F1-B492-4265-8E1B-206DC4C46711.xml
2025-07-11 16:38:49,008 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 233A87F1-B492-4265-8E1B-206DC4C46711.xml
2025-07-11 16:38:49,009 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-18 00:00:00
2025-07-11 16:38:49,009 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1683.06
2025-07-11 16:38:49,010 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:49,011 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:38:49,011 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 233A87F1-B492-4265-8E1B-206DC4C46711
2025-07-11 16:38:49,013 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 233A87F1-B492-4265-8E1B-206DC4C46711.xml
2025-07-11 16:38:49,013 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-18 07:58:03
2025-07-11 16:38:49,014 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:38:49,016 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 1683.06
2025-07-11 16:38:49,018 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:38:49,022 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:49,025 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:49,026 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.47s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 233A87F1-B492-4265-8E1B-206DC4C46711.xml', '{"filename": "233A87F1-B492-4265-8E1B-206DC4C46711.xml", "processing_time": 0.04056715965270996, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 233A87F1-B492-4265-8E1B-206DC4C46711 already exists"}', 0.04056715965270996, None, '233A87F1-B492-4265-8E1B-206DC4C46711.xml', None, '2025-07-11 23:38:49.025779')
2025-07-11 16:38:49,035 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:49,043 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 233A87F1-B492-4265-8E1B-206DC4C46711.xml - moved to failed directory
2025-07-11 16:38:49,045 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 233A87F1-B492-4265-8E1B-206DC4C46711.xml to data/failed
2025-07-11 16:38:49,046 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:38:49,047 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 235D473E-9A1D-47E8-8F0F-E13058968FD6.xml (9/64)
2025-07-11 16:38:49,049 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:38:49,051 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 235D473E-9A1D-47E8-8F0F-E13058968FD6.xml
2025-07-11 16:38:49,055 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 235D473E-9A1D-47E8-8F0F-E13058968FD6.xml
2025-07-11 16:38:49,060 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:38:49,060 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 235D473E-9A1D-47E8-8F0F-E13058968FD6
2025-07-11 16:38:49,061 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:49,062 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:49,065 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 17.39s ago] ('235D473E-9A1D-47E8-8F0F-E13058968FD6', 1, 0)
2025-07-11 16:38:49,070 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 235D473E-9A1D-47E8-8F0F-E13058968FD6 already exists (ID: 69)
2025-07-11 16:38:49,073 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 235D473E-9A1D-47E8-8F0F-E13058968FD6.xml
2025-07-11 16:38:49,074 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 235D473E-9A1D-47E8-8F0F-E13058968FD6.xml
2025-07-11 16:38:49,074 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-17 00:00:00
2025-07-11 16:38:49,075 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $255.32
2025-07-11 16:38:49,076 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:49,076 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:38:49,077 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 235D473E-9A1D-47E8-8F0F-E13058968FD6
2025-07-11 16:38:49,077 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 235D473E-9A1D-47E8-8F0F-E13058968FD6.xml
2025-07-11 16:38:49,078 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-17 13:10:37
2025-07-11 16:38:49,078 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:38:49,080 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 255.32
2025-07-11 16:38:49,081 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:38:49,082 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:49,087 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:49,089 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.53s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 235D473E-9A1D-47E8-8F0F-E13058968FD6.xml', '{"filename": "235D473E-9A1D-47E8-8F0F-E13058968FD6.xml", "processing_time": 0.029460668563842773, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 235D473E-9A1D-47E8-8F0F-E13058968FD6 already exists"}', 0.029460668563842773, None, '235D473E-9A1D-47E8-8F0F-E13058968FD6.xml', None, '2025-07-11 23:38:49.087273')
2025-07-11 16:38:49,093 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:49,099 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 235D473E-9A1D-47E8-8F0F-E13058968FD6.xml - moved to failed directory
2025-07-11 16:38:49,106 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 235D473E-9A1D-47E8-8F0F-E13058968FD6.xml to data/failed
2025-07-11 16:38:49,110 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:38:49,110 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 23D18724-00D9-486E-B8DA-88BCF5007D53.xml (10/64)
2025-07-11 16:38:49,111 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:38:49,112 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 23D18724-00D9-486E-B8DA-88BCF5007D53.xml
2025-07-11 16:38:49,114 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 23D18724-00D9-486E-B8DA-88BCF5007D53.xml
2025-07-11 16:38:49,122 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:38:49,124 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 23D18724-00D9-486E-B8DA-88BCF5007D53
2025-07-11 16:38:49,125 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:49,126 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:49,129 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 17.46s ago] ('23D18724-00D9-486E-B8DA-88BCF5007D53', 1, 0)
2025-07-11 16:38:49,131 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 23D18724-00D9-486E-B8DA-88BCF5007D53 already exists (ID: 70)
2025-07-11 16:38:49,132 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 23D18724-00D9-486E-B8DA-88BCF5007D53.xml
2025-07-11 16:38:49,138 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 23D18724-00D9-486E-B8DA-88BCF5007D53.xml
2025-07-11 16:38:49,139 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-11 16:38:49,140 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $3397.42
2025-07-11 16:38:49,142 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:49,143 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:38:49,143 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 23D18724-00D9-486E-B8DA-88BCF5007D53
2025-07-11 16:38:49,144 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 23D18724-00D9-486E-B8DA-88BCF5007D53.xml
2025-07-11 16:38:49,144 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 09:58:04
2025-07-11 16:38:49,146 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: CERVEZAS CUAUHTEMOC MOCTEZUMA
2025-07-11 16:38:49,146 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 3397.42
2025-07-11 16:38:49,147 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:38:49,149 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:49,155 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:49,158 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 14.6s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 23D18724-00D9-486E-B8DA-88BCF5007D53.xml', '{"filename": "23D18724-00D9-486E-B8DA-88BCF5007D53.xml", "processing_time": 0.036228179931640625, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 23D18724-00D9-486E-B8DA-88BCF5007D53 already exists"}', 0.036228179931640625, None, '23D18724-00D9-486E-B8DA-88BCF5007D53.xml', None, '2025-07-11 23:38:49.155735')
2025-07-11 16:38:49,165 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:49,176 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 23D18724-00D9-486E-B8DA-88BCF5007D53.xml - moved to failed directory
2025-07-11 16:38:49,178 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 23D18724-00D9-486E-B8DA-88BCF5007D53.xml to data/failed
2025-07-11 16:38:49,179 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:38:49,180 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F.xml (11/64)
2025-07-11 16:38:49,180 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:38:49,181 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F.xml
2025-07-11 16:38:49,184 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F.xml
2025-07-11 16:38:49,192 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:38:49,193 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F
2025-07-11 16:38:49,194 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:49,196 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:49,203 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 17.53s ago] ('29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F', 1, 0)
2025-07-11 16:38:49,206 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:49,206 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 4 items
2025-07-11 16:38:49,210 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_8f28f7c7_50402300_repollo_verde
2025-07-11 16:38:49,211 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:49,213 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:49,217 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 17.52s ago] ('sku_5a200fb8_50131800_queso_cheddar_cheddar_fuerte', 1, 0)
2025-07-11 16:38:49,221 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:49,223 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_5a200fb8_50131800_queso_cheddar_cheddar_fuerte
2025-07-11 16:38:50,749 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Queso
2025-07-11 16:38:50,750 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Queso (units_per_package: 1.0)
2025-07-11 16:38:50,753 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:50,755 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:50,761 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 19.07s ago] ('sku_ecbce4c6_50131700_crema_para_batir_lyncont_1ltr', 1, 0)
2025-07-11 16:38:50,770 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:50,772 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_ecbce4c6_50131700_crema_para_batir_lyncont_1ltr
2025-07-11 16:38:52,591 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Cremas
2025-07-11 16:38:52,592 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Cremas (units_per_package: 1.0)
2025-07-11 16:38:52,594 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:52,596 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:52,605 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.91s ago] ('sku_e334a5b7_50131700_leche_entera_lala', 1, 0)
2025-07-11 16:38:52,606 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:52,607 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_e334a5b7_50131700_leche_entera_lala
2025-07-11 16:38:54,136 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Leche
2025-07-11 16:38:54,137 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Leche (units_per_package: 1.0)
2025-07-11 16:38:54,137 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-11 16:38:54,140 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:54,142 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoices (uuid, series, folio, invoice_type, version, issue_date, certification_date, created_at, updated_at, issuer_rfc, issuer_name, issuer_fiscal_regime, issuer_use_cfdi, issuer_residence, issuer_tax_id, receiver_rfc, receiver_name, receiver_fiscal_address, receiver_residence, receiver_tax_id, receiver_use_cfdi, payment_method, payment_method_desc, payment_terms, payment_conditions, currency, exchange_rate, subtotal, total_discount, total_transferred_taxes, total_withheld_taxes, total_amount, digital_stamp, certificate_number, certificate, sat_seal, sat_certificate, fiscal_folio, stamp_datetime, expedition_place, export_operation, confirmation, source_filename, xml_file_size, confidence_score, processing_time, processing_status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:54,145 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 19.76s ago] ('29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F', None, '51685', 'I', '4.0', '2025-07-04 14:42:30.000000', None, '2025-07-11 23:38:54.140829', '2025-07-11 23:38:54.140829', 'PIVV******RR4', 'VANESSA IVON PIÑUELAS VERDUGO', '612', None, None, None, 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', '23300', None, None, None, '99', None, 'PPD', None, 'MXN', 1.0, 594.0, 0.0, 0.0, 0.0, 594.0, 'OnrbS2pyt235pLovT402HH5ot+rVHIxMB5BP1rCn3Srs3MOkdCD6gbFHVcCFd1F2FVPLwhCCby6o4fJEb/13XFFyM1mUdNiNkctU1w0EHdToKoOPaPMqIxXsXUqc5sFMWNR+W1qJ79v8v7usl1E8e ... (46 characters truncated) ... RsTXfhky+v+QxicVtWsidNCfUtf1Omg8s7dVnjvPvdW+dNj74fecL3k90yW5JFIz4PwPl0WXMljiIhlWHCnDnmqVPe700gJfGEYbXqUEgoJN76HbiJ6pIRXqNHVdiZsLQS2tGMP2mzQoSzP5SiA==', '00001000000705018977', None, 'YAa/mVD2Yqgj3WzvpBr1LYFWzyMMVPgyrB8mIQbIabiiXb7DM0B1sZdgq3s+mbdL9UA2wgtjscoVZR3lRrwOrIV0fjbvHP0aGv+VIgmrQ9HfEjgn4skpzscbqMdYq4fe9LQr3qSSzvW6L2OVTAP9g ... (46 characters truncated) ... qDTZP0BN9L6FlePtpPWOYcJ15sNwPKnCz98Prwu5zEmMGJ7VGuY9jRUzvJ+aLVTfelUBX5bw/q00dxkokGxS39BFrFE0Npwz0fAxPBhFnkq0kOfV+yNF3i0NnL6MKyxOy88UJ11znZIboZeyqHg==', None, '29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F', '2025-07-04 15:42:31.000000', None, None, None, '29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F.xml', 6137, None, None, 'processed')
2025-07-11 16:38:54,157 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Saved invoice 29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F with 4 items (ID: 117)
2025-07-11 16:38:54,160 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE invoices SET confidence_score=?, processing_time=? WHERE invoices.id = ?
2025-07-11 16:38:54,162 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 19.76s ago] (0.9624999999999999, 4.865825891494751, 117)
2025-07-11 16:38:54,171 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:54,173 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 19.76s ago (insertmanyvalues) 1/4 (ordered; batch not supported)] (117, 1, '50402300', None, 'REPOLLO VERDE', 2.12, 'KGM', None, 1.0, None, 25.0, 53.0, 0.0, 0.0, 53.0, 'Vegetales', 'Verduras', 'Repollo', 'Kilogramos', 2.12, 1.0, 1.0, 'approved_sku', 'approved', 'sku_8f28f7c7_50402300_repollo_verde', '2025-07-11 23:38:54.170086', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:38:54.170086', '2025-07-11 23:38:54.170086')
2025-07-11 16:38:54,175 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:54,178 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 2/4 (ordered; batch not supported)] (117, 2, '50131800', None, 'QUESO CHEDDAR CHEDDAR FUERTE', 2.0, 'H87', None, 1.0, None, 195.0, 390.0, 0.0, 0.0, 390.0, 'Lacteos', 'Queso', 'Queso cheddar', 'Kilogramos', 2.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_5a200fb8_50131800_queso_cheddar_cheddar_fuerte', '2025-07-11 23:38:54.170086', '{"processing_time": 1.5237786769866943, "api_attempt": 1, "reasoning": "The item is \'QUESO CHEDDAR CHEDDAR FUERTE\', which clearly falls under the \ ... (98 characters truncated) ... se, the standardized unit is \'Kilogramos\'. There is no package information in the description, so units_per_package defaults to 1.", "error": null}', '2025-07-11 23:38:54.170086', '2025-07-11 23:38:54.170086')
2025-07-11 16:38:54,187 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:54,189 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 3/4 (ordered; batch not supported)] (117, 3, '50131700', None, 'CREMA PARA BATIR LYNCONT 1LTR', 1.0, 'H87', None, 1.0, 'Botella', 115.0, 115.0, 0.0, 0.0, 115.0, 'Lacteos', 'Cremas', 'Crema para batir', 'Litros', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_ecbce4c6_50131700_crema_para_batir_lyncont_1ltr', '2025-07-11 23:38:54.170086', '{"processing_time": 1.8148128986358643, "api_attempt": 1, "reasoning": "The item is described as \'CREMA PARA BATIR LYNCONT 1LTR\', which translates  ... (148 characters truncated) ... eos\'. The quantity is 1 and the unit is \'H87\', which is assumed to be a bottle. The volume is 1 liter, so units_per_package is 1.", "error": null}', '2025-07-11 23:38:54.170086', '2025-07-11 23:38:54.170086')
2025-07-11 16:38:54,193 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:38:54,199 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 4/4 (ordered; batch not supported)] (117, 4, '50131700', None, 'LECHE ENTERA LALA', 1.0, 'H87', None, 1.0, None, 36.0, 36.0, 0.0, 0.0, 36.0, 'Lacteos', 'Leche', 'Leche entera', 'Litros', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_e334a5b7_50131700_leche_entera_lala', '2025-07-11 23:38:54.170086', '{"processing_time": 1.5272343158721924, "api_attempt": 1, "reasoning": "\\"LECHE ENTERA LALA\\" clearly falls under the \'Leche entera\' sub-subcategory. Since it\'s milk, the standardized unit is Litros. The quantity is 1, implying one unit of milk, so units_per_package is 1.", "error": null}', '2025-07-11 23:38:54.170086', '2025-07-11 23:38:54.170086')
2025-07-11 16:38:54,207 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:54,224 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [METADATA] Creating business metadata
2025-07-11 16:38:54,226 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Created metadata for invoice ID 117
2025-07-11 16:38:54,228 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:54,235 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_metadata (invoice_id, uuid, folio, issue_date, issuer_rfc, issuer_name, receiver_rfc, receiver_name, original_currency, original_total, exchange_rate, mxn_total, payment_method, payment_terms, is_installments, is_immediate, total_items, total_categories, avg_confidence, processing_status, has_errors, error_count, is_export, has_digital_stamp, is_certified, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:54,238 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 19.76s ago] (117, '29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F', '51685', '2025-07-04', 'PIVV******RR4', 'VANESSA IVON PIÑUELAS VERDUGO', 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', 'MXN', 594.0, 1.0, 594.0, '99', 'PPD', 1, 0, 4, 2, 0.9624999999999999, 'completed', 0, 0, 0, 1, 1, '2025-07-11 23:38:54.234134', '2025-07-11 23:38:54.234134')
2025-07-11 16:38:54,243 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:54,255 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Saving to purchase_details table
2025-07-11 16:38:54,256 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:54,259 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.id = ?
2025-07-11 16:38:54,265 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 19.76s ago] (117,)
2025-07-11 16:38:54,271 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoice_metadata.id AS invoice_metadata_id, invoice_metadata.invoice_id AS invoice_metadata_invoice_id, invoice_metadata.uuid AS invoice_metadata_uuid, invoice_metadata.folio AS invoice_metadata_folio, invoice_metadata.issue_date AS invoice_metadata_issue_date, invoice_metadata.issuer_rfc AS invoice_metadata_issuer_rfc, invoice_metadata.issuer_name AS invoice_metadata_issuer_name, invoice_metadata.receiver_rfc AS invoice_metadata_receiver_rfc, invoice_metadata.receiver_name AS invoice_metadata_receiver_name, invoice_metadata.original_currency AS invoice_metadata_original_currency, invoice_metadata.original_total AS invoice_metadata_original_total, invoice_metadata.exchange_rate AS invoice_metadata_exchange_rate, invoice_metadata.mxn_total AS invoice_metadata_mxn_total, invoice_metadata.payment_method AS invoice_metadata_payment_method, invoice_metadata.payment_terms AS invoice_metadata_payment_terms, invoice_metadata.is_installments AS invoice_metadata_is_installments, invoice_metadata.is_immediate AS invoice_metadata_is_immediate, invoice_metadata.total_items AS invoice_metadata_total_items, invoice_metadata.total_categories AS invoice_metadata_total_categories, invoice_metadata.avg_confidence AS invoice_metadata_avg_confidence, invoice_metadata.processing_status AS invoice_metadata_processing_status, invoice_metadata.has_errors AS invoice_metadata_has_errors, invoice_metadata.error_count AS invoice_metadata_error_count, invoice_metadata.is_export AS invoice_metadata_is_export, invoice_metadata.has_digital_stamp AS invoice_metadata_has_digital_stamp, invoice_metadata.is_certified AS invoice_metadata_is_certified, invoice_metadata.created_at AS invoice_metadata_created_at, invoice_metadata.updated_at AS invoice_metadata_updated_at 
FROM invoice_metadata 
WHERE invoice_metadata.invoice_id = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:54,274 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 19.75s ago] (117, 1, 0)
2025-07-11 16:38:54,287 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - ROLLBACK
2025-07-11 16:38:54,288 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 37 values for 38 columns
2025-07-11 16:38:54,289 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Failed to save to purchase_details table: 37 values for 38 columns
2025-07-11 16:38:54,294 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:54,303 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:54,306 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 19.75s ago] (117, 'INFO', 'batch_processor', 'process_file', 'Successfully processed 29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F.xml', '{"filename": "29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F.xml", "processing_time": 5.111962795257568, "item_count": 4, "success": true, "gemini_calls": 3, "approved_skus": 1, "avg_confidence": 0.9624999999999999}', 5.111962795257568, None, '29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F.xml', None, '2025-07-11 23:38:54.303428')
2025-07-11 16:38:54,309 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:54,330 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SUCCESS] Processed 29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F.xml in 5.11s
2025-07-11 16:38:54,338 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 29E5CB35-0ED4-4048-8BBC-EAB4381BAD9F.xml to data/processed
2025-07-11 16:38:54,338 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:38:54,338 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml (12/64)
2025-07-11 16:38:54,338 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:38:54,343 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml
2025-07-11 16:38:54,344 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml
2025-07-11 16:38:54,355 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:38:54,356 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094
2025-07-11 16:38:54,359 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:54,361 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:54,371 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 22.7s ago] ('3A48C4FF-A722-43F2-BD4D-E40CB9B5A094', 1, 0)
2025-07-11 16:38:54,374 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094 already exists (ID: 71)
2025-07-11 16:38:54,375 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml
2025-07-11 16:38:54,377 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml
2025-07-11 16:38:54,378 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-15 00:00:00
2025-07-11 16:38:54,381 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1063.76
2025-07-11 16:38:54,385 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:54,389 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:38:54,389 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094
2025-07-11 16:38:54,391 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml
2025-07-11 16:38:54,392 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-15 09:32:37
2025-07-11 16:38:54,394 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:38:54,395 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 1063.76
2025-07-11 16:38:54,397 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:38:54,404 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:54,406 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:54,407 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 19.85s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml', '{"filename": "3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml", "processing_time": 0.0589594841003418, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094 already exists"}', 0.0589594841003418, None, '3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml', None, '2025-07-11 23:38:54.406373')
2025-07-11 16:38:54,418 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:54,428 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml - moved to failed directory
2025-07-11 16:38:54,439 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 3A48C4FF-A722-43F2-BD4D-E40CB9B5A094.xml to data/failed
2025-07-11 16:38:54,440 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:38:54,441 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 3ebd98ec-8de5-4819-b99c-937517d20a65.xml (13/64)
2025-07-11 16:38:54,442 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:38:54,443 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 3ebd98ec-8de5-4819-b99c-937517d20a65.xml
2025-07-11 16:38:54,445 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 3ebd98ec-8de5-4819-b99c-937517d20a65.xml
2025-07-11 16:38:54,456 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:38:54,457 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 3ebd98ec-8de5-4819-b99c-937517d20a65
2025-07-11 16:38:54,459 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:54,460 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:54,470 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 22.8s ago] ('3ebd98ec-8de5-4819-b99c-937517d20a65', 1, 0)
2025-07-11 16:38:54,472 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 3ebd98ec-8de5-4819-b99c-937517d20a65 already exists (ID: 72)
2025-07-11 16:38:54,474 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 3ebd98ec-8de5-4819-b99c-937517d20a65.xml
2025-07-11 16:38:54,475 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 3ebd98ec-8de5-4819-b99c-937517d20a65.xml
2025-07-11 16:38:54,476 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-05 00:00:00
2025-07-11 16:38:54,478 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $12823.79
2025-07-11 16:38:54,480 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:54,480 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:38:54,483 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 3ebd98ec-8de5-4819-b99c-937517d20a65
2025-07-11 16:38:54,483 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 3ebd98ec-8de5-4819-b99c-937517d20a65.xml
2025-07-11 16:38:54,483 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-05 18:24:34
2025-07-11 16:38:54,483 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: ABASTECEDORA DE ALIMENTOS Y EMBUTIDOS VALLE HERMANOS
2025-07-11 16:38:54,483 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 12823.79
2025-07-11 16:38:54,492 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:38:54,496 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:54,502 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:54,505 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 19.95s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 3ebd98ec-8de5-4819-b99c-937517d20a65.xml', '{"filename": "3ebd98ec-8de5-4819-b99c-937517d20a65.xml", "processing_time": 0.050841569900512695, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 3ebd98ec-8de5-4819-b99c-937517d20a65 already exists"}', 0.050841569900512695, None, '3ebd98ec-8de5-4819-b99c-937517d20a65.xml', None, '2025-07-11 23:38:54.502442')
2025-07-11 16:38:54,518 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:54,526 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 3ebd98ec-8de5-4819-b99c-937517d20a65.xml - moved to failed directory
2025-07-11 16:38:54,530 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 3ebd98ec-8de5-4819-b99c-937517d20a65.xml to data/failed
2025-07-11 16:38:54,535 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:38:54,538 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 43D121F7-A23C-4372-B699-BC85F4418808.xml (14/64)
2025-07-11 16:38:54,538 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:38:54,540 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 43D121F7-A23C-4372-B699-BC85F4418808.xml
2025-07-11 16:38:54,541 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 43D121F7-A23C-4372-B699-BC85F4418808.xml
2025-07-11 16:38:54,547 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:38:54,551 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 43D121F7-A23C-4372-B699-BC85F4418808
2025-07-11 16:38:54,554 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:54,556 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:54,560 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 22.89s ago] ('43D121F7-A23C-4372-B699-BC85F4418808', 1, 0)
2025-07-11 16:38:54,568 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 43D121F7-A23C-4372-B699-BC85F4418808 already exists (ID: 73)
2025-07-11 16:38:54,570 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 43D121F7-A23C-4372-B699-BC85F4418808.xml
2025-07-11 16:38:54,571 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 43D121F7-A23C-4372-B699-BC85F4418808.xml
2025-07-11 16:38:54,571 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 00:00:00
2025-07-11 16:38:54,573 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $425.42
2025-07-11 16:38:54,574 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:54,576 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:38:54,579 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 43D121F7-A23C-4372-B699-BC85F4418808
2025-07-11 16:38:54,581 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 43D121F7-A23C-4372-B699-BC85F4418808.xml
2025-07-11 16:38:54,587 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 12:55:56
2025-07-11 16:38:54,587 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: MUNICIPIO DE LA PAZ BCS
2025-07-11 16:38:54,588 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 425.42
2025-07-11 16:38:54,589 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:38:54,590 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:54,593 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:54,594 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.04s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 43D121F7-A23C-4372-B699-BC85F4418808.xml', '{"filename": "43D121F7-A23C-4372-B699-BC85F4418808.xml", "processing_time": 0.049807071685791016, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 43D121F7-A23C-4372-B699-BC85F4418808 already exists"}', 0.049807071685791016, None, '43D121F7-A23C-4372-B699-BC85F4418808.xml', None, '2025-07-11 23:38:54.592802')
2025-07-11 16:38:54,606 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:54,619 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 43D121F7-A23C-4372-B699-BC85F4418808.xml - moved to failed directory
2025-07-11 16:38:54,622 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 43D121F7-A23C-4372-B699-BC85F4418808.xml to data/failed
2025-07-11 16:38:54,624 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:38:54,626 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 4762B641-AE3D-441F-B47D-9B9D2C511469.xml (15/64)
2025-07-11 16:38:54,627 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:38:54,630 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 4762B641-AE3D-441F-B47D-9B9D2C511469.xml
2025-07-11 16:38:54,635 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 4762B641-AE3D-441F-B47D-9B9D2C511469.xml
2025-07-11 16:38:54,641 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:38:54,643 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 4762B641-AE3D-441F-B47D-9B9D2C511469
2025-07-11 16:38:54,645 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:54,650 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:54,655 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 22.99s ago] ('4762B641-AE3D-441F-B47D-9B9D2C511469', 1, 0)
2025-07-11 16:38:54,658 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 4762B641-AE3D-441F-B47D-9B9D2C511469 already exists (ID: 74)
2025-07-11 16:38:54,659 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 4762B641-AE3D-441F-B47D-9B9D2C511469.xml
2025-07-11 16:38:54,661 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 4762B641-AE3D-441F-B47D-9B9D2C511469.xml
2025-07-11 16:38:54,664 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-11 16:38:54,669 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $352.00
2025-07-11 16:38:54,670 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:54,672 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:38:54,673 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 4762B641-AE3D-441F-B47D-9B9D2C511469
2025-07-11 16:38:54,674 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 4762B641-AE3D-441F-B47D-9B9D2C511469.xml
2025-07-11 16:38:54,676 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 09:41:23
2025-07-11 16:38:54,677 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: EXPINS
2025-07-11 16:38:54,678 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 352.00
2025-07-11 16:38:54,680 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:38:54,685 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:54,687 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:54,689 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.13s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 4762B641-AE3D-441F-B47D-9B9D2C511469.xml', '{"filename": "4762B641-AE3D-441F-B47D-9B9D2C511469.xml", "processing_time": 0.05356025695800781, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 4762B641-AE3D-441F-B47D-9B9D2C511469 already exists"}', 0.05356025695800781, None, '4762B641-AE3D-441F-B47D-9B9D2C511469.xml', None, '2025-07-11 23:38:54.687262')
2025-07-11 16:38:54,701 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:54,709 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 4762B641-AE3D-441F-B47D-9B9D2C511469.xml - moved to failed directory
2025-07-11 16:38:54,713 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 4762B641-AE3D-441F-B47D-9B9D2C511469.xml to data/failed
2025-07-11 16:38:54,721 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:38:54,722 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml (16/64)
2025-07-11 16:38:54,723 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:38:54,724 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml
2025-07-11 16:38:54,726 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml
2025-07-11 16:38:54,739 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:38:54,740 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E
2025-07-11 16:38:54,744 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:54,748 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:54,757 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 23.09s ago] ('4CEFDCD9-42AD-4198-B832-C5A8BA6D015E', 1, 0)
2025-07-11 16:38:54,760 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E already exists (ID: 75)
2025-07-11 16:38:54,761 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml
2025-07-11 16:38:54,763 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml
2025-07-11 16:38:54,768 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-17 00:00:00
2025-07-11 16:38:54,771 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2269.74
2025-07-11 16:38:54,772 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:54,773 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:38:54,775 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E
2025-07-11 16:38:54,777 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml
2025-07-11 16:38:54,778 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-17 09:07:30
2025-07-11 16:38:54,781 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:38:54,786 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 2269.74
2025-07-11 16:38:54,788 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:38:54,790 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:54,793 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:54,795 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.24s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml', '{"filename": "4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml", "processing_time": 0.06543135643005371, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E already exists"}', 0.06543135643005371, None, '4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml', None, '2025-07-11 23:38:54.793272')
2025-07-11 16:38:54,810 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:54,821 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml - moved to failed directory
2025-07-11 16:38:54,825 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 4CEFDCD9-42AD-4198-B832-C5A8BA6D015E.xml to data/failed
2025-07-11 16:38:54,827 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:38:54,830 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml (17/64)
2025-07-11 16:38:54,836 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:38:54,839 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml
2025-07-11 16:38:54,840 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml
2025-07-11 16:38:54,846 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:38:54,850 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 4EEFF328-88DF-4A82-94DF-9B9D2C51388C
2025-07-11 16:38:54,854 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:54,855 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:54,860 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 23.19s ago] ('4EEFF328-88DF-4A82-94DF-9B9D2C51388C', 1, 0)
2025-07-11 16:38:54,869 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 4EEFF328-88DF-4A82-94DF-9B9D2C51388C already exists (ID: 76)
2025-07-11 16:38:54,870 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml
2025-07-11 16:38:54,871 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml
2025-07-11 16:38:54,873 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-11 16:38:54,874 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $132.00
2025-07-11 16:38:54,875 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:54,879 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:38:54,881 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 4EEFF328-88DF-4A82-94DF-9B9D2C51388C
2025-07-11 16:38:54,889 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml
2025-07-11 16:38:54,891 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 09:50:40
2025-07-11 16:38:54,893 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: EXPINS
2025-07-11 16:38:54,895 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 132.00
2025-07-11 16:38:54,897 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:38:54,903 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:54,905 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:54,907 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.35s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml', '{"filename": "4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml", "processing_time": 0.06241583824157715, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 4EEFF328-88DF-4A82-94DF-9B9D2C51388C already exists"}', 0.06241583824157715, None, '4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml', None, '2025-07-11 23:38:54.904770')
2025-07-11 16:38:54,918 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:54,926 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml - moved to failed directory
2025-07-11 16:38:54,933 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 4EEFF328-88DF-4A82-94DF-9B9D2C51388C.xml to data/failed
2025-07-11 16:38:54,935 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:38:54,937 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 5781EBC3-DD03-4D60-95E8-50385F252164.xml (18/64)
2025-07-11 16:38:54,939 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:38:54,940 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 5781EBC3-DD03-4D60-95E8-50385F252164.xml
2025-07-11 16:38:54,941 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 5781EBC3-DD03-4D60-95E8-50385F252164.xml
2025-07-11 16:38:54,951 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:38:54,955 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 5781EBC3-DD03-4D60-95E8-50385F252164
2025-07-11 16:38:54,956 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:54,959 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:54,966 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 23.3s ago] ('5781EBC3-DD03-4D60-95E8-50385F252164', 1, 0)
2025-07-11 16:38:54,970 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 5781EBC3-DD03-4D60-95E8-50385F252164 already exists (ID: 77)
2025-07-11 16:38:54,971 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 5781EBC3-DD03-4D60-95E8-50385F252164.xml
2025-07-11 16:38:54,973 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 5781EBC3-DD03-4D60-95E8-50385F252164.xml
2025-07-11 16:38:54,974 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-11 16:38:54,975 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2675.36
2025-07-11 16:38:54,977 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:54,982 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:38:54,986 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 5781EBC3-DD03-4D60-95E8-50385F252164
2025-07-11 16:38:54,987 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 5781EBC3-DD03-4D60-95E8-50385F252164.xml
2025-07-11 16:38:54,988 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 11:11:05
2025-07-11 16:38:54,989 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:38:54,990 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 2675.36
2025-07-11 16:38:54,991 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:38:54,994 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:54,999 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:38:55,003 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 20.45s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 5781EBC3-DD03-4D60-95E8-50385F252164.xml', '{"filename": "5781EBC3-DD03-4D60-95E8-50385F252164.xml", "processing_time": 0.05317997932434082, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 5781EBC3-DD03-4D60-95E8-50385F252164 already exists"}', 0.05317997932434082, None, '5781EBC3-DD03-4D60-95E8-50385F252164.xml', None, '2025-07-11 23:38:54.998325')
2025-07-11 16:38:55,013 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:55,024 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 5781EBC3-DD03-4D60-95E8-50385F252164.xml - moved to failed directory
2025-07-11 16:38:55,028 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 5781EBC3-DD03-4D60-95E8-50385F252164.xml to data/failed
2025-07-11 16:38:55,032 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:38:55,038 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6.xml (19/64)
2025-07-11 16:38:55,039 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:38:55,040 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6.xml
2025-07-11 16:38:55,041 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6.xml
2025-07-11 16:38:55,052 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:38:55,054 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6
2025-07-11 16:38:55,056 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:55,057 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:55,063 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 23.39s ago] ('5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6', 1, 0)
2025-07-11 16:38:55,071 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:55,072 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 17 items
2025-07-11 16:38:55,074 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:55,075 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:55,081 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 23.39s ago] ('sku_f355fb89_50403800_ajo', 1, 0)
2025-07-11 16:38:55,087 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_f355fb89_50403800_ajo -> Vegetales
2025-07-11 16:38:55,089 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:38:55,090 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 23.38s ago] (5, '2025-07-11 23:38:55.087258', 149)
2025-07-11 16:38:55,100 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:55,111 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:55,117 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:55,120 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 23.43s ago] ('sku_15acbdb3_50404125_tomillo', 1, 0)
2025-07-11 16:38:55,123 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:55,125 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_15acbdb3_50404125_tomillo
2025-07-11 16:38:56,434 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Frutas
2025-07-11 16:38:56,435 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Frutas (units_per_package: 1.0)
2025-07-11 16:38:56,441 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:56,446 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:56,453 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.76s ago] ('sku_00d189e9_50193105_panco', 1, 0)
2025-07-11 16:38:56,458 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_00d189e9_50193105_panco -> Abarrotes
2025-07-11 16:38:56,460 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:38:56,465 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.76s ago] (4, '2025-07-11 23:38:56.458222', 40)
2025-07-11 16:38:56,476 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:56,488 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:56,490 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:56,500 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.81s ago] ('sku_6a2cfbaf_50131612_huevo_cartera_con_30pz', 1, 0)
2025-07-11 16:38:56,505 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_6a2cfbaf_50131612_huevo_cartera_con_30pz -> Abarrotes
2025-07-11 16:38:56,506 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:38:56,509 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.8s ago] (4, '2025-07-11 23:38:56.505393', 32)
2025-07-11 16:38:56,517 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:56,527 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_09573e71_50417006_arugula
2025-07-11 16:38:56,533 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_bd6f7e4b_50112010_pierna_de_pollo
2025-07-11 16:38:56,537 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg
2025-07-11 16:38:56,543 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_c1ceb28c_50221002_harina_selecta
2025-07-11 16:38:56,547 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:56,551 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:56,558 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.87s ago] ('sku_547ba3ea_50171551_sal_la_fina', 1, 0)
2025-07-11 16:38:56,560 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:56,564 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_547ba3ea_50171551_sal_la_fina
2025-07-11 16:38:58,114 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Condimentos
2025-07-11 16:38:58,115 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Condimentos (units_per_package: 1.0)
2025-07-11 16:38:58,116 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_bd6f7e4b_50112010_pierna_de_pollo
2025-07-11 16:38:58,117 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:58,119 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:58,121 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 26.43s ago] ('sku_01526d33_50131700_leche_nido', 1, 0)
2025-07-11 16:38:58,122 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:58,123 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_01526d33_50131700_leche_nido
2025-07-11 16:38:59,624 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Leche
2025-07-11 16:38:59,625 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Leche (units_per_package: 1.0)
2025-07-11 16:38:59,632 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_9a57e1c2_50304100_limon_sin_semilla
2025-07-11 16:38:59,634 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_141a86f5_10161506_naranja
2025-07-11 16:38:59,636 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_306c40c7_50303300_toronja
2025-07-11 16:38:59,639 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:38:59,641 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:38:59,648 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 27.96s ago] ('sku_b402f8e2_50307503_pulpa_de_maracuya_grande', 1, 0)
2025-07-11 16:38:59,650 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:38:59,651 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_b402f8e2_50307503_pulpa_de_maracuya_grande
2025-07-11 16:39:01,387 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Pulpa
2025-07-11 16:39:01,388 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Pulpa (units_per_package: 1.0)
2025-07-11 16:39:01,393 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg
2025-07-11 16:39:01,397 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:01,399 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:01,400 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 29.71s ago] ('sku_af6719ab_50201706_café_baja_sur', 1, 0)
2025-07-11 16:39:01,401 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:01,403 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_af6719ab_50201706_café_baja_sur
2025-07-11 16:39:03,208 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Café
2025-07-11 16:39:03,210 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Café (units_per_package: 1.0)
2025-07-11 16:39:03,211 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-11 16:39:03,214 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:03,215 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoices (uuid, series, folio, invoice_type, version, issue_date, certification_date, created_at, updated_at, issuer_rfc, issuer_name, issuer_fiscal_regime, issuer_use_cfdi, issuer_residence, issuer_tax_id, receiver_rfc, receiver_name, receiver_fiscal_address, receiver_residence, receiver_tax_id, receiver_use_cfdi, payment_method, payment_method_desc, payment_terms, payment_conditions, currency, exchange_rate, subtotal, total_discount, total_transferred_taxes, total_withheld_taxes, total_amount, digital_stamp, certificate_number, certificate, sat_seal, sat_certificate, fiscal_folio, stamp_datetime, expedition_place, export_operation, confirmation, source_filename, xml_file_size, confidence_score, processing_time, processing_status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:03,216 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 28.83s ago] ('5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6', None, '51668', 'I', '4.0', '2025-07-04 10:07:30.000000', None, '2025-07-11 23:39:03.215714', '2025-07-11 23:39:03.215714', 'PIVV******RR4', 'VANESSA IVON PIÑUELAS VERDUGO', '612', None, None, None, 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', '23300', None, None, None, '03', None, 'PUE', None, 'MXN', 1.0, 1832.62, 0.0, 0.0, 0.0, 1832.62, 'ASzMeChLuU8v4N1dSWSn+wvVbpT3lwdIKN4FZEsw4tErFin3K7/Nsuu7HTsO/vr52GCujBjoZlGBsPMmy8ykIE+5S8j+Y2LqfKpdEmr5vcii0vZE2byMLtwhtIa3RTIGcOI8Eell9z0Z2cgCyVcgf ... (46 characters truncated) ... UyFgG+v6PI7IdmYpw3yjTuetZ5ALH/5691EMjtL4qr7cE3dWBuQp+xSJd21u7zRMMeIRIEmJWdBfaco1weMyjfkAptP9KEwv8yVIHyFaS/GhKucVnLJpF0r5yrqGM7REtYXJyBwTFG/i4f0pPOw==', '00001000000705018977', None, 'OJtSYEXSKyMnx7zPRPex/E2aNC1HUtu+r2rluJePZ6OZE4cppEMqCXtgu0HJdR0xa9VDr+atfUYc/ZCJRlxkYXb8JkL1g26hrvHsoH8oIiCRj1XkVBKFo2/V9pL1Kzte8kHumMOEBvrCNvQxr25z8 ... (46 characters truncated) ... CM7YGDQqdKyideXmwT30PXPORGSnghBJQC0usGAJG/NhOUcG/Km81Hg2f9jvCulDUaztShYgOiu+YzTmEAK4n65nYvqkjZm3Fp/jXa/gYtyvXpsqjnQ5ofGnIas8Ivtlbh7d+idnmP/OuAAOfIA==', None, '5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6', '2025-07-04 11:07:32.000000', None, None, None, '5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6.xml', 11022, None, None, 'processed')
2025-07-11 16:39:03,233 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Saved invoice 5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6 with 17 items (ID: 118)
2025-07-11 16:39:03,234 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE invoices SET confidence_score=?, processing_time=? WHERE invoices.id = ?
2025-07-11 16:39:03,236 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 28.84s ago] (0.9735294117647058, 14.026964902877808, 118)
2025-07-11 16:39:03,245 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:03,247 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 28.84s ago (insertmanyvalues) 1/17 (ordered; batch not supported)] (118, 1, '50403800', None, 'AJO', 1.0, 'KGM', None, 1.0, None, 140.0, 140.0, 0.0, 0.0, 140.0, 'Vegetales', 'Verduras', 'Ajo Blanco', 'Kilogramos', 1.0, 1.0, 1.0, 'approved_sku', 'approved', 'sku_f355fb89_50403800_ajo', '2025-07-11 23:39:03.243147', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:03.243147', '2025-07-11 23:39:03.243147')
2025-07-11 16:39:03,248 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:03,249 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 2/17 (ordered; batch not supported)] (118, 2, '50404125', None, 'TOMILLO', 1.0, 'H87', None, 1.0, None, 8.0, 8.0, 0.0, 0.0, 8.0, 'Vegetales', 'Frutas', 'Tomillo', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_15acbdb3_50404125_tomillo', '2025-07-11 23:39:03.243147', '{"processing_time": 1.307530164718628, "api_attempt": 1, "reasoning": "Tomillo is classified as a fruit within the Vegetales category. The item is sold individually by weight (kilogram).", "error": null}', '2025-07-11 23:39:03.243147', '2025-07-11 23:39:03.243147')
2025-07-11 16:39:03,251 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:03,254 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 3/17 (ordered; batch not supported)] (118, 3, '50193105', None, 'PANCO', 0.98, 'KGM', None, 1.0, None, 95.0, 93.1, 0.0, 0.0, 93.1, 'Abarrotes', 'Otros-a', 'Pan Molido', 'Kilogramos', 0.98, 1.0, 1.0, 'approved_sku', 'approved', 'sku_00d189e9_50193105_panco', '2025-07-11 23:39:03.243147', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:03.243147', '2025-07-11 23:39:03.243147')
2025-07-11 16:39:03,260 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:03,263 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 4/17 (ordered; batch not supported)] (118, 4, '50131612', None, 'HUEVO CARTERA CON 30PZ', 1.0, 'H87', None, 30.0, None, 100.0, 100.0, 0.0, 0.0, 100.0, 'Abarrotes', 'Huevos', 'Huevos', 'Piezas', 30.0, 30.0, 1.0, 'approved_sku', 'approved', 'sku_6a2cfbaf_50131612_huevo_cartera_con_30pz', '2025-07-11 23:39:03.243147', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:03.243147', '2025-07-11 23:39:03.243147')
2025-07-11 16:39:03,265 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:03,266 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 5/17 (ordered; batch not supported)] (118, 5, '50417006', None, 'ARUGULA', 2.0, 'H87', None, 1.0, None, 55.0, 110.0, 0.0, 0.0, 110.0, 'Vegetales', 'Verduras', 'Arugula', 'Kilogramos', 2.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_09573e71_50417006_arugula', '2025-07-11 23:39:03.243147', '{"processing_time": 1.4267644882202148, "api_attempt": 1, "reasoning": "Arugula is a vegetable, specifically a leafy green. The item is sold by weight (kilograms), and there is no indication of a package containing multiple units, so units_per_package is 1.", "error": null}', '2025-07-11 23:39:03.243147', '2025-07-11 23:39:03.243147')
2025-07-11 16:39:03,268 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:03,272 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 6/17 (ordered; batch not supported)] (118, 6, '50112010', None, 'PIERNA DE POLLO', 2.48, 'KGM', None, 1.0, None, 48.0, 119.04, 0.0, 0.0, 119.04, 'Proteinas', 'Pollo', 'Pierna', 'Kilogramos', 2.48, 1.0, 1.0, 'approved_sku', 'approved', 'sku_bd6f7e4b_50112010_pierna_de_pollo', '2025-07-11 23:39:03.243147', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:03.243147', '2025-07-11 23:39:03.243147')
2025-07-11 16:39:03,278 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:03,281 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 7/17 (ordered; batch not supported)] (118, 7, '50202302', None, 'HIELO BOLSA DE HIELO 5KG', 1.0, 'H87', None, 1.0, 'Bolsa', 33.0, 33.0, 0.0, 0.0, 33.0, 'Abarrotes', 'Otros-a', 'Otros', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg', '2025-07-11 23:39:03.243147', '{"processing_time": 1.5589585304260254, "api_attempt": 1, "reasoning": "Ice is not explicitly listed, so it falls under \'Otros\' in Abarrotes. The item is sold in a 5KG bag, but the units are per item, so units_per_package is 1.", "error": null}', '2025-07-11 23:39:03.243147', '2025-07-11 23:39:03.243147')
2025-07-11 16:39:03,283 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:03,285 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 8/17 (ordered; batch not supported)] (118, 8, '50221002', None, 'HARINA SELECTA', 2.0, 'H87', None, 1.0, None, 25.0, 50.0, 0.0, 0.0, 50.0, 'Abarrotes', 'Harinas', 'Harina de trigo', 'Kilogramos', 2.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_c1ceb28c_50221002_harina_selecta', '2025-07-11 23:39:03.243147', '{"processing_time": 1.5936708450317383, "api_attempt": 1, "reasoning": "\\"HARINA SELECTA\\" is classified as \\"Harina de trigo\\" under the \\"Hari ... (54 characters truncated) ... d unit is Kilogramos, and since the description doesn\'t specify a package size, it\'s assumed to be sold individually per kilogram.", "error": null}', '2025-07-11 23:39:03.243147', '2025-07-11 23:39:03.243147')
2025-07-11 16:39:03,292 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:03,295 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 9/17 (ordered; batch not supported)] (118, 9, '50171551', None, 'SAL LA FINA', 3.0, 'H87', None, 1.0, None, 30.0, 90.0, 0.0, 0.0, 90.0, 'Abarrotes', 'Condimentos', 'Sal', 'Kilogramos', 3.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_547ba3ea_50171551_sal_la_fina', '2025-07-11 23:39:03.243147', '{"processing_time": 1.5457713603973389, "api_attempt": 1, "reasoning": "\\"SAL LA FINA\\" is classified as salt, a condiment. Since it\'s salt, the standardized unit is Kilogramos. There is no package information in the description, so units_per_package defaults to 1.", "error": null}', '2025-07-11 23:39:03.243147', '2025-07-11 23:39:03.243147')
2025-07-11 16:39:03,297 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:03,299 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 10/17 (ordered; batch not supported)] (118, 10, '50112010', None, 'PIERNA DE POLLO', 1.84, 'KGM', None, 1.0, None, 48.0, 88.32, 0.0, 0.0, 88.32, 'Proteinas', 'Pollo', 'Pierna', 'Kilogramos', 1.84, 1.0, 1.0, 'approved_sku', 'approved', 'sku_bd6f7e4b_50112010_pierna_de_pollo', '2025-07-11 23:39:03.243147', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:03.243147', '2025-07-11 23:39:03.243147')
2025-07-11 16:39:03,301 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:03,302 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 11/17 (ordered; batch not supported)] (118, 11, '50131700', None, 'LECHE NIDO', 1.0, 'H87', None, 1.0, None, 112.0, 112.0, 0.0, 0.0, 112.0, 'Lacteos', 'Leche', 'Leche en Polvo', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_01526d33_50131700_leche_nido', '2025-07-11 23:39:03.243147', '{"processing_time": 1.4976770877838135, "api_attempt": 1, "reasoning": "\\"LECHE NIDO\\" is classified as powdered milk. The quantity is 1 and the unit is H87, which is not relevant for determining the units per package. Assuming it\'s a standard package, units_per_package is 1.", "error": null}', '2025-07-11 23:39:03.243147', '2025-07-11 23:39:03.243147')
2025-07-11 16:39:03,309 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:03,311 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 12/17 (ordered; batch not supported)] (118, 12, '50304100', None, 'LIMON SIN SEMILLA', 2.3, 'KGM', None, 1.0, None, 35.0, 80.5, 0.0, 0.0, 80.5, 'Vegetales', 'Frutas', 'Limon Sin Semilla', 'Kilogramos', 2.3, 1.0, 1.0, 'approved_sku', 'approved', 'sku_9a57e1c2_50304100_limon_sin_semilla', '2025-07-11 23:39:03.243147', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:03.243147', '2025-07-11 23:39:03.243147')
2025-07-11 16:39:03,314 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:03,315 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 13/17 (ordered; batch not supported)] (118, 13, '10161506', None, 'NARANJA', 2.2, 'KGM', None, 1.0, None, 32.0, 70.4, 0.0, 0.0, 70.4, 'Vegetales', 'Frutas', 'Naranja', 'Kilogramos', 2.2, 1.0, 1.0, 'approved_sku', 'approved', 'sku_141a86f5_10161506_naranja', '2025-07-11 23:39:03.243147', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:03.243147', '2025-07-11 23:39:03.243147')
2025-07-11 16:39:03,317 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:03,319 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 14/17 (ordered; batch not supported)] (118, 14, '50303300', None, 'TORONJA', 2.22, 'KGM', None, 1.0, None, 33.0, 73.26, 0.0, 0.0, 73.26, 'Vegetales', 'Frutas', 'Toronja', 'Kilogramos', 2.22, 1.0, 1.0, 'approved_sku', 'approved', 'sku_306c40c7_50303300_toronja', '2025-07-11 23:39:03.243147', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:03.243147', '2025-07-11 23:39:03.243147')
2025-07-11 16:39:03,325 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:03,328 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 15/17 (ordered; batch not supported)] (118, 15, '50307503', None, 'PULPA DE MARACUYA GRANDE', 1.0, 'H87', None, 1.0, None, 550.0, 550.0, 0.0, 0.0, 550.0, 'Abarrotes', 'Pulpa', 'Maracuya', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_b402f8e2_50307503_pulpa_de_maracuya_grande', '2025-07-11 23:39:03.243147', '{"processing_time": 1.7337884902954102, "api_attempt": 1, "reasoning": "The item is described as \'PULPA DE MARACUYA GRANDE\', which falls under the  ... (75 characters truncated) ... ry is \'Maracuya\'. Since it\'s pulpa, it\'s measured by weight, hence \'Kilogramos\'. The quantity is 1, so units_per_package is 1.", "error": null}', '2025-07-11 23:39:03.243147', '2025-07-11 23:39:03.243147')
2025-07-11 16:39:03,332 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:03,333 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 16/17 (ordered; batch not supported)] (118, 16, '50202302', None, 'HIELO BOLSA DE HIELO 5KG', 1.0, 'H87', None, 1.0, 'Bolsa', 33.0, 33.0, 0.0, 0.0, 33.0, 'Abarrotes', 'Otros-a', 'Otros', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg', '2025-07-11 23:39:03.243147', '{"processing_time": 1.5589585304260254, "api_attempt": 1, "reasoning": "Ice is not explicitly listed, so it falls under \'Otros\' in Abarrotes. The item is sold in a 5KG bag, but the units are per item, so units_per_package is 1.", "error": null}', '2025-07-11 23:39:03.243147', '2025-07-11 23:39:03.243147')
2025-07-11 16:39:03,335 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:03,336 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 17/17 (ordered; batch not supported)] (118, 17, '50201706', None, 'CAFÉ BAJA SUR', 1.0, 'H87', None, 1.0, None, 82.0, 82.0, 0.0, 0.0, 82.0, 'Abarrotes', 'Café', 'Café molido', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_af6719ab_50201706_café_baja_sur', '2025-07-11 23:39:03.243147', '{"processing_time": 1.8038454055786133, "api_attempt": 1, "reasoning": "The item is described as \'CAF\\u00c9 BAJA SUR\', which falls under the \'Caf ... (49 characters truncated) ... 00e9 molido\'. The quantity is 1 and no package information is provided, so units_per_package is 1. Standardized unit is Kilogramos.", "error": null}', '2025-07-11 23:39:03.243147', '2025-07-11 23:39:03.243147')
2025-07-11 16:39:03,344 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:03,366 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [METADATA] Creating business metadata
2025-07-11 16:39:03,367 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Created metadata for invoice ID 118
2025-07-11 16:39:03,369 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:03,372 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_metadata (invoice_id, uuid, folio, issue_date, issuer_rfc, issuer_name, receiver_rfc, receiver_name, original_currency, original_total, exchange_rate, mxn_total, payment_method, payment_terms, is_installments, is_immediate, total_items, total_categories, avg_confidence, processing_status, has_errors, error_count, is_export, has_digital_stamp, is_certified, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:03,376 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 28.9s ago] (118, '5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6', '51668', '2025-07-04', 'PIVV******RR4', 'VANESSA IVON PIÑUELAS VERDUGO', 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', 'MXN', 1832.62, 1.0, 1832.62, '03', 'PUE', 0, 1, 17, 4, 0.9735294117647058, 'completed', 0, 0, 0, 1, 1, '2025-07-11 23:39:03.371221', '2025-07-11 23:39:03.371221')
2025-07-11 16:39:03,382 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:03,392 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Saving to purchase_details table
2025-07-11 16:39:03,396 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:03,398 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.id = ?
2025-07-11 16:39:03,401 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 28.9s ago] (118,)
2025-07-11 16:39:03,403 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoice_metadata.id AS invoice_metadata_id, invoice_metadata.invoice_id AS invoice_metadata_invoice_id, invoice_metadata.uuid AS invoice_metadata_uuid, invoice_metadata.folio AS invoice_metadata_folio, invoice_metadata.issue_date AS invoice_metadata_issue_date, invoice_metadata.issuer_rfc AS invoice_metadata_issuer_rfc, invoice_metadata.issuer_name AS invoice_metadata_issuer_name, invoice_metadata.receiver_rfc AS invoice_metadata_receiver_rfc, invoice_metadata.receiver_name AS invoice_metadata_receiver_name, invoice_metadata.original_currency AS invoice_metadata_original_currency, invoice_metadata.original_total AS invoice_metadata_original_total, invoice_metadata.exchange_rate AS invoice_metadata_exchange_rate, invoice_metadata.mxn_total AS invoice_metadata_mxn_total, invoice_metadata.payment_method AS invoice_metadata_payment_method, invoice_metadata.payment_terms AS invoice_metadata_payment_terms, invoice_metadata.is_installments AS invoice_metadata_is_installments, invoice_metadata.is_immediate AS invoice_metadata_is_immediate, invoice_metadata.total_items AS invoice_metadata_total_items, invoice_metadata.total_categories AS invoice_metadata_total_categories, invoice_metadata.avg_confidence AS invoice_metadata_avg_confidence, invoice_metadata.processing_status AS invoice_metadata_processing_status, invoice_metadata.has_errors AS invoice_metadata_has_errors, invoice_metadata.error_count AS invoice_metadata_error_count, invoice_metadata.is_export AS invoice_metadata_is_export, invoice_metadata.has_digital_stamp AS invoice_metadata_has_digital_stamp, invoice_metadata.is_certified AS invoice_metadata_is_certified, invoice_metadata.created_at AS invoice_metadata_created_at, invoice_metadata.updated_at AS invoice_metadata_updated_at 
FROM invoice_metadata 
WHERE invoice_metadata.invoice_id = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:03,411 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 28.88s ago] (118, 1, 0)
2025-07-11 16:39:03,416 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - ROLLBACK
2025-07-11 16:39:03,418 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 37 values for 38 columns
2025-07-11 16:39:03,420 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Failed to save to purchase_details table: 37 values for 38 columns
2025-07-11 16:39:03,425 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:03,428 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:03,430 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 28.87s ago] (118, 'INFO', 'batch_processor', 'process_file', 'Successfully processed 5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6.xml', '{"filename": "5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6.xml", "processing_time": 8.383012533187866, "item_count": 17, "success": true, "gemini_calls": 9, "approved_skus": 8, "avg_confidence": 0.9735294117647058}', 8.383012533187866, None, '5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6.xml', None, '2025-07-11 23:39:03.427866')
2025-07-11 16:39:03,435 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:03,445 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SUCCESS] Processed 5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6.xml in 8.38s
2025-07-11 16:39:03,448 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 5A6AB4C5-995F-46F3-B7D7-BED6C80AEFD6.xml to data/processed
2025-07-11 16:39:03,448 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:03,449 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml (20/64)
2025-07-11 16:39:03,450 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:03,450 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml
2025-07-11 16:39:03,453 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml
2025-07-11 16:39:03,461 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:03,463 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 5E185CBB-53B4-497B-96E4-6BC7FF4F2129
2025-07-11 16:39:03,464 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:03,466 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:03,469 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 31.8s ago] ('5E185CBB-53B4-497B-96E4-6BC7FF4F2129', 1, 0)
2025-07-11 16:39:03,475 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 5E185CBB-53B4-497B-96E4-6BC7FF4F2129 already exists (ID: 78)
2025-07-11 16:39:03,478 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml
2025-07-11 16:39:03,479 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml
2025-07-11 16:39:03,479 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-16 00:00:00
2025-07-11 16:39:03,481 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1514.66
2025-07-11 16:39:03,482 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:03,483 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:03,484 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 5E185CBB-53B4-497B-96E4-6BC7FF4F2129
2025-07-11 16:39:03,485 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml
2025-07-11 16:39:03,486 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-16 10:08:19
2025-07-11 16:39:03,487 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:39:03,489 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 1514.66
2025-07-11 16:39:03,493 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:03,497 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:03,498 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:03,500 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 28.94s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml', '{"filename": "5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml", "processing_time": 0.04491829872131348, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 5E185CBB-53B4-497B-96E4-6BC7FF4F2129 already exists"}', 0.04491829872131348, None, '5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml', None, '2025-07-11 23:39:03.498614')
2025-07-11 16:39:03,510 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:03,519 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml - moved to failed directory
2025-07-11 16:39:03,527 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 5E185CBB-53B4-497B-96E4-6BC7FF4F2129.xml to data/failed
2025-07-11 16:39:03,530 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:03,531 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml (21/64)
2025-07-11 16:39:03,531 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:03,532 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml
2025-07-11 16:39:03,533 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml
2025-07-11 16:39:03,536 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:03,539 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9
2025-07-11 16:39:03,544 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:03,546 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:03,549 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 31.88s ago] ('61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9', 1, 0)
2025-07-11 16:39:03,550 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9 already exists (ID: 79)
2025-07-11 16:39:03,551 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml
2025-07-11 16:39:03,553 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml
2025-07-11 16:39:03,556 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-10 00:00:00
2025-07-11 16:39:03,559 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $0.01
2025-07-11 16:39:03,561 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:03,563 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:03,564 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9
2025-07-11 16:39:03,565 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml
2025-07-11 16:39:03,565 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-10 06:33:01
2025-07-11 16:39:03,566 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: BANCO MERCANTIL DEL NORTE SA INSTITUCION DE BANCA MULTIPLE GRUPO FINANCIERO BANORTE
2025-07-11 16:39:03,568 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 0.01
2025-07-11 16:39:03,569 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:03,571 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:03,578 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:03,580 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 29.02s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml', '{"filename": "61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml", "processing_time": 0.037691593170166016, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9 already exists"}', 0.037691593170166016, None, '61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml', None, '2025-07-11 23:39:03.578176')
2025-07-11 16:39:03,590 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:03,599 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml - moved to failed directory
2025-07-11 16:39:03,604 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 61CDB797-84D2-4E0B-ADC7-E7E0C2E9D8E9.xml to data/failed
2025-07-11 16:39:03,607 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:03,611 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml (22/64)
2025-07-11 16:39:03,612 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:03,614 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml
2025-07-11 16:39:03,616 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml
2025-07-11 16:39:03,621 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:03,626 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 661EF9D7-AE9A-4A51-8E90-46EA6966E209
2025-07-11 16:39:03,630 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:03,631 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:03,634 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 31.96s ago] ('661EF9D7-AE9A-4A51-8E90-46EA6966E209', 1, 0)
2025-07-11 16:39:03,636 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 661EF9D7-AE9A-4A51-8E90-46EA6966E209 already exists (ID: 80)
2025-07-11 16:39:03,638 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml
2025-07-11 16:39:03,643 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml
2025-07-11 16:39:03,647 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-14 00:00:00
2025-07-11 16:39:03,647 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1576.28
2025-07-11 16:39:03,648 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:03,649 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:03,651 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 661EF9D7-AE9A-4A51-8E90-46EA6966E209
2025-07-11 16:39:03,654 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml
2025-07-11 16:39:03,660 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-14 06:49:02
2025-07-11 16:39:03,664 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:39:03,667 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 1576.28
2025-07-11 16:39:03,668 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:03,671 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:03,678 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:03,681 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 29.12s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml', '{"filename": "661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml", "processing_time": 0.05526900291442871, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 661EF9D7-AE9A-4A51-8E90-46EA6966E209 already exists"}', 0.05526900291442871, None, '661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml', None, '2025-07-11 23:39:03.678461')
2025-07-11 16:39:03,683 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:03,707 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml - moved to failed directory
2025-07-11 16:39:03,714 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 661EF9D7-AE9A-4A51-8E90-46EA6966E209.xml to data/failed
2025-07-11 16:39:03,718 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:03,721 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml (23/64)
2025-07-11 16:39:03,723 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:03,728 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml
2025-07-11 16:39:03,729 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml
2025-07-11 16:39:03,734 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:03,736 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D
2025-07-11 16:39:03,744 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:03,746 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:03,751 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 32.08s ago] ('66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D', 1, 0)
2025-07-11 16:39:03,756 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D already exists (ID: 81)
2025-07-11 16:39:03,760 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml
2025-07-11 16:39:03,761 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml
2025-07-11 16:39:03,765 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-04 00:00:00
2025-07-11 16:39:03,766 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $716.30
2025-07-11 16:39:03,767 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:03,768 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:03,769 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D
2025-07-11 16:39:03,770 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml
2025-07-11 16:39:03,771 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-04 07:51:31
2025-07-11 16:39:03,771 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:39:03,772 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 716.30
2025-07-11 16:39:03,776 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:03,777 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:03,779 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:03,780 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 29.22s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml', '{"filename": "66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml", "processing_time": 0.048905372619628906, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D already exists"}', 0.048905372619628906, None, '66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml', None, '2025-07-11 23:39:03.778037')
2025-07-11 16:39:03,787 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:03,794 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml - moved to failed directory
2025-07-11 16:39:03,796 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 66ECE054-3F15-4A4F-AE0C-8F873BEAAE1D.xml to data/failed
2025-07-11 16:39:03,797 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:03,798 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml (24/64)
2025-07-11 16:39:03,799 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:03,801 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml
2025-07-11 16:39:03,802 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml
2025-07-11 16:39:03,818 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:03,823 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17
2025-07-11 16:39:03,826 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:03,829 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:03,834 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 32.16s ago] ('69190FB4-5FE0-4538-8B2D-FE3D2CD53B17', 1, 0)
2025-07-11 16:39:03,839 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17 already exists (ID: 82)
2025-07-11 16:39:03,846 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml
2025-07-11 16:39:03,848 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml
2025-07-11 16:39:03,850 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-01 00:00:00
2025-07-11 16:39:03,853 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2848.20
2025-07-11 16:39:03,859 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:03,863 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:03,873 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17
2025-07-11 16:39:03,876 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml
2025-07-11 16:39:03,882 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-01 13:47:01
2025-07-11 16:39:03,888 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:39:03,893 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 2848.20
2025-07-11 16:39:03,898 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:03,900 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:03,904 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:03,910 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 29.35s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml', '{"filename": "69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml", "processing_time": 0.09824633598327637, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17 already exists"}', 0.09824633598327637, None, '69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml', None, '2025-07-11 23:39:03.903042')
2025-07-11 16:39:03,928 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:03,943 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml - moved to failed directory
2025-07-11 16:39:03,949 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 69190FB4-5FE0-4538-8B2D-FE3D2CD53B17.xml to data/failed
2025-07-11 16:39:03,951 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:03,952 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml (25/64)
2025-07-11 16:39:03,955 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:03,961 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml
2025-07-11 16:39:03,964 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml
2025-07-11 16:39:03,982 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:03,986 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 6A383059-80B7-4C4A-91B3-E39EE88DA4D4
2025-07-11 16:39:03,991 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:03,994 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:04,000 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 32.33s ago] ('6A383059-80B7-4C4A-91B3-E39EE88DA4D4', 1, 0)
2025-07-11 16:39:04,005 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 6A383059-80B7-4C4A-91B3-E39EE88DA4D4 already exists (ID: 83)
2025-07-11 16:39:04,010 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml
2025-07-11 16:39:04,013 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml
2025-07-11 16:39:04,014 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 00:00:00
2025-07-11 16:39:04,017 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1293.12
2025-07-11 16:39:04,021 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:04,024 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:04,028 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 6A383059-80B7-4C4A-91B3-E39EE88DA4D4
2025-07-11 16:39:04,031 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml
2025-07-11 16:39:04,033 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 09:38:39
2025-07-11 16:39:04,034 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:39:04,037 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 1293.12
2025-07-11 16:39:04,041 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:04,045 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:04,048 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:04,050 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 29.49s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml', '{"filename": "6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml", "processing_time": 0.0826416015625, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 6A383059-80B7-4C4A-91B3-E39EE88DA4D4 already exists"}', 0.0826416015625, None, '6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml', None, '2025-07-11 23:39:04.048708')
2025-07-11 16:39:04,066 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:04,086 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml - moved to failed directory
2025-07-11 16:39:04,095 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 6A383059-80B7-4C4A-91B3-E39EE88DA4D4.xml to data/failed
2025-07-11 16:39:04,098 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:04,099 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml (26/64)
2025-07-11 16:39:04,103 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:04,107 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml
2025-07-11 16:39:04,114 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml
2025-07-11 16:39:04,123 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:04,197 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8
2025-07-11 16:39:04,315 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:04,318 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:04,346 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 32.68s ago] ('6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8', 1, 0)
2025-07-11 16:39:04,548 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8 already exists (ID: 84)
2025-07-11 16:39:04,614 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml
2025-07-11 16:39:04,712 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml
2025-07-11 16:39:04,733 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-10 00:00:00
2025-07-11 16:39:04,751 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1531.10
2025-07-11 16:39:04,764 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:04,767 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:04,769 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8
2025-07-11 16:39:04,779 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml
2025-07-11 16:39:04,803 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-10 07:25:36
2025-07-11 16:39:04,807 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:39:04,812 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 1531.10
2025-07-11 16:39:04,816 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:04,819 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:04,828 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:04,834 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 30.27s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml', '{"filename": "6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml", "processing_time": 0.7107462882995605, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8 already exists"}', 0.7107462882995605, None, '6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml', None, '2025-07-11 23:39:04.828375')
2025-07-11 16:39:04,849 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:04,870 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml - moved to failed directory
2025-07-11 16:39:04,881 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 6A7EFDD7-530A-412D-92EA-16FB1C5EBDF8.xml to data/failed
2025-07-11 16:39:04,883 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:04,894 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml (27/64)
2025-07-11 16:39:04,897 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:04,900 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml
2025-07-11 16:39:04,901 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml
2025-07-11 16:39:04,915 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:04,917 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4
2025-07-11 16:39:04,920 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:04,930 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:04,939 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 33.27s ago] ('6DDAE2B5-A48B-4601-A669-FF4482BAB8E4', 1, 0)
2025-07-11 16:39:04,948 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4 already exists (ID: 85)
2025-07-11 16:39:04,949 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml
2025-07-11 16:39:04,951 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml
2025-07-11 16:39:04,953 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-09 00:00:00
2025-07-11 16:39:04,960 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $305.52
2025-07-11 16:39:04,963 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:04,964 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:04,966 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4
2025-07-11 16:39:04,968 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml
2025-07-11 16:39:05,036 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-09 13:59:25
2025-07-11 16:39:05,050 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:39:05,051 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 305.52
2025-07-11 16:39:05,060 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:05,064 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:05,067 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:05,071 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 30.51s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml', '{"filename": "6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml", "processing_time": 0.16173791885375977, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4 already exists"}', 0.16173791885375977, None, '6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml', None, '2025-07-11 23:39:05.067987')
2025-07-11 16:39:05,089 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:05,098 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml - moved to failed directory
2025-07-11 16:39:05,108 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 6DDAE2B5-A48B-4601-A669-FF4482BAB8E4.xml to data/failed
2025-07-11 16:39:05,113 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:05,114 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 71f0b5d3-962a-4381-8990-cd84c14a3522.xml (28/64)
2025-07-11 16:39:05,116 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:05,118 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 71f0b5d3-962a-4381-8990-cd84c14a3522.xml
2025-07-11 16:39:05,120 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 71f0b5d3-962a-4381-8990-cd84c14a3522.xml
2025-07-11 16:39:05,131 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:05,134 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 71f0b5d3-962a-4381-8990-cd84c14a3522
2025-07-11 16:39:05,139 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:05,143 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:05,150 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 33.48s ago] ('71f0b5d3-962a-4381-8990-cd84c14a3522', 1, 0)
2025-07-11 16:39:05,159 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 71f0b5d3-962a-4381-8990-cd84c14a3522 already exists (ID: 86)
2025-07-11 16:39:05,163 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 71f0b5d3-962a-4381-8990-cd84c14a3522.xml
2025-07-11 16:39:05,164 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 71f0b5d3-962a-4381-8990-cd84c14a3522.xml
2025-07-11 16:39:05,166 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 00:00:00
2025-07-11 16:39:05,168 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $21267.93
2025-07-11 16:39:05,169 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:05,176 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:05,180 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 71f0b5d3-962a-4381-8990-cd84c14a3522
2025-07-11 16:39:05,181 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 71f0b5d3-962a-4381-8990-cd84c14a3522.xml
2025-07-11 16:39:05,183 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 16:38:48
2025-07-11 16:39:05,186 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: ABASTECEDORA DE ALIMENTOS Y EMBUTIDOS VALLE HERMANOS
2025-07-11 16:39:05,188 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 21267.93
2025-07-11 16:39:05,193 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:05,197 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:05,199 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:05,201 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 30.64s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 71f0b5d3-962a-4381-8990-cd84c14a3522.xml', '{"filename": "71f0b5d3-962a-4381-8990-cd84c14a3522.xml", "processing_time": 0.0783989429473877, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 71f0b5d3-962a-4381-8990-cd84c14a3522 already exists"}', 0.0783989429473877, None, '71f0b5d3-962a-4381-8990-cd84c14a3522.xml', None, '2025-07-11 23:39:05.199530')
2025-07-11 16:39:05,210 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:05,221 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 71f0b5d3-962a-4381-8990-cd84c14a3522.xml - moved to failed directory
2025-07-11 16:39:05,231 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 71f0b5d3-962a-4381-8990-cd84c14a3522.xml to data/failed
2025-07-11 16:39:05,236 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:05,253 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 7302660E-1483-43CD-8364-305180BA2531.xml (29/64)
2025-07-11 16:39:05,259 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:05,263 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 7302660E-1483-43CD-8364-305180BA2531.xml
2025-07-11 16:39:05,265 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 7302660E-1483-43CD-8364-305180BA2531.xml
2025-07-11 16:39:05,272 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:05,279 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 7302660E-1483-43CD-8364-305180BA2531
2025-07-11 16:39:05,281 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:05,285 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:05,296 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 33.63s ago] ('7302660E-1483-43CD-8364-305180BA2531', 1, 0)
2025-07-11 16:39:05,299 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 7302660E-1483-43CD-8364-305180BA2531 already exists (ID: 87)
2025-07-11 16:39:05,301 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 7302660E-1483-43CD-8364-305180BA2531.xml
2025-07-11 16:39:05,303 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 7302660E-1483-43CD-8364-305180BA2531.xml
2025-07-11 16:39:05,311 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-06 00:00:00
2025-07-11 16:39:05,314 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1503.80
2025-07-11 16:39:05,315 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:05,318 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:05,319 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 7302660E-1483-43CD-8364-305180BA2531
2025-07-11 16:39:05,322 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 7302660E-1483-43CD-8364-305180BA2531.xml
2025-07-11 16:39:05,327 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-06 08:15:32
2025-07-11 16:39:05,330 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:39:05,332 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 1503.80
2025-07-11 16:39:05,333 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:05,336 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:05,338 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:05,342 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 30.78s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 7302660E-1483-43CD-8364-305180BA2531.xml', '{"filename": "7302660E-1483-43CD-8364-305180BA2531.xml", "processing_time": 0.07210564613342285, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 7302660E-1483-43CD-8364-305180BA2531 already exists"}', 0.07210564613342285, None, '7302660E-1483-43CD-8364-305180BA2531.xml', None, '2025-07-11 23:39:05.338333')
2025-07-11 16:39:05,353 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:05,368 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 7302660E-1483-43CD-8364-305180BA2531.xml - moved to failed directory
2025-07-11 16:39:05,373 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 7302660E-1483-43CD-8364-305180BA2531.xml to data/failed
2025-07-11 16:39:05,378 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:05,383 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 7EC2C80D-447B-41D7-A5D7-64B42CFE6860.xml (30/64)
2025-07-11 16:39:05,387 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:05,395 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 7EC2C80D-447B-41D7-A5D7-64B42CFE6860.xml
2025-07-11 16:39:05,398 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 7EC2C80D-447B-41D7-A5D7-64B42CFE6860.xml
2025-07-11 16:39:05,410 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:05,414 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 7EC2C80D-447B-41D7-A5D7-64B42CFE6860
2025-07-11 16:39:05,422 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:05,430 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:05,440 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 33.77s ago] ('7EC2C80D-447B-41D7-A5D7-64B42CFE6860', 1, 0)
2025-07-11 16:39:05,448 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:05,450 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 1 items
2025-07-11 16:39:05,456 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:05,463 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:05,466 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 33.77s ago] ('sku_9ea7b570_84121500_servicios_de_facturación', 1, 0)
2025-07-11 16:39:05,470 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_9ea7b570_84121500_servicios_de_facturación -> Gastos Generales
2025-07-11 16:39:05,478 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:39:05,479 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 33.77s ago] (4, '2025-07-11 23:39:05.470863', 59)
2025-07-11 16:39:05,492 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:05,502 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-11 16:39:05,511 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:05,515 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoices (uuid, series, folio, invoice_type, version, issue_date, certification_date, created_at, updated_at, issuer_rfc, issuer_name, issuer_fiscal_regime, issuer_use_cfdi, issuer_residence, issuer_tax_id, receiver_rfc, receiver_name, receiver_fiscal_address, receiver_residence, receiver_tax_id, receiver_use_cfdi, payment_method, payment_method_desc, payment_terms, payment_conditions, currency, exchange_rate, subtotal, total_discount, total_transferred_taxes, total_withheld_taxes, total_amount, digital_stamp, certificate_number, certificate, sat_seal, sat_certificate, fiscal_folio, stamp_datetime, expedition_place, export_operation, confirmation, source_filename, xml_file_size, confidence_score, processing_time, processing_status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:05,518 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 31.13s ago] ('7EC2C80D-447B-41D7-A5D7-64B42CFE6860', None, '012040004880308989', 'I', '4.0', '2025-07-02 10:15:52.000000', None, '2025-07-11 23:39:05.515203', '2025-07-11 23:39:05.515203', 'BBA******LJ2', 'BBVA MEXICO, S.A., INSTITUCION DE BANCA MULTIPLE, GRUPO FINANCIERO BBVA MEXICO', '601', None, None, None, 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', '23300', None, None, None, '03', None, 'PUE', None, 'MXN', 0.0, 0.01, 0.01, 0.0, 0.0, 0.0, 'YB8lyT2QDmKpXso+rYoEpUhtMadvHz9jZZalhTUAcoBio5WHU1axwhQdwUNcf84MUGlAeFRhxz/8CraFNYCo7eSEskqfDQYyrmGH4bFsLeXz8SbYvxfp05vBM0L27QPlaQcQgoWl6y2nBui3QqxZz ... (46 characters truncated) ... 5CND271yl6gxmQ0VLlE9YAClJLEQlxDHzaExxeVrKTozC6gQxNb5MXQLVGH65CzBYF6qZGDGhdkOLEIQg+7eJ7EcnG45hhtTO7ABmC8dGl9S51qX/cOiGWF2pG3LQ5/HGj2z3amLJdNjVw1axBw==', '00001000000509478830', None, 'S1XXgwTCxdCiaeBoLuIhoGmwSn24yrrUzXwSQ5SD5AE+pDodTHQuJV5qbOIkGw+N2o5+uGNkw0RrZ+eRZ2kcYtlr96msypW4+7yEkuj5bYz41rjwhEztj+ymPpTJbdPfh0IKvDir17waifEvLz1nn ... (46 characters truncated) ... 3iKdr4DNcKlaLCKs5GKYP/ukvUdJRQtROTkj3rtdBxSj26phTj4C3CDBwvnIkKA0nJfQcEpsOlC5PREN75yjyR1Ox56UT4nu1V19PrTd+BCb5McxMGuPg8DmjQU7rUswgNdA/AaQ37WOXDhTWGw==', None, '7EC2C80D-447B-41D7-A5D7-64B42CFE6860', '2025-07-02 13:02:18.000000', None, None, None, '7EC2C80D-447B-41D7-A5D7-64B42CFE6860.xml', 4837, None, None, 'processed')
2025-07-11 16:39:05,531 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Saved invoice 7EC2C80D-447B-41D7-A5D7-64B42CFE6860 with 1 items (ID: 119)
2025-07-11 16:39:05,535 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE invoices SET confidence_score=?, processing_time=? WHERE invoices.id = ?
2025-07-11 16:39:05,537 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 31.14s ago] (1.0, 0.0, 119)
2025-07-11 16:39:05,547 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, subcategory, sub_sub_category, standardized_unit, standardized_quantity, conversion_factor, category_confidence, classification_source, approval_status, sku_key, classification_timestamp, custom_fields, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:05,549 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00334s] (119, 1, '84121500', None, 'Servicios de Facturación', 1.0, 'E48', None, 1.0, None, 0.01, 0.01, 0.01, 0.0, 0.0, 'Gastos Generales', 'Servicios contables', 'Servicios contables', 'Piezas', 1.0, 1.0, 1.0, 'approved_sku', 'approved', 'sku_9ea7b570_84121500_servicios_de_facturación', '2025-07-11 23:39:05.546384', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:05.546384', '2025-07-11 23:39:05.546384')
2025-07-11 16:39:05,558 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:05,577 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [METADATA] Creating business metadata
2025-07-11 16:39:05,580 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Created metadata for invoice ID 119
2025-07-11 16:39:05,583 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:05,586 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_metadata (invoice_id, uuid, folio, issue_date, issuer_rfc, issuer_name, receiver_rfc, receiver_name, original_currency, original_total, exchange_rate, mxn_total, payment_method, payment_terms, is_installments, is_immediate, total_items, total_categories, avg_confidence, processing_status, has_errors, error_count, is_export, has_digital_stamp, is_certified, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:05,594 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 31.12s ago] (119, '7EC2C80D-447B-41D7-A5D7-64B42CFE6860', '012040004880308989', '2025-07-02', 'BBA******LJ2', 'BBVA MEXICO, S.A., INSTITUCION DE BANCA MULTIPLE, GRUPO FINANCIERO BBVA MEXICO', 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', 'MXN', 0.0, 1.0, 0.0, '03', 'PUE', 0, 1, 1, 1, 1.0, 'completed', 0, 0, 0, 1, 1, '2025-07-11 23:39:05.585460', '2025-07-11 23:39:05.585460')
2025-07-11 16:39:05,610 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:05,629 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Saving to purchase_details table
2025-07-11 16:39:05,641 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:05,647 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.id = ?
2025-07-11 16:39:05,661 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 31.16s ago] (119,)
2025-07-11 16:39:05,670 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoice_metadata.id AS invoice_metadata_id, invoice_metadata.invoice_id AS invoice_metadata_invoice_id, invoice_metadata.uuid AS invoice_metadata_uuid, invoice_metadata.folio AS invoice_metadata_folio, invoice_metadata.issue_date AS invoice_metadata_issue_date, invoice_metadata.issuer_rfc AS invoice_metadata_issuer_rfc, invoice_metadata.issuer_name AS invoice_metadata_issuer_name, invoice_metadata.receiver_rfc AS invoice_metadata_receiver_rfc, invoice_metadata.receiver_name AS invoice_metadata_receiver_name, invoice_metadata.original_currency AS invoice_metadata_original_currency, invoice_metadata.original_total AS invoice_metadata_original_total, invoice_metadata.exchange_rate AS invoice_metadata_exchange_rate, invoice_metadata.mxn_total AS invoice_metadata_mxn_total, invoice_metadata.payment_method AS invoice_metadata_payment_method, invoice_metadata.payment_terms AS invoice_metadata_payment_terms, invoice_metadata.is_installments AS invoice_metadata_is_installments, invoice_metadata.is_immediate AS invoice_metadata_is_immediate, invoice_metadata.total_items AS invoice_metadata_total_items, invoice_metadata.total_categories AS invoice_metadata_total_categories, invoice_metadata.avg_confidence AS invoice_metadata_avg_confidence, invoice_metadata.processing_status AS invoice_metadata_processing_status, invoice_metadata.has_errors AS invoice_metadata_has_errors, invoice_metadata.error_count AS invoice_metadata_error_count, invoice_metadata.is_export AS invoice_metadata_is_export, invoice_metadata.has_digital_stamp AS invoice_metadata_has_digital_stamp, invoice_metadata.is_certified AS invoice_metadata_is_certified, invoice_metadata.created_at AS invoice_metadata_created_at, invoice_metadata.updated_at AS invoice_metadata_updated_at 
FROM invoice_metadata 
WHERE invoice_metadata.invoice_id = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:05,680 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 31.15s ago] (119, 1, 0)
2025-07-11 16:39:05,705 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - ROLLBACK
2025-07-11 16:39:05,708 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 37 values for 38 columns
2025-07-11 16:39:05,711 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Failed to save to purchase_details table: 37 values for 38 columns
2025-07-11 16:39:05,717 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:05,720 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:05,724 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 31.17s ago] (119, 'INFO', 'batch_processor', 'process_file', 'Successfully processed 7EC2C80D-447B-41D7-A5D7-64B42CFE6860.xml', '{"filename": "7EC2C80D-447B-41D7-A5D7-64B42CFE6860.xml", "processing_time": 0.31964540481567383, "item_count": 1, "success": true, "gemini_calls": 0, "approved_skus": 1, "avg_confidence": 1.0}', 0.31964540481567383, None, '7EC2C80D-447B-41D7-A5D7-64B42CFE6860.xml', None, '2025-07-11 23:39:05.720157')
2025-07-11 16:39:05,765 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:05,806 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SUCCESS] Processed 7EC2C80D-447B-41D7-A5D7-64B42CFE6860.xml in 0.32s
2025-07-11 16:39:05,819 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 7EC2C80D-447B-41D7-A5D7-64B42CFE6860.xml to data/processed
2025-07-11 16:39:05,821 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:05,825 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 838AE357-5D6A-455A-863E-6DB46DCA43F7.xml (31/64)
2025-07-11 16:39:05,829 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:05,834 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 838AE357-5D6A-455A-863E-6DB46DCA43F7.xml
2025-07-11 16:39:05,835 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 838AE357-5D6A-455A-863E-6DB46DCA43F7.xml
2025-07-11 16:39:05,841 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:05,845 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 838AE357-5D6A-455A-863E-6DB46DCA43F7
2025-07-11 16:39:05,851 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:05,855 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:05,881 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 34.21s ago] ('838AE357-5D6A-455A-863E-6DB46DCA43F7', 1, 0)
2025-07-11 16:39:05,901 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 838AE357-5D6A-455A-863E-6DB46DCA43F7 already exists (ID: 88)
2025-07-11 16:39:05,913 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 838AE357-5D6A-455A-863E-6DB46DCA43F7.xml
2025-07-11 16:39:05,918 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 838AE357-5D6A-455A-863E-6DB46DCA43F7.xml
2025-07-11 16:39:05,929 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-18 00:00:00
2025-07-11 16:39:05,930 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $358.00
2025-07-11 16:39:05,936 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:05,946 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:05,948 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 838AE357-5D6A-455A-863E-6DB46DCA43F7
2025-07-11 16:39:05,950 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 838AE357-5D6A-455A-863E-6DB46DCA43F7.xml
2025-07-11 16:39:05,953 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-18 13:08:10
2025-07-11 16:39:05,960 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:39:05,963 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 358.00
2025-07-11 16:39:05,965 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:05,971 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:05,980 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:05,985 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 31.43s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 838AE357-5D6A-455A-863E-6DB46DCA43F7.xml', '{"filename": "838AE357-5D6A-455A-863E-6DB46DCA43F7.xml", "processing_time": 0.13411951065063477, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 838AE357-5D6A-455A-863E-6DB46DCA43F7 already exists"}', 0.13411951065063477, None, '838AE357-5D6A-455A-863E-6DB46DCA43F7.xml', None, '2025-07-11 23:39:05.980862')
2025-07-11 16:39:06,005 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:06,018 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 838AE357-5D6A-455A-863E-6DB46DCA43F7.xml - moved to failed directory
2025-07-11 16:39:06,023 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 838AE357-5D6A-455A-863E-6DB46DCA43F7.xml to data/failed
2025-07-11 16:39:06,030 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:06,036 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 85486D72-0E84-4A6E-8656-A366CBD3D64E.xml (32/64)
2025-07-11 16:39:06,038 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:06,043 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 85486D72-0E84-4A6E-8656-A366CBD3D64E.xml
2025-07-11 16:39:06,045 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 85486D72-0E84-4A6E-8656-A366CBD3D64E.xml
2025-07-11 16:39:06,057 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:06,061 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 85486D72-0E84-4A6E-8656-A366CBD3D64E
2025-07-11 16:39:06,065 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:06,069 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:06,086 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 34.42s ago] ('85486D72-0E84-4A6E-8656-A366CBD3D64E', 1, 0)
2025-07-11 16:39:06,102 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 85486D72-0E84-4A6E-8656-A366CBD3D64E already exists (ID: 89)
2025-07-11 16:39:06,108 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 85486D72-0E84-4A6E-8656-A366CBD3D64E.xml
2025-07-11 16:39:06,114 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 85486D72-0E84-4A6E-8656-A366CBD3D64E.xml
2025-07-11 16:39:06,120 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-14 00:00:00
2025-07-11 16:39:06,123 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $626.50
2025-07-11 16:39:06,141 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:06,147 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:06,150 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 85486D72-0E84-4A6E-8656-A366CBD3D64E
2025-07-11 16:39:06,164 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 85486D72-0E84-4A6E-8656-A366CBD3D64E.xml
2025-07-11 16:39:06,171 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-14 07:09:40
2025-07-11 16:39:06,181 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:39:06,200 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 626.50
2025-07-11 16:39:06,203 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:06,209 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:06,211 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:06,214 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 31.66s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 85486D72-0E84-4A6E-8656-A366CBD3D64E.xml', '{"filename": "85486D72-0E84-4A6E-8656-A366CBD3D64E.xml", "processing_time": 0.16483378410339355, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 85486D72-0E84-4A6E-8656-A366CBD3D64E already exists"}', 0.16483378410339355, None, '85486D72-0E84-4A6E-8656-A366CBD3D64E.xml', None, '2025-07-11 23:39:06.211690')
2025-07-11 16:39:06,223 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:06,241 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 85486D72-0E84-4A6E-8656-A366CBD3D64E.xml - moved to failed directory
2025-07-11 16:39:06,245 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 85486D72-0E84-4A6E-8656-A366CBD3D64E.xml to data/failed
2025-07-11 16:39:06,246 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:06,248 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6.xml (33/64)
2025-07-11 16:39:06,249 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:06,255 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6.xml
2025-07-11 16:39:06,264 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6.xml
2025-07-11 16:39:06,278 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:06,279 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6
2025-07-11 16:39:06,287 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:06,290 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:06,308 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 34.64s ago] ('86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6', 1, 0)
2025-07-11 16:39:06,318 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:06,321 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 1 items
2025-07-11 16:39:06,325 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_9ea7b570_84121500_servicios_de_facturación
2025-07-11 16:39:06,330 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-11 16:39:06,336 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:06,342 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoices (uuid, series, folio, invoice_type, version, issue_date, certification_date, created_at, updated_at, issuer_rfc, issuer_name, issuer_fiscal_regime, issuer_use_cfdi, issuer_residence, issuer_tax_id, receiver_rfc, receiver_name, receiver_fiscal_address, receiver_residence, receiver_tax_id, receiver_use_cfdi, payment_method, payment_method_desc, payment_terms, payment_conditions, currency, exchange_rate, subtotal, total_discount, total_transferred_taxes, total_withheld_taxes, total_amount, digital_stamp, certificate_number, certificate, sat_seal, sat_certificate, fiscal_folio, stamp_datetime, expedition_place, export_operation, confirmation, source_filename, xml_file_size, confidence_score, processing_time, processing_status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:06,346 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 31.96s ago] ('86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6', None, '012040004880491223', 'I', '4.0', '2025-07-02 10:16:31.000000', None, '2025-07-11 23:39:06.342352', '2025-07-11 23:39:06.342352', 'BBA******LJ2', 'BBVA MEXICO, S.A., INSTITUCION DE BANCA MULTIPLE, GRUPO FINANCIERO BBVA MEXICO', '601', None, None, None, 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', '23300', None, None, None, '03', None, 'PUE', None, 'USD', 18.89, 0.01, 0.01, 0.0, 0.0, 0.0, 'ZoX/DJoSFT3Ov34rf0e2s6Z74st49slHqobgGAhSjLCLt5ql0/9DA0+TiezL6g0GLAMD8dCjFH46RbL1X8l0TB/Gu3aK8HwkvTW92Olt4rh2XFmCQLNtPjntX0cjlYjHgDgqB1Ima+hX7MFYAPwL3 ... (46 characters truncated) ... bbDzSEbIykf/x322BpxJsfyLtwZcuHwIfgFfVfPzXFUZs0f8w06Q98oEFlr9Xk6QAkBfdu6Vz013kOkCxcayTV5iH7aYXiufWPN9sl/hehwige3FKUZM4v7QaPl3PQcWtDGZL4YgJt7MoVVUN0g==', '00001000000509478830', None, 'X9K1wdsPyGSF5L/bl3J3sWM3wYsF6yNocpjGj8j7ka7nsxZi45KZ/IAz6t7b1/CWriilbB4n0B4rxVmJvDE2+4KjSbZ8WGOOfhSAFWHLhHzXMjIzwq/EuJHcmJnCIGMCdD5qnzVIo8is8IwPVw1DS ... (46 characters truncated) ... hg2CRbnw8LfSyG7bg7daNKbNfZHTjHu/BuC46SHLeFuRCvMsRjyQ31C5/1wQY1USIgxcNqKpP9xpFuzmxyZYMlEmIcf0Wxk5vf9bHgaVIXSzSbO5rZmk1SbJvq0jKnKe8/EKlDH6U6DKd5+Yhfg==', None, '86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6', '2025-07-02 13:03:28.000000', None, None, None, '86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6.xml', 4860, None, None, 'processed')
2025-07-11 16:39:06,360 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Saved invoice 86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6 with 1 items (ID: 120)
2025-07-11 16:39:06,364 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE invoices SET confidence_score=?, processing_time=? WHERE invoices.id = ?
2025-07-11 16:39:06,366 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 31.97s ago] (1.0, 0.0, 120)
2025-07-11 16:39:06,369 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, subcategory, sub_sub_category, standardized_unit, standardized_quantity, conversion_factor, category_confidence, classification_source, approval_status, sku_key, classification_timestamp, custom_fields, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:06,378 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 0.8322s ago] (120, 1, '84121500', None, 'Servicios de Facturación', 1.0, 'E48', None, 1.0, None, 0.01, 0.01, 0.01, 0.0, 0.0, 'Gastos Generales', 'Servicios contables', 'Servicios contables', 'Piezas', 1.0, 1.0, 1.0, 'approved_sku', 'approved', 'sku_9ea7b570_84121500_servicios_de_facturación', '2025-07-11 23:39:06.369354', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:06.369354', '2025-07-11 23:39:06.369354')
2025-07-11 16:39:06,383 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:06,402 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [METADATA] Creating business metadata
2025-07-11 16:39:06,411 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Created metadata for invoice ID 120
2025-07-11 16:39:06,414 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:06,417 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_metadata (invoice_id, uuid, folio, issue_date, issuer_rfc, issuer_name, receiver_rfc, receiver_name, original_currency, original_total, exchange_rate, mxn_total, payment_method, payment_terms, is_installments, is_immediate, total_items, total_categories, avg_confidence, processing_status, has_errors, error_count, is_export, has_digital_stamp, is_certified, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:06,421 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 31.95s ago] (120, '86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6', '012040004880491223', '2025-07-02', 'BBA******LJ2', 'BBVA MEXICO, S.A., INSTITUCION DE BANCA MULTIPLE, GRUPO FINANCIERO BBVA MEXICO', 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', 'USD', 0.0, 18.89, 0.0, '03', 'PUE', 0, 1, 1, 1, 1.0, 'completed', 0, 0, 0, 1, 1, '2025-07-11 23:39:06.416472', '2025-07-11 23:39:06.416472')
2025-07-11 16:39:06,431 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:06,446 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Saving to purchase_details table
2025-07-11 16:39:06,449 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:06,453 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.id = ?
2025-07-11 16:39:06,458 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 31.95s ago] (120,)
2025-07-11 16:39:06,463 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoice_metadata.id AS invoice_metadata_id, invoice_metadata.invoice_id AS invoice_metadata_invoice_id, invoice_metadata.uuid AS invoice_metadata_uuid, invoice_metadata.folio AS invoice_metadata_folio, invoice_metadata.issue_date AS invoice_metadata_issue_date, invoice_metadata.issuer_rfc AS invoice_metadata_issuer_rfc, invoice_metadata.issuer_name AS invoice_metadata_issuer_name, invoice_metadata.receiver_rfc AS invoice_metadata_receiver_rfc, invoice_metadata.receiver_name AS invoice_metadata_receiver_name, invoice_metadata.original_currency AS invoice_metadata_original_currency, invoice_metadata.original_total AS invoice_metadata_original_total, invoice_metadata.exchange_rate AS invoice_metadata_exchange_rate, invoice_metadata.mxn_total AS invoice_metadata_mxn_total, invoice_metadata.payment_method AS invoice_metadata_payment_method, invoice_metadata.payment_terms AS invoice_metadata_payment_terms, invoice_metadata.is_installments AS invoice_metadata_is_installments, invoice_metadata.is_immediate AS invoice_metadata_is_immediate, invoice_metadata.total_items AS invoice_metadata_total_items, invoice_metadata.total_categories AS invoice_metadata_total_categories, invoice_metadata.avg_confidence AS invoice_metadata_avg_confidence, invoice_metadata.processing_status AS invoice_metadata_processing_status, invoice_metadata.has_errors AS invoice_metadata_has_errors, invoice_metadata.error_count AS invoice_metadata_error_count, invoice_metadata.is_export AS invoice_metadata_is_export, invoice_metadata.has_digital_stamp AS invoice_metadata_has_digital_stamp, invoice_metadata.is_certified AS invoice_metadata_is_certified, invoice_metadata.created_at AS invoice_metadata_created_at, invoice_metadata.updated_at AS invoice_metadata_updated_at 
FROM invoice_metadata 
WHERE invoice_metadata.invoice_id = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:06,469 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 31.94s ago] (120, 1, 0)
2025-07-11 16:39:06,483 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - ROLLBACK
2025-07-11 16:39:06,485 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 37 values for 38 columns
2025-07-11 16:39:06,487 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Failed to save to purchase_details table: 37 values for 38 columns
2025-07-11 16:39:06,495 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:06,499 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:06,503 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 31.94s ago] (120, 'INFO', 'batch_processor', 'process_file', 'Successfully processed 86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6.xml', '{"filename": "86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6.xml", "processing_time": 0.2378706932067871, "item_count": 1, "success": true, "gemini_calls": 0, "approved_skus": 1, "avg_confidence": 1.0}', 0.2378706932067871, None, '86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6.xml', None, '2025-07-11 23:39:06.498832')
2025-07-11 16:39:06,520 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:06,536 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SUCCESS] Processed 86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6.xml in 0.24s
2025-07-11 16:39:06,540 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 86BDC7C8-B9C2-4FB8-952C-40A975B0E4D6.xml to data/processed
2025-07-11 16:39:06,543 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:06,545 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml (34/64)
2025-07-11 16:39:06,553 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:06,560 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml
2025-07-11 16:39:06,563 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml
2025-07-11 16:39:06,573 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:06,576 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15
2025-07-11 16:39:06,579 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:06,583 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:06,599 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 34.93s ago] ('8B42E65A-D0C1-4F16-8A77-9B9D2C513E15', 1, 0)
2025-07-11 16:39:06,604 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15 already exists (ID: 90)
2025-07-11 16:39:06,611 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml
2025-07-11 16:39:06,613 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml
2025-07-11 16:39:06,614 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-11 16:39:06,616 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $462.00
2025-07-11 16:39:06,619 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:06,626 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:06,628 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15
2025-07-11 16:39:06,630 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml
2025-07-11 16:39:06,632 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 09:51:33
2025-07-11 16:39:06,633 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: EXPINS
2025-07-11 16:39:06,634 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 462.00
2025-07-11 16:39:06,636 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:06,643 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:06,647 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:06,649 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 32.09s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml', '{"filename": "8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml", "processing_time": 0.08202648162841797, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15 already exists"}', 0.08202648162841797, None, '8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml', None, '2025-07-11 23:39:06.647018')
2025-07-11 16:39:06,662 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:06,670 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml - moved to failed directory
2025-07-11 16:39:06,679 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 8B42E65A-D0C1-4F16-8A77-9B9D2C513E15.xml to data/failed
2025-07-11 16:39:06,680 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:06,681 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 90361E74-0E55-478B-9756-9B9D2C5106BE.xml (35/64)
2025-07-11 16:39:06,683 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:06,687 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 90361E74-0E55-478B-9756-9B9D2C5106BE.xml
2025-07-11 16:39:06,691 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 90361E74-0E55-478B-9756-9B9D2C5106BE.xml
2025-07-11 16:39:06,698 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:06,700 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 90361E74-0E55-478B-9756-9B9D2C5106BE
2025-07-11 16:39:06,704 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:06,709 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:06,714 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 35.04s ago] ('90361E74-0E55-478B-9756-9B9D2C5106BE', 1, 0)
2025-07-11 16:39:06,717 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 90361E74-0E55-478B-9756-9B9D2C5106BE already exists (ID: 91)
2025-07-11 16:39:06,720 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 90361E74-0E55-478B-9756-9B9D2C5106BE.xml
2025-07-11 16:39:06,725 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 90361E74-0E55-478B-9756-9B9D2C5106BE.xml
2025-07-11 16:39:06,726 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-11 16:39:06,727 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $308.00
2025-07-11 16:39:06,729 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:06,731 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:06,738 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 90361E74-0E55-478B-9756-9B9D2C5106BE
2025-07-11 16:39:06,740 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 90361E74-0E55-478B-9756-9B9D2C5106BE.xml
2025-07-11 16:39:06,748 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 09:46:10
2025-07-11 16:39:06,752 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: EXPINS
2025-07-11 16:39:06,754 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 308.00
2025-07-11 16:39:06,758 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:06,761 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:06,764 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:06,767 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 32.21s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 90361E74-0E55-478B-9756-9B9D2C5106BE.xml', '{"filename": "90361E74-0E55-478B-9756-9B9D2C5106BE.xml", "processing_time": 0.07296943664550781, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 90361E74-0E55-478B-9756-9B9D2C5106BE already exists"}', 0.07296943664550781, None, '90361E74-0E55-478B-9756-9B9D2C5106BE.xml', None, '2025-07-11 23:39:06.764394')
2025-07-11 16:39:06,784 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:06,796 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 90361E74-0E55-478B-9756-9B9D2C5106BE.xml - moved to failed directory
2025-07-11 16:39:06,801 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 90361E74-0E55-478B-9756-9B9D2C5106BE.xml to data/failed
2025-07-11 16:39:06,803 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:06,808 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml (36/64)
2025-07-11 16:39:06,809 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:06,810 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml
2025-07-11 16:39:06,813 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml
2025-07-11 16:39:06,820 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:06,824 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 96752AF7-7702-4BC1-939B-B0EA13BC5D3C
2025-07-11 16:39:06,828 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:06,830 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:06,836 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 35.17s ago] ('96752AF7-7702-4BC1-939B-B0EA13BC5D3C', 1, 0)
2025-07-11 16:39:06,843 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 96752AF7-7702-4BC1-939B-B0EA13BC5D3C already exists (ID: 92)
2025-07-11 16:39:06,846 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml
2025-07-11 16:39:06,846 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml
2025-07-11 16:39:06,849 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-11 16:39:06,851 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $3243.00
2025-07-11 16:39:06,853 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:06,861 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:06,862 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 96752AF7-7702-4BC1-939B-B0EA13BC5D3C
2025-07-11 16:39:06,864 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml
2025-07-11 16:39:06,865 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 10:47:26
2025-07-11 16:39:06,866 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: CERVEZAS CUAUHTEMOC MOCTEZUMA
2025-07-11 16:39:06,867 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 3243.00
2025-07-11 16:39:06,871 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:06,877 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:06,880 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:06,883 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 32.32s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml', '{"filename": "96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml", "processing_time": 0.06455564498901367, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 96752AF7-7702-4BC1-939B-B0EA13BC5D3C already exists"}', 0.06455564498901367, None, '96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml', None, '2025-07-11 23:39:06.880609')
2025-07-11 16:39:06,896 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:06,905 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml - moved to failed directory
2025-07-11 16:39:06,908 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 96752AF7-7702-4BC1-939B-B0EA13BC5D3C.xml to data/failed
2025-07-11 16:39:06,910 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:06,913 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 978d18b7-b0c4-420d-9529-6c3eb2cac218.xml (37/64)
2025-07-11 16:39:06,917 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:06,920 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 978d18b7-b0c4-420d-9529-6c3eb2cac218.xml
2025-07-11 16:39:06,921 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 978d18b7-b0c4-420d-9529-6c3eb2cac218.xml
2025-07-11 16:39:06,930 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:06,931 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 978d18b7-b0c4-420d-9529-6c3eb2cac218
2025-07-11 16:39:06,933 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:06,938 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:06,945 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 35.28s ago] ('978d18b7-b0c4-420d-9529-6c3eb2cac218', 1, 0)
2025-07-11 16:39:06,947 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:06,950 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 8 items
2025-07-11 16:39:06,958 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:06,961 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:06,964 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 35.27s ago] ('sku_71a083bd_50221002_harina_higluten_sir_lancelot_ka_3052_lb', 1, 0)
2025-07-11 16:39:06,967 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_71a083bd_50221002_harina_higluten_sir_lancelot_ka_3052_lb -> Abarrotes
2025-07-11 16:39:06,971 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:39:06,977 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 35.27s ago] (5, '2025-07-11 23:39:06.967182', 28)
2025-07-11 16:39:06,986 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:06,999 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:07,002 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:07,010 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 35.32s ago] ('sku_e2dd89d6_50406500_tomate_entero_pelado_piancone_289kg', 1, 0)
2025-07-11 16:39:07,013 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_e2dd89d6_50406500_tomate_entero_pelado_piancone_289kg -> Vegetales
2025-07-11 16:39:07,014 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:39:07,016 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 35.31s ago] (5, '2025-07-11 23:39:07.013257', 125)
2025-07-11 16:39:07,026 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:07,037 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:07,042 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:07,046 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 35.35s ago] ('sku_8d0019cc_50151513_aceite_oliva_pomace_genco_plast_378_lt', 1, 0)
2025-07-11 16:39:07,048 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_8d0019cc_50151513_aceite_oliva_pomace_genco_plast_378_lt -> Abarrotes
2025-07-11 16:39:07,051 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:39:07,054 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 35.35s ago] (4, '2025-07-11 23:39:07.048642', 2)
2025-07-11 16:39:07,061 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:07,076 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:07,078 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:07,082 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 35.39s ago] ('sku_1789b909_50151500_aceite_puro_de_palma_palmina_20lt', 1, 0)
2025-07-11 16:39:07,084 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_1789b909_50151500_aceite_puro_de_palma_palmina_20lt -> Abarrotes
2025-07-11 16:39:07,090 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:39:07,093 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 35.39s ago] (5, '2025-07-11 23:39:07.084700', 1)
2025-07-11 16:39:07,097 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:07,110 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:07,112 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:07,117 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 35.43s ago] ('sku_4248db8f_50131800_queso_ricotta_grande_136kg', 1, 0)
2025-07-11 16:39:07,121 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:07,127 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_4248db8f_50131800_queso_ricotta_grande_136kg
2025-07-11 16:39:09,040 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Queso
2025-07-11 16:39:09,043 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Queso (units_per_package: 1.0)
2025-07-11 16:39:09,043 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:09,043 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:09,052 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 37.36s ago] ('sku_181f6523_50221300_harina_de_centeno_dark_bay_state_1814kg', 1, 0)
2025-07-11 16:39:09,055 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_181f6523_50221300_harina_de_centeno_dark_bay_state_1814kg -> Abarrotes
2025-07-11 16:39:09,061 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:39:09,063 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 37.35s ago] (4, '2025-07-11 23:39:09.055615', 31)
2025-07-11 16:39:09,073 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:09,085 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:09,092 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:09,096 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 37.4s ago] ('sku_95f688b2_50181709_hoja_encerada_12x12_perrins_1000pz', 1, 0)
2025-07-11 16:39:09,096 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_95f688b2_50181709_hoja_encerada_12x12_perrins_1000pz -> Suministros
2025-07-11 16:39:09,103 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:39:09,109 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 37.4s ago] (3, '2025-07-11 23:39:09.096622', 119)
2025-07-11 16:39:09,114 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:09,127 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:09,131 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:09,140 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 37.45s ago] ('sku_a5f46d94_50131800_queso_mozzarella_rdo_grande_227kg', 1, 0)
2025-07-11 16:39:09,144 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_a5f46d94_50131800_queso_mozzarella_rdo_grande_227kg -> Lacteos
2025-07-11 16:39:09,146 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:39:09,149 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 37.44s ago] (4, '2025-07-11 23:39:09.143384', 71)
2025-07-11 16:39:09,153 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:09,167 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-11 16:39:09,174 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:09,176 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoices (uuid, series, folio, invoice_type, version, issue_date, certification_date, created_at, updated_at, issuer_rfc, issuer_name, issuer_fiscal_regime, issuer_use_cfdi, issuer_residence, issuer_tax_id, receiver_rfc, receiver_name, receiver_fiscal_address, receiver_residence, receiver_tax_id, receiver_use_cfdi, payment_method, payment_method_desc, payment_terms, payment_conditions, currency, exchange_rate, subtotal, total_discount, total_transferred_taxes, total_withheld_taxes, total_amount, digital_stamp, certificate_number, certificate, sat_seal, sat_certificate, fiscal_folio, stamp_datetime, expedition_place, export_operation, confirmation, source_filename, xml_file_size, confidence_score, processing_time, processing_status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:09,180 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 34.8s ago] ('978d18b7-b0c4-420d-9529-6c3eb2cac218', 'AA', '97846', 'I', '4.0', '2025-07-09 13:57:52.000000', None, '2025-07-11 23:39:09.176760', '2025-07-11 23:39:09.176760', 'AAE******3E6', 'ABASTECEDORA DE ALIMENTOS Y EMBUTIDOS VALLE HERMANOS', '601', None, None, None, 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', '23300', None, None, None, '28', None, 'PUE', None, 'MXN', 1.0, 5557.34, 0.0, 85.44, 0.0, 5642.78, 'Q1c71MTKbOZ4ncpAd2v4i3YGixpkwi7xqLZqhIV2Y2hTcxxXBftwXdJP01P9Yi5faNuN62kvr6EFeH9o2SUfxRgPLr4W4PMiho4ca9UO48QlBkiMyzs5+M9/dTkOcZvqtxHnBR3IYfsqj/D2+fEYW ... (46 characters truncated) ... e7rnqe61IF3p8pvI6mt3b1vsJ11bYnyTwl5cOAvbHyNJrNfCNdEb7WSaziuu+9y95XNIs1gL4TJlI03RR9g/ct3YC5XZvT6ovGRvNzoPdtMcAGkTwASfM4tpHGNCIIVSIOrydwJbmISO5StF45g==', '00001000000514916510', None, 'fQR5gsykt6MlXAhcYwEsFT3cIXcdnKn9nrHK/6Cpn+PxuSZjuptSlV7XQ4KjuCt4ajqY6UuKjqigREexhlejVrljJdG5V28SeaLUNhDfVXjNA4EARA6+Nm3ZTe9i0ufrcGr2BIPcTCjI+d599laOa ... (46 characters truncated) ... FtF5ltUZy6Mpb2aBZfkS/kkezh5eBbe6Xa/H7EZsQRqryHMeu0IC12nTkAIpZh6n/3xmKGucprb62X7f5fqdpUZMXqSjUhgPVi1lqWdn1sPcixN2uRiQU4smHva4g04kY4l7kUiFOSgIrLvqn3g==', None, '978d18b7-b0c4-420d-9529-6c3eb2cac218', '2025-07-09 14:58:11.000000', None, None, None, '978d18b7-b0c4-420d-9529-6c3eb2cac218.xml', 9491, None, None, 'processed')
2025-07-11 16:39:09,196 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Saved invoice 978d18b7-b0c4-420d-9529-6c3eb2cac218 with 8 items (ID: 121)
2025-07-11 16:39:09,196 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE invoices SET confidence_score=?, processing_time=? WHERE invoices.id = ?
2025-07-11 16:39:09,203 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 34.81s ago] (0.99375, 1.9111213684082031, 121)
2025-07-11 16:39:09,212 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:09,214 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 34.8s ago (insertmanyvalues) 1/8 (ordered; batch not supported)] (121, 1, '50221002', None, 'HARINA HI-GLUTEN SIR LANCELOT KA 3052 LB', 1.0, 'H87', None, 22.6796, None, 929.2, 929.2, 0.0, 0.0, 929.2, 'Abarrotes', 'Harinas', 'Harina de trigo', 'Kilogramos', 22.6796, 22.6796, 1.0, 'approved_sku', 'approved', 'sku_71a083bd_50221002_harina_higluten_sir_lancelot_ka_3052_lb', '2025-07-11 23:39:09.211022', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:09.211022', '2025-07-11 23:39:09.211022')
2025-07-11 16:39:09,227 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:09,230 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 2/8 (ordered; batch not supported)] (121, 2, '50406500', None, 'TOMATE ENTERO PELADO PIANCONE 2.89KG', 3.0, 'H87', None, 2.89, None, 180.6, 541.8, 0.0, 0.0, 541.8, 'Vegetales', 'Frutas', 'Tomate Saladette', 'Kilogramos', 8.67, 2.89, 1.0, 'approved_sku', 'approved', 'sku_e2dd89d6_50406500_tomate_entero_pelado_piancone_289kg', '2025-07-11 23:39:09.211022', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:09.211022', '2025-07-11 23:39:09.211022')
2025-07-11 16:39:09,238 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:09,249 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 3/8 (ordered; batch not supported)] (121, 3, '50151513', None, 'ACEITE OLIVA POMACE GENCO PLAST 3.78 LT', 3.0, 'H87', None, 3.78, None, 299.0, 897.0, 0.0, 0.0, 897.0, 'Abarrotes', 'Aceite', 'Aceite de oliva', 'Litros', 11.34, 3.78, 1.0, 'approved_sku', 'approved', 'sku_8d0019cc_50151513_aceite_oliva_pomace_genco_plast_378_lt', '2025-07-11 23:39:09.211022', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:09.211022', '2025-07-11 23:39:09.211022')
2025-07-11 16:39:09,261 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:09,267 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 4/8 (ordered; batch not supported)] (121, 4, '50151500', None, 'ACEITE PURO DE PALMA PALMINA 20LT', 1.0, 'H87', None, 20.0, None, 899.14, 899.14, 0.0, 0.0, 899.14, 'Abarrotes', 'Aceite', 'Aceite vegetal', 'Litros', 20.0, 20.0, 1.0, 'approved_sku', 'approved', 'sku_1789b909_50151500_aceite_puro_de_palma_palmina_20lt', '2025-07-11 23:39:09.211022', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:09.211022', '2025-07-11 23:39:09.211022')
2025-07-11 16:39:09,275 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:09,277 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 5/8 (ordered; batch not supported)] (121, 5, '50131800', None, 'QUESO RICOTTA GRANDE 1.36KG', 3.0, 'H87', None, 1.0, None, 205.0, 615.0, 0.0, 0.0, 615.0, 'Lacteos', 'Queso', 'Queso Ricotta', 'Kilogramos', 3.0, 1.36, 0.95, 'gemini_api', 'pending', 'sku_4248db8f_50131800_queso_ricotta_grande_136kg', '2025-07-11 23:39:09.211022', '{"processing_time": 1.9111213684082031, "api_attempt": 1, "reasoning": "The item is clearly a Ricotta cheese, which falls under the \'Queso\' subcate ... (131 characters truncated) ...  kg per unit, and since it\'s sold individually, units_per_package is 1. The conversion factor is 1.36 because each unit is 1.36 kg.", "error": null}', '2025-07-11 23:39:09.211022', '2025-07-11 23:39:09.211022')
2025-07-11 16:39:09,283 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:09,288 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 6/8 (ordered; batch not supported)] (121, 6, '50221300', None, 'HARINA DE CENTENO DARK BAY STATE 18.14KG', 1.0, 'H87', None, 18.14, None, 692.2, 692.2, 0.0, 0.0, 692.2, 'Abarrotes', 'Harinas', 'Harina de Centeno', 'Kilogramos', 18.14, 18.14, 1.0, 'approved_sku', 'approved', 'sku_181f6523_50221300_harina_de_centeno_dark_bay_state_1814kg', '2025-07-11 23:39:09.211022', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:09.211022', '2025-07-11 23:39:09.211022')
2025-07-11 16:39:09,293 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:09,297 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 7/8 (ordered; batch not supported)] (121, 7, '50181709', None, 'HOJA ENCERADA 12x12 PERRINS 1000PZ', 1.0, 'H87', None, 1000.0, None, 534.0, 534.0, 0.0, 0.0, 619.44, 'Suministros', 'Suministros Cocina', 'Papel Encerado', 'Piezas', 1000.0, 1000.0, 1.0, 'approved_sku', 'approved', 'sku_95f688b2_50181709_hoja_encerada_12x12_perrins_1000pz', '2025-07-11 23:39:09.211022', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:09.211022', '2025-07-11 23:39:09.211022')
2025-07-11 16:39:09,301 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:09,309 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 8/8 (ordered; batch not supported)] (121, 8, '50131800', None, 'QUESO MOZZARELLA RDO GRANDE 2.27KG', 1.0, 'H87', None, 2.27, None, 449.0, 449.0, 0.0, 0.0, 449.0, 'Lacteos', 'Queso', 'Queso Mozarella', 'Kilogramos', 2.27, 2.27, 1.0, 'approved_sku', 'approved', 'sku_a5f46d94_50131800_queso_mozzarella_rdo_grande_227kg', '2025-07-11 23:39:09.211022', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:09.211022', '2025-07-11 23:39:09.211022')
2025-07-11 16:39:09,313 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:09,350 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [METADATA] Creating business metadata
2025-07-11 16:39:09,359 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Created metadata for invoice ID 121
2025-07-11 16:39:09,362 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:09,364 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_metadata (invoice_id, uuid, folio, issue_date, issuer_rfc, issuer_name, receiver_rfc, receiver_name, original_currency, original_total, exchange_rate, mxn_total, payment_method, payment_terms, is_installments, is_immediate, total_items, total_categories, avg_confidence, processing_status, has_errors, error_count, is_export, has_digital_stamp, is_certified, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:09,369 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 34.9s ago] (121, '978d18b7-b0c4-420d-9529-6c3eb2cac218', '97846', '2025-07-09', 'AAE******3E6', 'ABASTECEDORA DE ALIMENTOS Y EMBUTIDOS VALLE HERMANOS', 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', 'MXN', 5642.78, 1.0, 5642.78, '28', 'PUE', 0, 1, 8, 4, 0.99375, 'completed', 0, 0, 0, 1, 1, '2025-07-11 23:39:09.364663', '2025-07-11 23:39:09.364663')
2025-07-11 16:39:09,378 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:09,390 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Saving to purchase_details table
2025-07-11 16:39:09,393 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:09,395 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.id = ?
2025-07-11 16:39:09,402 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 34.9s ago] (121,)
2025-07-11 16:39:09,410 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoice_metadata.id AS invoice_metadata_id, invoice_metadata.invoice_id AS invoice_metadata_invoice_id, invoice_metadata.uuid AS invoice_metadata_uuid, invoice_metadata.folio AS invoice_metadata_folio, invoice_metadata.issue_date AS invoice_metadata_issue_date, invoice_metadata.issuer_rfc AS invoice_metadata_issuer_rfc, invoice_metadata.issuer_name AS invoice_metadata_issuer_name, invoice_metadata.receiver_rfc AS invoice_metadata_receiver_rfc, invoice_metadata.receiver_name AS invoice_metadata_receiver_name, invoice_metadata.original_currency AS invoice_metadata_original_currency, invoice_metadata.original_total AS invoice_metadata_original_total, invoice_metadata.exchange_rate AS invoice_metadata_exchange_rate, invoice_metadata.mxn_total AS invoice_metadata_mxn_total, invoice_metadata.payment_method AS invoice_metadata_payment_method, invoice_metadata.payment_terms AS invoice_metadata_payment_terms, invoice_metadata.is_installments AS invoice_metadata_is_installments, invoice_metadata.is_immediate AS invoice_metadata_is_immediate, invoice_metadata.total_items AS invoice_metadata_total_items, invoice_metadata.total_categories AS invoice_metadata_total_categories, invoice_metadata.avg_confidence AS invoice_metadata_avg_confidence, invoice_metadata.processing_status AS invoice_metadata_processing_status, invoice_metadata.has_errors AS invoice_metadata_has_errors, invoice_metadata.error_count AS invoice_metadata_error_count, invoice_metadata.is_export AS invoice_metadata_is_export, invoice_metadata.has_digital_stamp AS invoice_metadata_has_digital_stamp, invoice_metadata.is_certified AS invoice_metadata_is_certified, invoice_metadata.created_at AS invoice_metadata_created_at, invoice_metadata.updated_at AS invoice_metadata_updated_at 
FROM invoice_metadata 
WHERE invoice_metadata.invoice_id = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:09,414 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 34.89s ago] (121, 1, 0)
2025-07-11 16:39:09,426 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - ROLLBACK
2025-07-11 16:39:09,428 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 37 values for 38 columns
2025-07-11 16:39:09,430 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Failed to save to purchase_details table: 37 values for 38 columns
2025-07-11 16:39:09,433 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:09,436 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:09,439 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 34.88s ago] (121, 'INFO', 'batch_processor', 'process_file', 'Successfully processed 978d18b7-b0c4-420d-9529-6c3eb2cac218.xml', '{"filename": "978d18b7-b0c4-420d-9529-6c3eb2cac218.xml", "processing_time": 2.513094902038574, "item_count": 8, "success": true, "gemini_calls": 1, "approved_skus": 7, "avg_confidence": 0.99375}', 2.513094902038574, None, '978d18b7-b0c4-420d-9529-6c3eb2cac218.xml', None, '2025-07-11 23:39:09.435185')
2025-07-11 16:39:09,450 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:09,463 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SUCCESS] Processed 978d18b7-b0c4-420d-9529-6c3eb2cac218.xml in 2.51s
2025-07-11 16:39:09,466 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 978d18b7-b0c4-420d-9529-6c3eb2cac218.xml to data/processed
2025-07-11 16:39:09,471 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:09,475 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing 9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml (38/64)
2025-07-11 16:39:09,476 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:09,477 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: 9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml
2025-07-11 16:39:09,478 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: 9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml
2025-07-11 16:39:09,484 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:09,486 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: 9EAF508A-96FB-4058-9E8D-8B087391B4E7
2025-07-11 16:39:09,492 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:09,493 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:09,503 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 37.83s ago] ('9EAF508A-96FB-4058-9E8D-8B087391B4E7', 1, 0)
2025-07-11 16:39:09,508 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID 9EAF508A-96FB-4058-9E8D-8B087391B4E7 already exists (ID: 93)
2025-07-11 16:39:09,508 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: 9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml
2025-07-11 16:39:09,508 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml
2025-07-11 16:39:09,514 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 00:00:00
2025-07-11 16:39:09,516 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $845.51
2025-07-11 16:39:09,520 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:09,526 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:09,528 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: 9EAF508A-96FB-4058-9E8D-8B087391B4E7
2025-07-11 16:39:09,529 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: 9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml
2025-07-11 16:39:09,532 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 16:14:59
2025-07-11 16:39:09,533 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: SIGMA FOODSERVICE COMERCIAL
2025-07-11 16:39:09,538 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 845.51
2025-07-11 16:39:09,541 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:09,544 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:09,545 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:09,549 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 34.99s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process 9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml', '{"filename": "9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml", "processing_time": 0.06603598594665527, "item_count": 0, "success": false, "error": "DUPLICATE: UUID 9EAF508A-96FB-4058-9E8D-8B087391B4E7 already exists"}', 0.06603598594665527, None, '9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml', None, '2025-07-11 23:39:09.545742')
2025-07-11 16:39:09,564 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:09,576 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice 9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml - moved to failed directory
2025-07-11 16:39:09,580 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved 9EAF508A-96FB-4058-9E8D-8B087391B4E7.xml to data/failed
2025-07-11 16:39:09,584 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:09,588 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml (39/64)
2025-07-11 16:39:09,593 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:09,594 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml
2025-07-11 16:39:09,596 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml
2025-07-11 16:39:09,609 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:09,610 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: AB31CFD1-C61A-4637-A9C0-71B7C676AAA8
2025-07-11 16:39:09,612 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:09,614 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:09,625 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 37.96s ago] ('AB31CFD1-C61A-4637-A9C0-71B7C676AAA8', 1, 0)
2025-07-11 16:39:09,627 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID AB31CFD1-C61A-4637-A9C0-71B7C676AAA8 already exists (ID: 94)
2025-07-11 16:39:09,628 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml
2025-07-11 16:39:09,630 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml
2025-07-11 16:39:09,632 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-05 00:00:00
2025-07-11 16:39:09,635 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1116.80
2025-07-11 16:39:09,640 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:09,643 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:09,645 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: AB31CFD1-C61A-4637-A9C0-71B7C676AAA8
2025-07-11 16:39:09,646 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml
2025-07-11 16:39:09,647 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-05 08:09:02
2025-07-11 16:39:09,649 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:39:09,651 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 1116.80
2025-07-11 16:39:09,656 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:09,660 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:09,662 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:09,666 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 35.11s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml', '{"filename": "AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml", "processing_time": 0.06586241722106934, "item_count": 0, "success": false, "error": "DUPLICATE: UUID AB31CFD1-C61A-4637-A9C0-71B7C676AAA8 already exists"}', 0.06586241722106934, None, 'AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml', None, '2025-07-11 23:39:09.662994')
2025-07-11 16:39:09,681 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:09,694 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml - moved to failed directory
2025-07-11 16:39:09,698 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved AB31CFD1-C61A-4637-A9C0-71B7C676AAA8.xml to data/failed
2025-07-11 16:39:09,701 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:09,708 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing AFF831E7-A2A9-4366-A0B5-AA295076786B.xml (40/64)
2025-07-11 16:39:09,709 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:09,710 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: AFF831E7-A2A9-4366-A0B5-AA295076786B.xml
2025-07-11 16:39:09,711 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: AFF831E7-A2A9-4366-A0B5-AA295076786B.xml
2025-07-11 16:39:09,721 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:09,724 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: AFF831E7-A2A9-4366-A0B5-AA295076786B
2025-07-11 16:39:09,727 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:09,729 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:09,736 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 38.07s ago] ('AFF831E7-A2A9-4366-A0B5-AA295076786B', 1, 0)
2025-07-11 16:39:09,741 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID AFF831E7-A2A9-4366-A0B5-AA295076786B already exists (ID: 95)
2025-07-11 16:39:09,742 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: AFF831E7-A2A9-4366-A0B5-AA295076786B.xml
2025-07-11 16:39:09,745 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: AFF831E7-A2A9-4366-A0B5-AA295076786B.xml
2025-07-11 16:39:09,746 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-01 00:00:00
2025-07-11 16:39:09,748 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $117.60
2025-07-11 16:39:09,751 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:09,758 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:09,760 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: AFF831E7-A2A9-4366-A0B5-AA295076786B
2025-07-11 16:39:09,761 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: AFF831E7-A2A9-4366-A0B5-AA295076786B.xml
2025-07-11 16:39:09,763 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-01 14:23:26
2025-07-11 16:39:09,765 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:39:09,768 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 117.60
2025-07-11 16:39:09,773 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:09,777 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:09,779 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:09,781 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 35.22s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process AFF831E7-A2A9-4366-A0B5-AA295076786B.xml', '{"filename": "AFF831E7-A2A9-4366-A0B5-AA295076786B.xml", "processing_time": 0.06580543518066406, "item_count": 0, "success": false, "error": "DUPLICATE: UUID AFF831E7-A2A9-4366-A0B5-AA295076786B already exists"}', 0.06580543518066406, None, 'AFF831E7-A2A9-4366-A0B5-AA295076786B.xml', None, '2025-07-11 23:39:09.778292')
2025-07-11 16:39:09,801 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:09,814 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice AFF831E7-A2A9-4366-A0B5-AA295076786B.xml - moved to failed directory
2025-07-11 16:39:09,824 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved AFF831E7-A2A9-4366-A0B5-AA295076786B.xml to data/failed
2025-07-11 16:39:09,826 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:09,827 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml (41/64)
2025-07-11 16:39:09,828 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:09,830 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml
2025-07-11 16:39:09,831 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml
2025-07-11 16:39:09,842 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:09,844 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: B1A47CC5-3B55-457F-8D72-9E8AB8109EBC
2025-07-11 16:39:09,846 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:09,849 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:09,860 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 38.19s ago] ('B1A47CC5-3B55-457F-8D72-9E8AB8109EBC', 1, 0)
2025-07-11 16:39:09,862 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID B1A47CC5-3B55-457F-8D72-9E8AB8109EBC already exists (ID: 96)
2025-07-11 16:39:09,865 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml
2025-07-11 16:39:09,867 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml
2025-07-11 16:39:09,873 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 00:00:00
2025-07-11 16:39:09,876 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1127.07
2025-07-11 16:39:09,877 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:09,879 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:09,880 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: B1A47CC5-3B55-457F-8D72-9E8AB8109EBC
2025-07-11 16:39:09,880 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml
2025-07-11 16:39:09,884 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 15:49:54
2025-07-11 16:39:09,889 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: SIGMA FOODSERVICE COMERCIAL
2025-07-11 16:39:09,891 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 1127.07
2025-07-11 16:39:09,894 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:09,896 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:09,900 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:09,905 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 35.35s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml', '{"filename": "B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml", "processing_time": 0.06455302238464355, "item_count": 0, "success": false, "error": "DUPLICATE: UUID B1A47CC5-3B55-457F-8D72-9E8AB8109EBC already exists"}', 0.06455302238464355, None, 'B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml', None, '2025-07-11 23:39:09.899404')
2025-07-11 16:39:09,917 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:09,929 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml - moved to failed directory
2025-07-11 16:39:09,938 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved B1A47CC5-3B55-457F-8D72-9E8AB8109EBC.xml to data/failed
2025-07-11 16:39:09,940 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:09,943 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml (42/64)
2025-07-11 16:39:09,945 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:09,946 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml
2025-07-11 16:39:09,948 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml
2025-07-11 16:39:09,958 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:09,959 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: B4C82F5B-735B-4D18-8F12-8A7634CC02A8
2025-07-11 16:39:09,961 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:09,963 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:09,973 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 38.3s ago] ('B4C82F5B-735B-4D18-8F12-8A7634CC02A8', 1, 0)
2025-07-11 16:39:09,976 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID B4C82F5B-735B-4D18-8F12-8A7634CC02A8 already exists (ID: 97)
2025-07-11 16:39:09,978 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml
2025-07-11 16:39:09,979 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml
2025-07-11 16:39:09,980 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-14 00:00:00
2025-07-11 16:39:09,983 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $301.10
2025-07-11 16:39:09,988 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:09,990 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:09,991 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: B4C82F5B-735B-4D18-8F12-8A7634CC02A8
2025-07-11 16:39:09,993 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml
2025-07-11 16:39:09,995 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-14 10:18:43
2025-07-11 16:39:09,996 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:39:09,997 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 301.10
2025-07-11 16:39:09,998 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:10,001 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:10,008 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:10,009 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 35.45s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml', '{"filename": "B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml", "processing_time": 0.054505109786987305, "item_count": 0, "success": false, "error": "DUPLICATE: UUID B4C82F5B-735B-4D18-8F12-8A7634CC02A8 already exists"}', 0.054505109786987305, None, 'B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml', None, '2025-07-11 23:39:10.008271')
2025-07-11 16:39:10,015 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:10,027 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml - moved to failed directory
2025-07-11 16:39:10,030 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved B4C82F5B-735B-4D18-8F12-8A7634CC02A8.xml to data/failed
2025-07-11 16:39:10,033 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:10,036 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing B696B7FF-E66C-46CF-A45D-D819C44431A3.xml (43/64)
2025-07-11 16:39:10,041 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:10,042 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: B696B7FF-E66C-46CF-A45D-D819C44431A3.xml
2025-07-11 16:39:10,044 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: B696B7FF-E66C-46CF-A45D-D819C44431A3.xml
2025-07-11 16:39:10,050 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:10,056 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: B696B7FF-E66C-46CF-A45D-D819C44431A3
2025-07-11 16:39:10,058 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:10,059 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:10,066 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 38.4s ago] ('B696B7FF-E66C-46CF-A45D-D819C44431A3', 1, 0)
2025-07-11 16:39:10,072 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:10,074 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 13 items
2025-07-11 16:39:10,077 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:10,078 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:10,084 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 38.39s ago] ('sku_3e3e24e9_10161907_oregano', 1, 0)
2025-07-11 16:39:10,091 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_3e3e24e9_10161907_oregano -> Abarrotes
2025-07-11 16:39:10,094 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:39:10,096 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 38.39s ago] (3, '2025-07-11 23:39:10.091492', 27)
2025-07-11 16:39:10,106 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:10,116 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:10,122 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:10,126 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 38.44s ago] ('sku_80bf8a82_50401900_betabel', 1, 0)
2025-07-11 16:39:10,128 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_80bf8a82_50401900_betabel -> Vegetales
2025-07-11 16:39:10,132 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:39:10,134 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 38.43s ago] (5, '2025-07-11 23:39:10.128956', 147)
2025-07-11 16:39:10,143 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:10,156 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:10,159 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:10,164 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 38.47s ago] ('sku_5f188ef1_50131800_queso_cabra', 1, 0)
2025-07-11 16:39:10,168 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:10,173 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_5f188ef1_50131800_queso_cabra
2025-07-11 16:39:11,671 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Queso
2025-07-11 16:39:11,672 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Queso (units_per_package: 1.0)
2025-07-11 16:39:11,675 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_f6ce5c99_50404600_lechuga_mixta
2025-07-11 16:39:11,681 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_6b45f921_50404600_lechuga_romana_baby
2025-07-11 16:39:11,683 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_11cd495e_50401700_aguacate
2025-07-11 16:39:11,688 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_14c77eea_50414500_kale
2025-07-11 16:39:11,689 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_e6d42f0b_50403800_shallot
2025-07-11 16:39:11,692 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_4770c1ef_50402800_acelga
2025-07-11 16:39:11,693 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:11,695 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:11,701 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.01s ago] ('sku_e08ae5b6_50131700_leche_entera_lala_1_lt', 1, 0)
2025-07-11 16:39:11,706 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:11,709 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_e08ae5b6_50131700_leche_entera_lala_1_lt
2025-07-11 16:39:13,308 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Leche
2025-07-11 16:39:13,310 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Leche (units_per_package: 1.0)
2025-07-11 16:39:13,312 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_bd6f7e4b_50112010_pierna_de_pollo
2025-07-11 16:39:13,318 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg
2025-07-11 16:39:13,321 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:13,322 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:13,324 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 41.63s ago] ('sku_9d78fad1_50404100_perejil_liso', 1, 0)
2025-07-11 16:39:13,325 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:13,327 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_9d78fad1_50404100_perejil_liso
2025-07-11 16:39:15,031 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Vegetales -> Verduras
2025-07-11 16:39:15,034 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Vegetales -> Verduras (units_per_package: 1.0)
2025-07-11 16:39:15,035 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-11 16:39:15,036 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:15,037 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoices (uuid, series, folio, invoice_type, version, issue_date, certification_date, created_at, updated_at, issuer_rfc, issuer_name, issuer_fiscal_regime, issuer_use_cfdi, issuer_residence, issuer_tax_id, receiver_rfc, receiver_name, receiver_fiscal_address, receiver_residence, receiver_tax_id, receiver_use_cfdi, payment_method, payment_method_desc, payment_terms, payment_conditions, currency, exchange_rate, subtotal, total_discount, total_transferred_taxes, total_withheld_taxes, total_amount, digital_stamp, certificate_number, certificate, sat_seal, sat_certificate, fiscal_folio, stamp_datetime, expedition_place, export_operation, confirmation, source_filename, xml_file_size, confidence_score, processing_time, processing_status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:15,039 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.66s ago] ('B696B7FF-E66C-46CF-A45D-D819C44431A3', None, '51518', 'I', '4.0', '2025-07-01 07:23:08.000000', None, '2025-07-11 23:39:15.037982', '2025-07-11 23:39:15.037982', 'PIVV******RR4', 'VANESSA IVON PIÑUELAS VERDUGO', '612', None, None, None, 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', '23300', None, None, None, '99', None, 'PPD', None, 'MXN', 1.0, 1844.58, 0.0, 0.0, 0.0, 1844.58, 'I/0Fp5YLdvG9CQQWxbJ5hBexfkBCy4bloh9w+D0JFWFctyYf3L5uPJbz09/84XX7/1bfJCMS35Xb1d5mvtDZkorxYh3PPzIMJRNApSd2UB9D5aforzCWvSrHZJlbH9Ipa1NAL9sw48cWFhiQO0RUD ... (46 characters truncated) ... qd48xo3pLd4cHShbmJHHfsfUuWFr+cLbWT4dS08X/dbTfxdHorY8FgtBppUwKhP+QM2jW1v4Wi4sCAvRLpq07z4ZnlqIEsUzfIquYR3Ef9T4llZtxd8MdYLOjD5oIixoXafxQt3/aeAxjIyi7Ew==', '00001000000705018977', None, 'AF9oq5TqB+2YFdKbX8RyrXXp4PAhHSwMZvy/hR0FWjlXq4a+vKwbT9gfdnHojzQ/kMtsCGDXU3SdQsgy54xmOyCWa0+dZqOKpCP0L2/bJWbiF79ESF6+dxchBxPmQP2LI1alRgWrlqCwnn4l9xMFa ... (46 characters truncated) ... dozizQs6FjgO/V89rKq8kknnXeaATP+DVd4y82naJdjqxFlsnISNoh3bzw+dIGbRmvo/kNEvDnPGxBryWFc0gfqsSOB3aad4cusyITkbO5K+63nA01dVuGVV6jYaFxC0dGrR8cHz9OJxZsRN16g==', None, 'B696B7FF-E66C-46CF-A45D-D819C44431A3', '2025-07-01 08:23:09.000000', None, None, None, 'B696B7FF-E66C-46CF-A45D-D819C44431A3.xml', 9513, None, None, 'processed')
2025-07-11 16:39:15,051 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Saved invoice B696B7FF-E66C-46CF-A45D-D819C44431A3 with 13 items (ID: 122)
2025-07-11 16:39:15,053 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE invoices SET confidence_score=?, processing_time=? WHERE invoices.id = ?
2025-07-11 16:39:15,054 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.65s ago] (0.973076923076923, 11.059346437454224, 122)
2025-07-11 16:39:15,056 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:15,058 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.65s ago (insertmanyvalues) 1/13 (ordered; batch not supported)] (122, 1, '10161907', None, 'OREGANO', 0.2, 'KGM', None, 1.0, None, 150.0, 30.0, 0.0, 0.0, 30.0, 'Abarrotes', 'Especias', 'Oregano', 'Kilogramos', 0.2, 1.0, 1.0, 'approved_sku', 'approved', 'sku_3e3e24e9_10161907_oregano', '2025-07-11 23:39:15.056597', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:15.056597', '2025-07-11 23:39:15.056597')
2025-07-11 16:39:15,060 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:15,063 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 2/13 (ordered; batch not supported)] (122, 2, '50401900', None, 'BETABEL', 5.0, 'KGM', None, 1.0, None, 25.0, 125.0, 0.0, 0.0, 125.0, 'Vegetales', 'Verduras', 'Betabel', 'Kilogramos', 5.0, 1.0, 1.0, 'approved_sku', 'approved', 'sku_80bf8a82_50401900_betabel', '2025-07-11 23:39:15.056597', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:15.056597', '2025-07-11 23:39:15.056597')
2025-07-11 16:39:15,068 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:15,069 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 3/13 (ordered; batch not supported)] (122, 3, '50131800', None, 'QUESO CABRA', 2.0, 'H87', None, 1.0, None, 133.0, 266.0, 0.0, 0.0, 266.0, 'Lacteos', 'Queso', 'Queso de Cabra', 'Kilogramos', 2.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_5f188ef1_50131800_queso_cabra', '2025-07-11 23:39:15.056597', '{"processing_time": 1.494459867477417, "api_attempt": 1, "reasoning": "The item is \'QUESO CABRA\', which directly corresponds to the \'Queso de Cabr ... (97 characters truncated) ... cheese, the standardized unit is Kilogramos. There is no package information in the description, so units_per_package defaults to 1.", "error": null}', '2025-07-11 23:39:15.056597', '2025-07-11 23:39:15.056597')
2025-07-11 16:39:15,071 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:15,072 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 4/13 (ordered; batch not supported)] (122, 4, '50404600', None, 'LECHUGA MIXTA', 1.0, 'H87', None, 1.0, None, 130.0, 130.0, 0.0, 0.0, 130.0, 'Vegetales', 'Verduras', 'Lechuga Mixta', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_f6ce5c99_50404600_lechuga_mixta', '2025-07-11 23:39:15.056597', '{"processing_time": 1.4898877143859863, "api_attempt": 1, "reasoning": "The item is \'LECHUGA MIXTA\' which is \'Lechuga Mixta\' in the Vegetables >  ... (30 characters truncated) ...  a vegetable, the standardized unit is Kilogramos. The quantity is 1 and there is no package information, so units_per_package is 1.", "error": null}', '2025-07-11 23:39:15.056597', '2025-07-11 23:39:15.056597')
2025-07-11 16:39:15,075 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:15,076 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 5/13 (ordered; batch not supported)] (122, 5, '50404600', None, 'LECHUGA ROMANA BABY', 1.0, 'H87', None, 1.0, None, 110.0, 110.0, 0.0, 0.0, 110.0, 'Vegetales', 'Verduras', 'Lechuga Romana', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_6b45f921_50404600_lechuga_romana_baby', '2025-07-11 23:39:15.056597', '{"processing_time": 1.68709397315979, "api_attempt": 1, "reasoning": "The item is \'LECHUGA ROMANA BABY\', which is a type of lettuce. Therefore, it  ... (143 characters truncated) ... ized unit is \'Kilogramos\'. The quantity is 1, and there\'s no indication of multiple units per package, so units_per_package is 1.", "error": null}', '2025-07-11 23:39:15.056597', '2025-07-11 23:39:15.056597')
2025-07-11 16:39:15,083 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:15,085 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 6/13 (ordered; batch not supported)] (122, 6, '50401700', None, 'AGUACATE', 1.38, 'KGM', None, 1.0, None, 115.0, 158.7, 0.0, 0.0, 158.7, 'Vegetales', 'Frutas', 'Aguacate', 'Kilogramos', 1.38, 1.0, 1.0, 'approved_sku', 'approved', 'sku_11cd495e_50401700_aguacate', '2025-07-11 23:39:15.056597', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:15.056597', '2025-07-11 23:39:15.056597')
2025-07-11 16:39:15,087 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:15,088 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 7/13 (ordered; batch not supported)] (122, 7, '50414500', None, 'KALE', 1.14, 'KGM', None, 1.0, None, 400.0, 456.0, 0.0, 0.0, 456.0, 'Vegetales', 'Verduras', 'Col', 'Kilogramos', 1.14, 1.0, 1.0, 'approved_sku', 'approved', 'sku_14c77eea_50414500_kale', '2025-07-11 23:39:15.056597', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:15.056597', '2025-07-11 23:39:15.056597')
2025-07-11 16:39:15,089 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:15,090 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 8/13 (ordered; batch not supported)] (122, 8, '50403800', None, 'SHALLOT', 0.64, 'KGM', None, 1.0, None, 240.0, 153.6, 0.0, 0.0, 153.6, 'Vegetales', 'Verduras', 'Shallot', 'Kilogramos', 0.64, 1.0, 1.0, 'approved_sku', 'approved', 'sku_e6d42f0b_50403800_shallot', '2025-07-11 23:39:15.056597', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:15.056597', '2025-07-11 23:39:15.056597')
2025-07-11 16:39:15,092 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:15,095 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 9/13 (ordered; batch not supported)] (122, 9, '50402800', None, 'ACELGA', 1.0, 'XBH', None, 1.0, None, 14.0, 14.0, 0.0, 0.0, 14.0, 'Vegetales', 'Verduras', 'Acelga', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_4770c1ef_50402800_acelga', '2025-07-11 23:39:15.056597', '{"processing_time": 1.5273375511169434, "api_attempt": 1, "reasoning": "\\"Acelga\\" is classified as a vegetable. Since the unit is XBH and quantity is 1, it\'s likely sold by weight. Assuming XBH represents a bulk weight, it is classified as Kilogramos with 1 unit per package.", "error": null}', '2025-07-11 23:39:15.056597', '2025-07-11 23:39:15.056597')
2025-07-11 16:39:15,100 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:15,103 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 10/13 (ordered; batch not supported)] (122, 10, '50131700', None, 'LECHE ENTERA LALA 1 LT', 2.0, 'H87', None, 1.0, 'Botella', 36.0, 72.0, 0.0, 0.0, 72.0, 'Lacteos', 'Leche', 'Leche entera', 'Litros', 2.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_e08ae5b6_50131700_leche_entera_lala_1_lt', '2025-07-11 23:39:15.056597', '{"processing_time": 1.5982666015625, "api_attempt": 1, "reasoning": "The item is described as \'LECHE ENTERA LALA 1 LT\', which translates to \'LALA  ... (56 characters truncated) ... he\' subcategory and specifically \'Leche entera\'. The quantity is given in Liters, and the description indicates 1 liter per unit.", "error": null}', '2025-07-11 23:39:15.056597', '2025-07-11 23:39:15.056597')
2025-07-11 16:39:15,105 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:15,105 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 11/13 (ordered; batch not supported)] (122, 11, '50112010', None, 'PIERNA DE POLLO', 4.86, 'KGM', None, 1.0, None, 48.0, 233.28, 0.0, 0.0, 233.28, 'Proteinas', 'Pollo', 'Pierna', 'Kilogramos', 4.86, 1.0, 1.0, 'approved_sku', 'approved', 'sku_bd6f7e4b_50112010_pierna_de_pollo', '2025-07-11 23:39:15.056597', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:15.056597', '2025-07-11 23:39:15.056597')
2025-07-11 16:39:15,107 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:15,108 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 12/13 (ordered; batch not supported)] (122, 12, '50202302', None, 'HIELO BOLSA DE HIELO 5KG', 2.0, 'H87', None, 1.0, 'Bolsa', 33.0, 66.0, 0.0, 0.0, 66.0, 'Abarrotes', 'Otros-a', 'Otros', 'Kilogramos', 2.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg', '2025-07-11 23:39:15.056597', '{"processing_time": 1.5589585304260254, "api_attempt": 1, "reasoning": "Ice is not explicitly listed, so it falls under \'Otros\' in Abarrotes. The item is sold in a 5KG bag, but the units are per item, so units_per_package is 1.", "error": null}', '2025-07-11 23:39:15.056597', '2025-07-11 23:39:15.056597')
2025-07-11 16:39:15,112 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:15,116 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 13/13 (ordered; batch not supported)] (122, 13, '50404100', None, 'PEREJIL LISO', 2.0, 'XBH', None, 1.0, None, 15.0, 30.0, 0.0, 0.0, 30.0, 'Vegetales', 'Verduras', 'Perejil Lacio', 'Kilogramos', 2.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_9d78fad1_50404100_perejil_liso', '2025-07-11 23:39:15.056597', '{"processing_time": 1.7033421993255615, "api_attempt": 1, "reasoning": "The item is \'PEREJIL LISO\' which translates to \'Flat Parsley\'. This is a  ... (143 characters truncated) ... \'s likely being sold by weight, so the standardized unit is Kilogramos. There is no package information, so units_per_package is 1.", "error": null}', '2025-07-11 23:39:15.056597', '2025-07-11 23:39:15.056597')
2025-07-11 16:39:15,119 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:15,140 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [METADATA] Creating business metadata
2025-07-11 16:39:15,141 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Created metadata for invoice ID 122
2025-07-11 16:39:15,143 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:15,149 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_metadata (invoice_id, uuid, folio, issue_date, issuer_rfc, issuer_name, receiver_rfc, receiver_name, original_currency, original_total, exchange_rate, mxn_total, payment_method, payment_terms, is_installments, is_immediate, total_items, total_categories, avg_confidence, processing_status, has_errors, error_count, is_export, has_digital_stamp, is_certified, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:15,151 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.68s ago] (122, 'B696B7FF-E66C-46CF-A45D-D819C44431A3', '51518', '2025-07-01', 'PIVV******RR4', 'VANESSA IVON PIÑUELAS VERDUGO', 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', 'MXN', 1844.58, 1.0, 1844.58, '99', 'PPD', 1, 0, 13, 4, 0.973076923076923, 'completed', 0, 0, 0, 1, 1, '2025-07-11 23:39:15.149127', '2025-07-11 23:39:15.149127')
2025-07-11 16:39:15,155 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:15,165 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Saving to purchase_details table
2025-07-11 16:39:15,168 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:15,169 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.id = ?
2025-07-11 16:39:15,173 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.67s ago] (122,)
2025-07-11 16:39:15,175 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoice_metadata.id AS invoice_metadata_id, invoice_metadata.invoice_id AS invoice_metadata_invoice_id, invoice_metadata.uuid AS invoice_metadata_uuid, invoice_metadata.folio AS invoice_metadata_folio, invoice_metadata.issue_date AS invoice_metadata_issue_date, invoice_metadata.issuer_rfc AS invoice_metadata_issuer_rfc, invoice_metadata.issuer_name AS invoice_metadata_issuer_name, invoice_metadata.receiver_rfc AS invoice_metadata_receiver_rfc, invoice_metadata.receiver_name AS invoice_metadata_receiver_name, invoice_metadata.original_currency AS invoice_metadata_original_currency, invoice_metadata.original_total AS invoice_metadata_original_total, invoice_metadata.exchange_rate AS invoice_metadata_exchange_rate, invoice_metadata.mxn_total AS invoice_metadata_mxn_total, invoice_metadata.payment_method AS invoice_metadata_payment_method, invoice_metadata.payment_terms AS invoice_metadata_payment_terms, invoice_metadata.is_installments AS invoice_metadata_is_installments, invoice_metadata.is_immediate AS invoice_metadata_is_immediate, invoice_metadata.total_items AS invoice_metadata_total_items, invoice_metadata.total_categories AS invoice_metadata_total_categories, invoice_metadata.avg_confidence AS invoice_metadata_avg_confidence, invoice_metadata.processing_status AS invoice_metadata_processing_status, invoice_metadata.has_errors AS invoice_metadata_has_errors, invoice_metadata.error_count AS invoice_metadata_error_count, invoice_metadata.is_export AS invoice_metadata_is_export, invoice_metadata.has_digital_stamp AS invoice_metadata_has_digital_stamp, invoice_metadata.is_certified AS invoice_metadata_is_certified, invoice_metadata.created_at AS invoice_metadata_created_at, invoice_metadata.updated_at AS invoice_metadata_updated_at 
FROM invoice_metadata 
WHERE invoice_metadata.invoice_id = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:15,178 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.65s ago] (122, 1, 0)
2025-07-11 16:39:15,187 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - ROLLBACK
2025-07-11 16:39:15,188 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 37 values for 38 columns
2025-07-11 16:39:15,189 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Failed to save to purchase_details table: 37 values for 38 columns
2025-07-11 16:39:15,191 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:15,192 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:15,194 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.64s ago] (122, 'INFO', 'batch_processor', 'process_file', 'Successfully processed B696B7FF-E66C-46CF-A45D-D819C44431A3.xml', '{"filename": "B696B7FF-E66C-46CF-A45D-D819C44431A3.xml", "processing_time": 5.148025274276733, "item_count": 13, "success": true, "gemini_calls": 7, "approved_skus": 6, "avg_confidence": 0.973076923076923}', 5.148025274276733, None, 'B696B7FF-E66C-46CF-A45D-D819C44431A3.xml', None, '2025-07-11 23:39:15.192976')
2025-07-11 16:39:15,202 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:15,209 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SUCCESS] Processed B696B7FF-E66C-46CF-A45D-D819C44431A3.xml in 5.15s
2025-07-11 16:39:15,213 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved B696B7FF-E66C-46CF-A45D-D819C44431A3.xml to data/processed
2025-07-11 16:39:15,217 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:15,218 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml (44/64)
2025-07-11 16:39:15,220 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:15,221 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml
2025-07-11 16:39:15,222 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml
2025-07-11 16:39:15,224 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:15,226 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8
2025-07-11 16:39:15,231 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:15,233 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:15,237 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 43.57s ago] ('B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8', 1, 0)
2025-07-11 16:39:15,240 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8 already exists (ID: 98)
2025-07-11 16:39:15,240 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml
2025-07-11 16:39:15,241 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml
2025-07-11 16:39:15,242 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-11 16:39:15,244 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2624.20
2025-07-11 16:39:15,249 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:15,251 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:15,252 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8
2025-07-11 16:39:15,254 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml
2025-07-11 16:39:15,255 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 09:27:33
2025-07-11 16:39:15,256 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: CERVEZAS CUAUHTEMOC MOCTEZUMA
2025-07-11 16:39:15,256 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 2624.20
2025-07-11 16:39:15,257 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:15,258 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:15,260 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:15,265 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.71s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml', '{"filename": "B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml", "processing_time": 0.03728127479553223, "item_count": 0, "success": false, "error": "DUPLICATE: UUID B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8 already exists"}', 0.03728127479553223, None, 'B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml', None, '2025-07-11 23:39:15.259381')
2025-07-11 16:39:15,273 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:15,284 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml - moved to failed directory
2025-07-11 16:39:15,287 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved B97F5E3A-4AF8-4365-B8D6-BDE6CBC16FB8.xml to data/failed
2025-07-11 16:39:15,288 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:15,289 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing C0B10257-639A-4AF0-9805-17293FA38AE3.xml (45/64)
2025-07-11 16:39:15,289 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:15,290 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: C0B10257-639A-4AF0-9805-17293FA38AE3.xml
2025-07-11 16:39:15,291 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: C0B10257-639A-4AF0-9805-17293FA38AE3.xml
2025-07-11 16:39:15,300 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:15,301 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: C0B10257-639A-4AF0-9805-17293FA38AE3
2025-07-11 16:39:15,303 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:15,304 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:15,308 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 43.64s ago] ('C0B10257-639A-4AF0-9805-17293FA38AE3', 1, 0)
2025-07-11 16:39:15,309 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID C0B10257-639A-4AF0-9805-17293FA38AE3 already exists (ID: 99)
2025-07-11 16:39:15,315 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: C0B10257-639A-4AF0-9805-17293FA38AE3.xml
2025-07-11 16:39:15,316 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: C0B10257-639A-4AF0-9805-17293FA38AE3.xml
2025-07-11 16:39:15,317 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-11 16:39:15,319 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $603.56
2025-07-11 16:39:15,321 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:15,322 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:15,323 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: C0B10257-639A-4AF0-9805-17293FA38AE3
2025-07-11 16:39:15,323 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: C0B10257-639A-4AF0-9805-17293FA38AE3.xml
2025-07-11 16:39:15,324 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 14:20:00
2025-07-11 16:39:15,325 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: MUNICIPIO DE LA PAZ BCS
2025-07-11 16:39:15,326 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 603.56
2025-07-11 16:39:15,328 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:15,334 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:15,337 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:15,338 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.78s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process C0B10257-639A-4AF0-9805-17293FA38AE3.xml', '{"filename": "C0B10257-639A-4AF0-9805-17293FA38AE3.xml", "processing_time": 0.042498111724853516, "item_count": 0, "success": false, "error": "DUPLICATE: UUID C0B10257-639A-4AF0-9805-17293FA38AE3 already exists"}', 0.042498111724853516, None, 'C0B10257-639A-4AF0-9805-17293FA38AE3.xml', None, '2025-07-11 23:39:15.337179')
2025-07-11 16:39:15,346 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:15,356 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice C0B10257-639A-4AF0-9805-17293FA38AE3.xml - moved to failed directory
2025-07-11 16:39:15,358 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved C0B10257-639A-4AF0-9805-17293FA38AE3.xml to data/failed
2025-07-11 16:39:15,360 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:15,365 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml (46/64)
2025-07-11 16:39:15,367 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:15,367 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml
2025-07-11 16:39:15,371 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml
2025-07-11 16:39:15,373 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:15,374 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02
2025-07-11 16:39:15,375 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:15,378 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:15,385 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 43.72s ago] ('D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02', 1, 0)
2025-07-11 16:39:15,387 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02 already exists (ID: 100)
2025-07-11 16:39:15,388 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml
2025-07-11 16:39:15,389 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml
2025-07-11 16:39:15,389 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 00:00:00
2025-07-11 16:39:15,390 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2437.59
2025-07-11 16:39:15,390 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:15,392 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:15,393 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02
2025-07-11 16:39:15,395 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml
2025-07-11 16:39:15,398 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 17:45:44
2025-07-11 16:39:15,402 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: CERVEZAS CUAUHTEMOC MOCTEZUMA
2025-07-11 16:39:15,403 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 2437.59
2025-07-11 16:39:15,403 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:15,404 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:15,405 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:15,406 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.85s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml', '{"filename": "D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml", "processing_time": 0.03678131103515625, "item_count": 0, "success": false, "error": "DUPLICATE: UUID D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02 already exists"}', 0.03678131103515625, None, 'D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml', None, '2025-07-11 23:39:15.405902')
2025-07-11 16:39:15,415 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:15,421 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml - moved to failed directory
2025-07-11 16:39:15,424 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved D0A732D1-BC4F-4781-B08F-CAEDCD6B5C02.xml to data/failed
2025-07-11 16:39:15,426 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:15,427 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml (47/64)
2025-07-11 16:39:15,429 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:15,434 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml
2025-07-11 16:39:15,436 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml
2025-07-11 16:39:15,440 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:15,441 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: D0EB9CD6-3DAC-4077-8716-B034369ABB23
2025-07-11 16:39:15,443 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:15,449 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:15,451 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 43.78s ago] ('D0EB9CD6-3DAC-4077-8716-B034369ABB23', 1, 0)
2025-07-11 16:39:15,454 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID D0EB9CD6-3DAC-4077-8716-B034369ABB23 already exists (ID: 101)
2025-07-11 16:39:15,454 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml
2025-07-11 16:39:15,455 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml
2025-07-11 16:39:15,455 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-07 00:00:00
2025-07-11 16:39:15,456 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1497.50
2025-07-11 16:39:15,457 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:15,457 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:15,458 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: D0EB9CD6-3DAC-4077-8716-B034369ABB23
2025-07-11 16:39:15,459 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml
2025-07-11 16:39:15,460 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-07 07:05:00
2025-07-11 16:39:15,466 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:39:15,466 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 1497.50
2025-07-11 16:39:15,469 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:15,470 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:15,471 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:15,473 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 40.91s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml', '{"filename": "D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml", "processing_time": 0.036673545837402344, "item_count": 0, "success": false, "error": "DUPLICATE: UUID D0EB9CD6-3DAC-4077-8716-B034369ABB23 already exists"}', 0.036673545837402344, None, 'D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml', None, '2025-07-11 23:39:15.471713')
2025-07-11 16:39:15,481 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:15,491 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml - moved to failed directory
2025-07-11 16:39:15,499 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved D0EB9CD6-3DAC-4077-8716-B034369ABB23.xml to data/failed
2025-07-11 16:39:15,503 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:15,505 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml (48/64)
2025-07-11 16:39:15,506 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:15,507 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml
2025-07-11 16:39:15,508 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml
2025-07-11 16:39:15,520 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:15,520 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: D23B3AF6-E187-44FA-84E0-EF33FE58DE7C
2025-07-11 16:39:15,521 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:15,524 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:15,540 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 43.87s ago] ('D23B3AF6-E187-44FA-84E0-EF33FE58DE7C', 1, 0)
2025-07-11 16:39:15,550 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID D23B3AF6-E187-44FA-84E0-EF33FE58DE7C already exists (ID: 102)
2025-07-11 16:39:15,554 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml
2025-07-11 16:39:15,556 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml
2025-07-11 16:39:15,558 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-15 00:00:00
2025-07-11 16:39:15,563 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $0.00
2025-07-11 16:39:15,569 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:15,572 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:15,575 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: D23B3AF6-E187-44FA-84E0-EF33FE58DE7C
2025-07-11 16:39:15,579 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml
2025-07-11 16:39:15,587 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-15 03:12:42
2025-07-11 16:39:15,588 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: BBVA MEXICO, S.A., INSTITUCION DE BANCA MULTIPLE, GRUPO FINANCIERO BBVA MEXICO
2025-07-11 16:39:15,589 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 0.00
2025-07-11 16:39:15,590 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:15,592 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:15,600 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:15,606 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 41.05s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml', '{"filename": "D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml", "processing_time": 0.08556246757507324, "item_count": 0, "success": false, "error": "DUPLICATE: UUID D23B3AF6-E187-44FA-84E0-EF33FE58DE7C already exists"}', 0.08556246757507324, None, 'D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml', None, '2025-07-11 23:39:15.600610')
2025-07-11 16:39:15,611 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:15,627 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml - moved to failed directory
2025-07-11 16:39:15,637 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved D23B3AF6-E187-44FA-84E0-EF33FE58DE7C.xml to data/failed
2025-07-11 16:39:15,638 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:15,639 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing D43FD29D-9115-4198-B521-9B9D2C51F209.xml (49/64)
2025-07-11 16:39:15,640 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:15,643 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: D43FD29D-9115-4198-B521-9B9D2C51F209.xml
2025-07-11 16:39:15,649 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: D43FD29D-9115-4198-B521-9B9D2C51F209.xml
2025-07-11 16:39:15,656 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:15,658 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: D43FD29D-9115-4198-B521-9B9D2C51F209
2025-07-11 16:39:15,660 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:15,669 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:15,678 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.01s ago] ('D43FD29D-9115-4198-B521-9B9D2C51F209', 1, 0)
2025-07-11 16:39:15,686 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID D43FD29D-9115-4198-B521-9B9D2C51F209 already exists (ID: 103)
2025-07-11 16:39:15,688 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: D43FD29D-9115-4198-B521-9B9D2C51F209.xml
2025-07-11 16:39:15,689 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: D43FD29D-9115-4198-B521-9B9D2C51F209.xml
2025-07-11 16:39:15,691 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 00:00:00
2025-07-11 16:39:15,692 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $319.00
2025-07-11 16:39:15,700 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:15,704 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:15,705 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: D43FD29D-9115-4198-B521-9B9D2C51F209
2025-07-11 16:39:15,705 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: D43FD29D-9115-4198-B521-9B9D2C51F209.xml
2025-07-11 16:39:15,706 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 18:43:43
2025-07-11 16:39:15,706 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: EXPINS
2025-07-11 16:39:15,709 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 319.00
2025-07-11 16:39:15,711 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:15,717 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:15,719 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:15,720 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 41.16s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process D43FD29D-9115-4198-B521-9B9D2C51F209.xml', '{"filename": "D43FD29D-9115-4198-B521-9B9D2C51F209.xml", "processing_time": 0.07314109802246094, "item_count": 0, "success": false, "error": "DUPLICATE: UUID D43FD29D-9115-4198-B521-9B9D2C51F209 already exists"}', 0.07314109802246094, None, 'D43FD29D-9115-4198-B521-9B9D2C51F209.xml', None, '2025-07-11 23:39:15.719683')
2025-07-11 16:39:15,724 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:15,740 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice D43FD29D-9115-4198-B521-9B9D2C51F209.xml - moved to failed directory
2025-07-11 16:39:15,746 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved D43FD29D-9115-4198-B521-9B9D2C51F209.xml to data/failed
2025-07-11 16:39:15,750 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:15,751 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml (50/64)
2025-07-11 16:39:15,753 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:15,754 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml
2025-07-11 16:39:15,755 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml
2025-07-11 16:39:15,758 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:15,760 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: D4F2EBCD-1E69-4990-AE06-DA683ED84393
2025-07-11 16:39:15,770 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:15,772 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:15,787 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.12s ago] ('D4F2EBCD-1E69-4990-AE06-DA683ED84393', 1, 0)
2025-07-11 16:39:15,789 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID D4F2EBCD-1E69-4990-AE06-DA683ED84393 already exists (ID: 104)
2025-07-11 16:39:15,791 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml
2025-07-11 16:39:15,794 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml
2025-07-11 16:39:15,800 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-11 16:39:15,805 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2171.65
2025-07-11 16:39:15,809 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:15,813 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:15,819 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: D4F2EBCD-1E69-4990-AE06-DA683ED84393
2025-07-11 16:39:15,936 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml
2025-07-11 16:39:15,987 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 10:47:14
2025-07-11 16:39:16,003 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: CERVEZAS CUAUHTEMOC MOCTEZUMA
2025-07-11 16:39:16,121 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 2171.65
2025-07-11 16:39:16,124 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:16,133 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:16,320 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:16,339 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 41.78s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml', '{"filename": "D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml", "processing_time": 0.3768012523651123, "item_count": 0, "success": false, "error": "DUPLICATE: UUID D4F2EBCD-1E69-4990-AE06-DA683ED84393 already exists"}', 0.3768012523651123, None, 'D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml', None, '2025-07-11 23:39:16.320728')
2025-07-11 16:39:16,371 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:16,389 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml - moved to failed directory
2025-07-11 16:39:16,392 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved D4F2EBCD-1E69-4990-AE06-DA683ED84393.xml to data/failed
2025-07-11 16:39:16,404 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:16,406 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing DC82A272-2FA8-4F2F-A807-6B6F55BDF18E.xml (51/64)
2025-07-11 16:39:16,407 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:16,409 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: DC82A272-2FA8-4F2F-A807-6B6F55BDF18E.xml
2025-07-11 16:39:16,411 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: DC82A272-2FA8-4F2F-A807-6B6F55BDF18E.xml
2025-07-11 16:39:16,423 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:16,424 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: DC82A272-2FA8-4F2F-A807-6B6F55BDF18E
2025-07-11 16:39:16,427 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:16,432 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:16,443 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.77s ago] ('DC82A272-2FA8-4F2F-A807-6B6F55BDF18E', 1, 0)
2025-07-11 16:39:16,453 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:16,455 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 3 items
2025-07-11 16:39:16,470 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:16,475 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:16,486 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 44.79s ago] ('sku_5fdb5cfc_47131821_desengrasante_liquido', 1, 0)
2025-07-11 16:39:16,491 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:16,494 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_5fdb5cfc_47131821_desengrasante_liquido
2025-07-11 16:39:18,001 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Detergente
2025-07-11 16:39:18,002 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Detergente (units_per_package: 1.0)
2025-07-11 16:39:18,005 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:18,008 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:18,015 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 46.32s ago] ('sku_8d7ae4ed_52152200_fibra_alambre', 1, 0)
2025-07-11 16:39:18,018 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:18,019 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_8d7ae4ed_52152200_fibra_alambre
2025-07-11 16:39:19,847 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Jabón
2025-07-11 16:39:19,848 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Jabón (units_per_package: 1.0)
2025-07-11 16:39:19,849 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:19,851 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:19,852 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 48.16s ago] ('sku_18d8e7f5_53131608_jabon', 1, 0)
2025-07-11 16:39:19,855 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:19,856 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_18d8e7f5_53131608_jabon
2025-07-11 16:39:21,459 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Suministros -> Jabón
2025-07-11 16:39:21,460 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Suministros -> Jabón (units_per_package: 1.0)
2025-07-11 16:39:21,463 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-11 16:39:21,465 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:21,466 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoices (uuid, series, folio, invoice_type, version, issue_date, certification_date, created_at, updated_at, issuer_rfc, issuer_name, issuer_fiscal_regime, issuer_use_cfdi, issuer_residence, issuer_tax_id, receiver_rfc, receiver_name, receiver_fiscal_address, receiver_residence, receiver_tax_id, receiver_use_cfdi, payment_method, payment_method_desc, payment_terms, payment_conditions, currency, exchange_rate, subtotal, total_discount, total_transferred_taxes, total_withheld_taxes, total_amount, digital_stamp, certificate_number, certificate, sat_seal, sat_certificate, fiscal_folio, stamp_datetime, expedition_place, export_operation, confirmation, source_filename, xml_file_size, confidence_score, processing_time, processing_status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:21,467 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 47.08s ago] ('DC82A272-2FA8-4F2F-A807-6B6F55BDF18E', None, '51750', 'I', '4.0', '2025-07-06 08:30:17.000000', None, '2025-07-11 23:39:21.466181', '2025-07-11 23:39:21.466181', 'PIVV******RR4', 'VANESSA IVON PIÑUELAS VERDUGO', '612', None, None, None, 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', '23300', None, None, None, '03', None, 'PUE', None, 'MXN', 1.0, 284.48, 0.0, 45.52, 0.0, 330.0, 'PoknH95wtKTohjshgMZgAADTOzIPgdKKzGrAsUxmiDFOujvFIs4KPzmo6quu8FMBNr44UUvyjQteY92wdddPjapCgV2PsNVFFjQzr+xpHbUSxjeCncmLUuLu3uWSi8L+6p+hkJbwrtFh7c52xiMuo ... (46 characters truncated) ... 4ZCkp+v5J3itXq+9H7JV7LzfijSnm7t5s+Z0g2xuke3SBQO9UvNHfF0Bi1LZ+XTzxLDucOtRPet3WTwa7XaAG5c+mc6EWVmiJ9Dn7WXPy6nAJuQRBK8l7OjWwFXh3gKcLu7NmvjoXsNc8VQxoDw==', '00001000000705018977', None, 'cf+0J20n0y60kwHSDYsS6Qw1MaRBbuVRoWyYpRF1V+4reeQiWW77tFbaRlQZ9mdSMwtjmOvjI5+ypNDYbfbgTnjkzGDsiSWCP8t2L+kDsYqxSz2MW+jpbmtF16030wig1w8r0kapte22f06uNXXFj ... (46 characters truncated) ... dtBCdlCzLUplirt8XVKBiN5j3fMsHoKkzEBnXJVQEEhES92oyoxa+JGLSisHEBn/x8hungaLoTJ21Tjns7Gzmc3vB3A2837EXBAOycM/g4UezyHTGZtMMsZoX/QyiwSe/808u/tVb2ciYBvHSDw==', None, 'DC82A272-2FA8-4F2F-A807-6B6F55BDF18E', '2025-07-06 09:30:18.000000', None, None, None, 'DC82A272-2FA8-4F2F-A807-6B6F55BDF18E.xml', 5769, None, None, 'processed')
2025-07-11 16:39:21,479 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Saved invoice DC82A272-2FA8-4F2F-A807-6B6F55BDF18E with 3 items (ID: 123)
2025-07-11 16:39:21,482 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE invoices SET confidence_score=?, processing_time=? WHERE invoices.id = ?
2025-07-11 16:39:21,483 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 47.08s ago] (0.9499999999999998, 4.924566268920898, 123)
2025-07-11 16:39:21,484 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:21,485 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 47.08s ago (insertmanyvalues) 1/3 (ordered; batch not supported)] (123, 1, '47131821', None, 'DESENGRASANTE LIQUIDO', 1.0, 'H87', None, 1.0, None, 51.724138, 51.724138, 0.0, 0.0, 60.0, 'Suministros', 'Detergente', 'Limpiador multiuso', 'Litros', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_5fdb5cfc_47131821_desengrasante_liquido', '2025-07-11 23:39:21.484181', '{"processing_time": 1.499875783920288, "api_attempt": 1, "reasoning": "\\"DESENGRASANTE LIQUIDO\\" translates to liquid degreaser, which falls under  ... (15 characters truncated) ... leaner. The standardized unit is Litros because it is a liquid. There is no package information, so units_per_package defaults to 1.", "error": null}', '2025-07-11 23:39:21.484181', '2025-07-11 23:39:21.484181')
2025-07-11 16:39:21,488 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:21,491 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 2/3 (ordered; batch not supported)] (123, 2, '52152200', None, 'FIBRA ALAMBRE', 1.0, 'H87', None, 1.0, None, 25.862069, 25.862069, 0.0, 0.0, 30.0, 'Suministros', 'Jabón', 'Esponjas y Fibras para Lavar', 'Piezas', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_8d7ae4ed_52152200_fibra_alambre', '2025-07-11 23:39:21.484181', '{"processing_time": 1.8255784511566162, "api_attempt": 1, "reasoning": "\\"FIBRA ALAMBRE\\" translates to \\"WIRE FIBER\\", which is a type of scrubb ... (1 characters truncated) ... ng pad. Therefore, it falls under \'Jab\\u00f3n\' -> \'Esponjas y Fibras para Lavar\'. The quantity is 1, so units_per_package is 1.", "error": null}', '2025-07-11 23:39:21.484181', '2025-07-11 23:39:21.484181')
2025-07-11 16:39:21,499 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:21,500 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 3/3 (ordered; batch not supported)] (123, 3, '53131608', None, 'JABON', 1.0, 'H87', None, 1.0, None, 206.896552, 206.896552, 0.0, 0.0, 240.0, 'Suministros', 'Jabón', 'Jabón en barra', 'Piezas', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_18d8e7f5_53131608_jabon', '2025-07-11 23:39:21.484181', '{"processing_time": 1.5991120338439941, "api_attempt": 1, "reasoning": "\\"JABON\\" translates to \\"soap\\". The most appropriate sub-subcategory is \\"Jab\\u00f3n en barra\\" (bar soap). Quantity is 1 and no package information is provided, so units_per_package is 1.", "error": null}', '2025-07-11 23:39:21.484181', '2025-07-11 23:39:21.484181')
2025-07-11 16:39:21,502 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:21,515 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [METADATA] Creating business metadata
2025-07-11 16:39:21,517 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Created metadata for invoice ID 123
2025-07-11 16:39:21,518 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:21,520 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_metadata (invoice_id, uuid, folio, issue_date, issuer_rfc, issuer_name, receiver_rfc, receiver_name, original_currency, original_total, exchange_rate, mxn_total, payment_method, payment_terms, is_installments, is_immediate, total_items, total_categories, avg_confidence, processing_status, has_errors, error_count, is_export, has_digital_stamp, is_certified, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:21,521 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 47.05s ago] (123, 'DC82A272-2FA8-4F2F-A807-6B6F55BDF18E', '51750', '2025-07-06', 'PIVV******RR4', 'VANESSA IVON PIÑUELAS VERDUGO', 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', 'MXN', 330.0, 1.0, 330.0, '03', 'PUE', 0, 1, 3, 1, 0.9499999999999998, 'completed', 0, 0, 0, 1, 1, '2025-07-11 23:39:21.520305', '2025-07-11 23:39:21.520305')
2025-07-11 16:39:21,531 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:21,538 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Saving to purchase_details table
2025-07-11 16:39:21,541 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:21,547 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.id = ?
2025-07-11 16:39:21,550 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 47.04s ago] (123,)
2025-07-11 16:39:21,552 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoice_metadata.id AS invoice_metadata_id, invoice_metadata.invoice_id AS invoice_metadata_invoice_id, invoice_metadata.uuid AS invoice_metadata_uuid, invoice_metadata.folio AS invoice_metadata_folio, invoice_metadata.issue_date AS invoice_metadata_issue_date, invoice_metadata.issuer_rfc AS invoice_metadata_issuer_rfc, invoice_metadata.issuer_name AS invoice_metadata_issuer_name, invoice_metadata.receiver_rfc AS invoice_metadata_receiver_rfc, invoice_metadata.receiver_name AS invoice_metadata_receiver_name, invoice_metadata.original_currency AS invoice_metadata_original_currency, invoice_metadata.original_total AS invoice_metadata_original_total, invoice_metadata.exchange_rate AS invoice_metadata_exchange_rate, invoice_metadata.mxn_total AS invoice_metadata_mxn_total, invoice_metadata.payment_method AS invoice_metadata_payment_method, invoice_metadata.payment_terms AS invoice_metadata_payment_terms, invoice_metadata.is_installments AS invoice_metadata_is_installments, invoice_metadata.is_immediate AS invoice_metadata_is_immediate, invoice_metadata.total_items AS invoice_metadata_total_items, invoice_metadata.total_categories AS invoice_metadata_total_categories, invoice_metadata.avg_confidence AS invoice_metadata_avg_confidence, invoice_metadata.processing_status AS invoice_metadata_processing_status, invoice_metadata.has_errors AS invoice_metadata_has_errors, invoice_metadata.error_count AS invoice_metadata_error_count, invoice_metadata.is_export AS invoice_metadata_is_export, invoice_metadata.has_digital_stamp AS invoice_metadata_has_digital_stamp, invoice_metadata.is_certified AS invoice_metadata_is_certified, invoice_metadata.created_at AS invoice_metadata_created_at, invoice_metadata.updated_at AS invoice_metadata_updated_at 
FROM invoice_metadata 
WHERE invoice_metadata.invoice_id = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:21,557 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 47.03s ago] (123, 1, 0)
2025-07-11 16:39:21,566 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - ROLLBACK
2025-07-11 16:39:21,567 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 37 values for 38 columns
2025-07-11 16:39:21,568 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Failed to save to purchase_details table: 37 values for 38 columns
2025-07-11 16:39:21,571 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:21,577 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:21,579 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 47.02s ago] (123, 'INFO', 'batch_processor', 'process_file', 'Successfully processed DC82A272-2FA8-4F2F-A807-6B6F55BDF18E.xml', '{"filename": "DC82A272-2FA8-4F2F-A807-6B6F55BDF18E.xml", "processing_time": 5.161843538284302, "item_count": 3, "success": true, "gemini_calls": 3, "approved_skus": 0, "avg_confidence": 0.9499999999999998}', 5.161843538284302, None, 'DC82A272-2FA8-4F2F-A807-6B6F55BDF18E.xml', None, '2025-07-11 23:39:21.576772')
2025-07-11 16:39:21,584 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:21,596 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SUCCESS] Processed DC82A272-2FA8-4F2F-A807-6B6F55BDF18E.xml in 5.16s
2025-07-11 16:39:21,600 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved DC82A272-2FA8-4F2F-A807-6B6F55BDF18E.xml to data/processed
2025-07-11 16:39:21,602 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:21,605 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml (52/64)
2025-07-11 16:39:21,611 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:21,612 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml
2025-07-11 16:39:21,616 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml
2025-07-11 16:39:21,620 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:21,621 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3
2025-07-11 16:39:21,624 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:21,631 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:21,636 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 49.97s ago] ('DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3', 1, 0)
2025-07-11 16:39:21,638 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3 already exists (ID: 105)
2025-07-11 16:39:21,641 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml
2025-07-11 16:39:21,645 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml
2025-07-11 16:39:21,647 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-03 00:00:00
2025-07-11 16:39:21,648 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1713.12
2025-07-11 16:39:21,649 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:21,650 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:21,651 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3
2025-07-11 16:39:21,652 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml
2025-07-11 16:39:21,653 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-03 11:09:49
2025-07-11 16:39:21,654 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: FERRETERIA ROMEX
2025-07-11 16:39:21,655 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 1713.12
2025-07-11 16:39:21,658 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:21,662 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:21,666 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:21,667 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 47.11s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml', '{"filename": "DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml", "processing_time": 0.048986196517944336, "item_count": 0, "success": false, "error": "DUPLICATE: UUID DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3 already exists"}', 0.048986196517944336, None, 'DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml', None, '2025-07-11 23:39:21.666154')
2025-07-11 16:39:21,677 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:21,687 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml - moved to failed directory
2025-07-11 16:39:21,695 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved DF10E6DB-8937-4ADC-BE9D-44F54C9A57B3.xml to data/failed
2025-07-11 16:39:21,698 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:21,699 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing E11056BF-CB35-41B5-AF5B-CFB0E089A32E.xml (53/64)
2025-07-11 16:39:21,699 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:21,701 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: E11056BF-CB35-41B5-AF5B-CFB0E089A32E.xml
2025-07-11 16:39:21,702 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: E11056BF-CB35-41B5-AF5B-CFB0E089A32E.xml
2025-07-11 16:39:21,711 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:21,715 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: E11056BF-CB35-41B5-AF5B-CFB0E089A32E
2025-07-11 16:39:21,716 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:21,717 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:21,723 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 50.05s ago] ('E11056BF-CB35-41B5-AF5B-CFB0E089A32E', 1, 0)
2025-07-11 16:39:21,729 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:21,732 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 13 items
2025-07-11 16:39:21,734 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:21,735 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:21,741 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 50.05s ago] ('sku_16b3abec_50131800_queso_ricotta', 1, 0)
2025-07-11 16:39:21,747 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:21,749 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_16b3abec_50131800_queso_ricotta
2025-07-11 16:39:23,503 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Queso
2025-07-11 16:39:23,508 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Queso (units_per_package: 1.0)
2025-07-11 16:39:23,511 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:23,513 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:23,515 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 51.82s ago] ('sku_65d00f8a_50404101_albahaca', 1, 0)
2025-07-11 16:39:23,516 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_65d00f8a_50404101_albahaca -> Vegetales
2025-07-11 16:39:23,518 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:39:23,520 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 51.81s ago] (5, '2025-07-11 23:39:23.516763', 146)
2025-07-11 16:39:23,531 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:23,543 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_f6ce5c99_50404600_lechuga_mixta
2025-07-11 16:39:23,548 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:23,549 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:23,553 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 51.86s ago] ('sku_cfc58a92_50193104_pure_de_tomate_el_fuerte', 1, 0)
2025-07-11 16:39:23,556 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:23,562 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_cfc58a92_50193104_pure_de_tomate_el_fuerte
2025-07-11 16:39:25,042 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Conservas
2025-07-11 16:39:25,042 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Conservas (units_per_package: 1.0)
2025-07-11 16:39:25,043 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_8f28f7c7_50402300_repollo_verde
2025-07-11 16:39:25,045 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_44f0bbec_50403900_calabaza_negra
2025-07-11 16:39:25,046 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_07ae298e_50304100_limon_amarillo
2025-07-11 16:39:25,047 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:25,048 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:25,050 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 53.36s ago] ('sku_d2926dd5_50131800_queso_asadero', 1, 0)
2025-07-11 16:39:25,055 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:25,060 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_d2926dd5_50131800_queso_asadero
2025-07-11 16:39:26,629 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Queso
2025-07-11 16:39:26,630 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Queso (units_per_package: 1.0)
2025-07-11 16:39:26,631 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_4d8ff92b_50404600_lechuga_bola
2025-07-11 16:39:26,633 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_c0496069_50406500_tomate_salades
2025-07-11 16:39:26,634 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg
2025-07-11 16:39:26,640 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:26,643 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:26,644 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 54.95s ago] ('sku_70ae329c_50301500_manzana_verde', 1, 0)
2025-07-11 16:39:26,645 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_70ae329c_50301500_manzana_verde -> Vegetales
2025-07-11 16:39:26,646 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:39:26,647 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 54.94s ago] (5, '2025-07-11 23:39:26.645239', 131)
2025-07-11 16:39:26,655 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:26,664 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:26,666 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:26,673 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 54.98s ago] ('sku_a1e4b9dc_50221303_maicena_fecula_de_maiz', 1, 0)
2025-07-11 16:39:26,677 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:26,678 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_a1e4b9dc_50221303_maicena_fecula_de_maiz
2025-07-11 16:39:28,457 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Harinas
2025-07-11 16:39:28,458 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Harinas (units_per_package: 1.0)
2025-07-11 16:39:28,458 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-11 16:39:28,460 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:28,461 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoices (uuid, series, folio, invoice_type, version, issue_date, certification_date, created_at, updated_at, issuer_rfc, issuer_name, issuer_fiscal_regime, issuer_use_cfdi, issuer_residence, issuer_tax_id, receiver_rfc, receiver_name, receiver_fiscal_address, receiver_residence, receiver_tax_id, receiver_use_cfdi, payment_method, payment_method_desc, payment_terms, payment_conditions, currency, exchange_rate, subtotal, total_discount, total_transferred_taxes, total_withheld_taxes, total_amount, digital_stamp, certificate_number, certificate, sat_seal, sat_certificate, fiscal_folio, stamp_datetime, expedition_place, export_operation, confirmation, source_filename, xml_file_size, confidence_score, processing_time, processing_status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:28,461 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 54.08s ago] ('E11056BF-CB35-41B5-AF5B-CFB0E089A32E', None, '51578', 'I', '4.0', '2025-07-02 11:43:51.000000', None, '2025-07-11 23:39:28.461144', '2025-07-11 23:39:28.461144', 'PIVV******RR4', 'VANESSA IVON PIÑUELAS VERDUGO', '612', None, None, None, 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', '23300', None, None, None, '99', None, 'PPD', None, 'MXN', 1.0, 894.3, 0.0, 0.0, 0.0, 894.3, 'TflHONYBI1jefuXhau5qkFoWIW7KpIw5TFsZCf9QZt+n7P7S7T6DYdJcrN4Tkj4c74O7d+iSxF+9Y5hJuj/d5MK0KFeqTeYBP3E2FXjjN07MsSuFJXnw5QAW6ciLVMcSoB/C6LbJWkkLBkGq/s5tC ... (46 characters truncated) ... jyWWBEuQPDK066S2BzG0nV4DhEroFeqcx0BeR7YLiVH2iLFQKPr/Vn3PNu7KYK244MBhF5WOPUSIdsEe/RSePmO51vdN7k5WAu6aQtam9U5lCcc95YTz9HbF1VIda/D1iBBV0f/WD7LRl+ZJ2ww==', '00001000000705018977', None, 'eRVpwT5y/VV/tNPdZdr8IfvFwxNj5ryJyon0A/Y8KqMUv+kz13TYTno4l2JDFYBGUodOSDiyjgREGKpXE5MT/T47+smR2xxmRiZ1ZkMuADFnVEEHButNfmJqkNi3ErQVpjnznCwGRK5m28vng/DV5 ... (46 characters truncated) ... qN4YHtM6/BC+xPfZsxtpDn5c54sBPlmj4XzzHwRqHs5iHSA28XMXzvUNE+phgi/vaEIg7MdqWYA83IKwSfJKfdHPh1sVg5QJKjbzal2zHewmmvuvy/2rFdEgV7gB/NLr9ZEkx9b6hmN7jVRrEvw==', None, 'E11056BF-CB35-41B5-AF5B-CFB0E089A32E', '2025-07-02 12:43:52.000000', None, None, None, 'E11056BF-CB35-41B5-AF5B-CFB0E089A32E.xml', 9675, None, None, 'processed')
2025-07-11 16:39:28,473 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Saved invoice E11056BF-CB35-41B5-AF5B-CFB0E089A32E with 13 items (ID: 124)
2025-07-11 16:39:28,474 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE invoices SET confidence_score=?, processing_time=? WHERE invoices.id = ?
2025-07-11 16:39:28,476 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 54.08s ago] (0.973076923076923, 11.10545563697815, 124)
2025-07-11 16:39:28,478 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:28,478 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 54.07s ago (insertmanyvalues) 1/13 (ordered; batch not supported)] (124, 1, '50131800', None, 'QUESO RICOTTA', 1.0, 'H87', None, 1.0, None, 150.0, 150.0, 0.0, 0.0, 150.0, 'Lacteos', 'Queso', 'Queso Ricotta', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_16b3abec_50131800_queso_ricotta', '2025-07-11 23:39:28.477156', '{"processing_time": 1.7529191970825195, "api_attempt": 1, "reasoning": "The item is \'QUESO RICOTTA\', which falls under the \'Queso\' subcategory wi ... (68 characters truncated) ... t a standard unit of measure. Assuming it\'s sold as a single item, the standardized unit is Kilogramos, and units_per_package is 1.", "error": null}', '2025-07-11 23:39:28.477156', '2025-07-11 23:39:28.478239')
2025-07-11 16:39:28,481 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:28,488 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 2/13 (ordered; batch not supported)] (124, 2, '50404101', None, 'ALBAHACA', 0.48, 'KGM', None, 1.0, None, 120.0, 57.6, 0.0, 0.0, 57.6, 'Vegetales', 'Verduras', 'Albahaca', 'Kilogramos', 0.48, 1.0, 1.0, 'approved_sku', 'approved', 'sku_65d00f8a_50404101_albahaca', '2025-07-11 23:39:28.478239', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:28.478239', '2025-07-11 23:39:28.478239')
2025-07-11 16:39:28,491 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:28,493 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 3/13 (ordered; batch not supported)] (124, 3, '50404600', None, 'LECHUGA MIXTA', 1.0, 'H87', None, 1.0, None, 130.0, 130.0, 0.0, 0.0, 130.0, 'Vegetales', 'Verduras', 'Lechuga Mixta', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_f6ce5c99_50404600_lechuga_mixta', '2025-07-11 23:39:28.478239', '{"processing_time": 1.4898877143859863, "api_attempt": 1, "reasoning": "The item is \'LECHUGA MIXTA\' which is \'Lechuga Mixta\' in the Vegetables >  ... (30 characters truncated) ...  a vegetable, the standardized unit is Kilogramos. The quantity is 1 and there is no package information, so units_per_package is 1.", "error": null}', '2025-07-11 23:39:28.478239', '2025-07-11 23:39:28.478239')
2025-07-11 16:39:28,496 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:28,498 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 4/13 (ordered; batch not supported)] (124, 4, '50193104', None, 'PURE DE TOMATE EL FUERTE', 1.0, 'H87', None, 1.0, None, 40.0, 40.0, 0.0, 0.0, 40.0, 'Abarrotes', 'Conservas', 'Pure de Tomate', 'Piezas', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_cfc58a92_50193104_pure_de_tomate_el_fuerte', '2025-07-11 23:39:28.478239', '{"processing_time": 1.4738552570343018, "api_attempt": 1, "reasoning": "The item is described as \'PURE DE TOMATE\', which directly corresponds to th ... (24 characters truncated) ... -subcategory under \'Conservas\'. The quantity is 1, and no packaging information is provided, so it\'s assumed to be a single unit.", "error": null}', '2025-07-11 23:39:28.478239', '2025-07-11 23:39:28.478239')
2025-07-11 16:39:28,504 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:28,506 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 5/13 (ordered; batch not supported)] (124, 5, '50402300', None, 'REPOLLO VERDE', 2.36, 'KGM', None, 1.0, None, 25.0, 59.0, 0.0, 0.0, 59.0, 'Vegetales', 'Verduras', 'Repollo', 'Kilogramos', 2.36, 1.0, 1.0, 'approved_sku', 'approved', 'sku_8f28f7c7_50402300_repollo_verde', '2025-07-11 23:39:28.478239', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:28.478239', '2025-07-11 23:39:28.478239')
2025-07-11 16:39:28,508 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:28,509 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 6/13 (ordered; batch not supported)] (124, 6, '50403900', None, 'CALABAZA NEGRA', 2.36, 'KGM', None, 1.0, None, 35.0, 82.6, 0.0, 0.0, 82.6, 'Vegetales', 'Verduras', 'Calabaza', 'Kilogramos', 2.36, 1.0, 1.0, 'approved_sku', 'approved', 'sku_44f0bbec_50403900_calabaza_negra', '2025-07-11 23:39:28.478239', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:28.478239', '2025-07-11 23:39:28.478239')
2025-07-11 16:39:28,511 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:28,512 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 7/13 (ordered; batch not supported)] (124, 7, '50304100', None, 'LIMON AMARILLO', 0.6, 'KGM', None, 1.0, None, 58.0, 34.8, 0.0, 0.0, 34.8, 'Vegetales', 'Frutas', 'Limon Amarillo', 'Kilogramos', 0.6, 1.0, 1.0, 'approved_sku', 'approved', 'sku_07ae298e_50304100_limon_amarillo', '2025-07-11 23:39:28.478239', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:28.478239', '2025-07-11 23:39:28.478239')
2025-07-11 16:39:28,514 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:28,518 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 8/13 (ordered; batch not supported)] (124, 8, '50131800', None, 'QUESO ASADERO', 0.56, 'KGM', None, 1.0, None, 155.0, 86.8, 0.0, 0.0, 86.8, 'Lacteos', 'Queso', 'Queso Amarillo', 'Kilogramos', 0.56, 1.0, 0.95, 'gemini_api', 'pending', 'sku_d2926dd5_50131800_queso_asadero', '2025-07-11 23:39:28.478239', '{"processing_time": 1.5683948993682861, "api_attempt": 1, "reasoning": "\\"QUESO ASADERO\\" is classified as \\"Queso Amarillo\\" within the \\"Queso\\" subcategory of \\"Lacteos\\". The unit is KGM (Kilogramos), and since it\'s sold by weight, units_per_package is 1.", "error": null}', '2025-07-11 23:39:28.478239', '2025-07-11 23:39:28.478239')
2025-07-11 16:39:28,523 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:28,526 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 9/13 (ordered; batch not supported)] (124, 9, '50404600', None, 'LECHUGA BOLA', 1.0, 'H87', None, 1.0, None, 25.0, 25.0, 0.0, 0.0, 25.0, 'Vegetales', 'Verduras', 'Lechuga Bola', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_4d8ff92b_50404600_lechuga_bola', '2025-07-11 23:39:28.478239', '{"processing_time": 1.4838519096374512, "api_attempt": 1, "reasoning": "\\"LECHUGA BOLA\\" is classified under \'Vegetales\' -> \'Verduras\' -> \'Lec ... (18 characters truncated) ...  it\'s a vegetable, the standardized unit is \'Kilogramos\'. No package information is provided, so units_per_package defaults to 1.", "error": null}', '2025-07-11 23:39:28.478239', '2025-07-11 23:39:28.478239')
2025-07-11 16:39:28,527 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:28,528 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 10/13 (ordered; batch not supported)] (124, 10, '50406500', None, 'TOMATE SALADES', 1.08, 'KGM', None, 1.0, None, 25.0, 27.0, 0.0, 0.0, 27.0, 'Vegetales', 'Frutas', 'Tomate Saladette', 'Kilogramos', 1.08, 1.0, 1.0, 'approved_sku', 'approved', 'sku_c0496069_50406500_tomate_salades', '2025-07-11 23:39:28.478239', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:28.478239', '2025-07-11 23:39:28.478239')
2025-07-11 16:39:28,530 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:28,532 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 11/13 (ordered; batch not supported)] (124, 11, '50202302', None, 'HIELO BOLSA DE HIELO 5KG', 1.0, 'H87', None, 1.0, 'Bolsa', 33.0, 33.0, 0.0, 0.0, 33.0, 'Abarrotes', 'Otros-a', 'Otros', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg', '2025-07-11 23:39:28.478239', '{"processing_time": 1.5589585304260254, "api_attempt": 1, "reasoning": "Ice is not explicitly listed, so it falls under \'Otros\' in Abarrotes. The item is sold in a 5KG bag, but the units are per item, so units_per_package is 1.", "error": null}', '2025-07-11 23:39:28.478239', '2025-07-11 23:39:28.478239')
2025-07-11 16:39:28,539 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:28,541 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 12/13 (ordered; batch not supported)] (124, 12, '50301500', None, 'MANZANA VERDE', 1.1, 'KGM', None, 1.0, None, 55.0, 60.5, 0.0, 0.0, 60.5, 'Vegetales', 'Frutas', 'Manzana', 'Kilogramos', 1.1, 1.0, 1.0, 'approved_sku', 'approved', 'sku_70ae329c_50301500_manzana_verde', '2025-07-11 23:39:28.478239', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:28.478239', '2025-07-11 23:39:28.478239')
2025-07-11 16:39:28,543 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:28,543 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 13/13 (ordered; batch not supported)] (124, 13, '50221303', None, 'MAICENA FECULA DE MAIZ', 1.0, 'H87', None, 1.0, None, 108.0, 108.0, 0.0, 0.0, 108.0, 'Abarrotes', 'Harinas', 'Harina de maíz', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_a1e4b9dc_50221303_maicena_fecula_de_maiz', '2025-07-11 23:39:28.478239', '{"processing_time": 1.777588129043579, "api_attempt": 1, "reasoning": "\\"MAICENA FECULA DE MAIZ\\" is cornstarch, which is a type of corn flour. The quantity is 1 and the unit is H87, which is likely a bag or package. Assuming it\'s a standard package, units_per_package is 1.", "error": null}', '2025-07-11 23:39:28.478239', '2025-07-11 23:39:28.478239')
2025-07-11 16:39:28,547 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:28,562 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [METADATA] Creating business metadata
2025-07-11 16:39:28,564 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Created metadata for invoice ID 124
2025-07-11 16:39:28,566 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:28,571 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_metadata (invoice_id, uuid, folio, issue_date, issuer_rfc, issuer_name, receiver_rfc, receiver_name, original_currency, original_total, exchange_rate, mxn_total, payment_method, payment_terms, is_installments, is_immediate, total_items, total_categories, avg_confidence, processing_status, has_errors, error_count, is_export, has_digital_stamp, is_certified, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:28,574 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 54.1s ago] (124, 'E11056BF-CB35-41B5-AF5B-CFB0E089A32E', '51578', '2025-07-02', 'PIVV******RR4', 'VANESSA IVON PIÑUELAS VERDUGO', 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', 'MXN', 894.3, 1.0, 894.3, '99', 'PPD', 1, 0, 13, 3, 0.973076923076923, 'completed', 0, 0, 0, 1, 1, '2025-07-11 23:39:28.571802', '2025-07-11 23:39:28.571802')
2025-07-11 16:39:28,577 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:28,588 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Saving to purchase_details table
2025-07-11 16:39:28,592 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:28,594 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.id = ?
2025-07-11 16:39:28,596 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 54.09s ago] (124,)
2025-07-11 16:39:28,599 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoice_metadata.id AS invoice_metadata_id, invoice_metadata.invoice_id AS invoice_metadata_invoice_id, invoice_metadata.uuid AS invoice_metadata_uuid, invoice_metadata.folio AS invoice_metadata_folio, invoice_metadata.issue_date AS invoice_metadata_issue_date, invoice_metadata.issuer_rfc AS invoice_metadata_issuer_rfc, invoice_metadata.issuer_name AS invoice_metadata_issuer_name, invoice_metadata.receiver_rfc AS invoice_metadata_receiver_rfc, invoice_metadata.receiver_name AS invoice_metadata_receiver_name, invoice_metadata.original_currency AS invoice_metadata_original_currency, invoice_metadata.original_total AS invoice_metadata_original_total, invoice_metadata.exchange_rate AS invoice_metadata_exchange_rate, invoice_metadata.mxn_total AS invoice_metadata_mxn_total, invoice_metadata.payment_method AS invoice_metadata_payment_method, invoice_metadata.payment_terms AS invoice_metadata_payment_terms, invoice_metadata.is_installments AS invoice_metadata_is_installments, invoice_metadata.is_immediate AS invoice_metadata_is_immediate, invoice_metadata.total_items AS invoice_metadata_total_items, invoice_metadata.total_categories AS invoice_metadata_total_categories, invoice_metadata.avg_confidence AS invoice_metadata_avg_confidence, invoice_metadata.processing_status AS invoice_metadata_processing_status, invoice_metadata.has_errors AS invoice_metadata_has_errors, invoice_metadata.error_count AS invoice_metadata_error_count, invoice_metadata.is_export AS invoice_metadata_is_export, invoice_metadata.has_digital_stamp AS invoice_metadata_has_digital_stamp, invoice_metadata.is_certified AS invoice_metadata_is_certified, invoice_metadata.created_at AS invoice_metadata_created_at, invoice_metadata.updated_at AS invoice_metadata_updated_at 
FROM invoice_metadata 
WHERE invoice_metadata.invoice_id = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:28,605 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 54.08s ago] (124, 1, 0)
2025-07-11 16:39:28,611 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - ROLLBACK
2025-07-11 16:39:28,612 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 37 values for 38 columns
2025-07-11 16:39:28,613 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Failed to save to purchase_details table: 37 values for 38 columns
2025-07-11 16:39:28,615 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:28,617 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:28,622 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 54.06s ago] (124, 'INFO', 'batch_processor', 'process_file', 'Successfully processed E11056BF-CB35-41B5-AF5B-CFB0E089A32E.xml', '{"filename": "E11056BF-CB35-41B5-AF5B-CFB0E089A32E.xml", "processing_time": 6.914072751998901, "item_count": 13, "success": true, "gemini_calls": 7, "approved_skus": 6, "avg_confidence": 0.973076923076923}', 6.914072751998901, None, 'E11056BF-CB35-41B5-AF5B-CFB0E089A32E.xml', None, '2025-07-11 23:39:28.617246')
2025-07-11 16:39:28,625 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:28,633 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SUCCESS] Processed E11056BF-CB35-41B5-AF5B-CFB0E089A32E.xml in 6.91s
2025-07-11 16:39:28,640 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved E11056BF-CB35-41B5-AF5B-CFB0E089A32E.xml to data/processed
2025-07-11 16:39:28,641 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:28,642 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml (54/64)
2025-07-11 16:39:28,642 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:28,644 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml
2025-07-11 16:39:28,645 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml
2025-07-11 16:39:28,648 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:28,651 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: E1FF3B5A-D418-4080-91EC-E3DCB3811162
2025-07-11 16:39:28,657 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:28,659 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:28,661 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 56.99s ago] ('E1FF3B5A-D418-4080-91EC-E3DCB3811162', 1, 0)
2025-07-11 16:39:28,664 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID E1FF3B5A-D418-4080-91EC-E3DCB3811162 already exists (ID: 106)
2025-07-11 16:39:28,665 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml
2025-07-11 16:39:28,668 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml
2025-07-11 16:39:28,671 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-11 00:00:00
2025-07-11 16:39:28,673 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $696.00
2025-07-11 16:39:28,674 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:28,676 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:28,677 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: E1FF3B5A-D418-4080-91EC-E3DCB3811162
2025-07-11 16:39:28,678 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml
2025-07-11 16:39:28,678 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-11 12:56:13
2025-07-11 16:39:28,679 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:39:28,679 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 696.00
2025-07-11 16:39:28,680 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:28,682 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:28,687 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:28,691 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 54.13s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml', '{"filename": "E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml", "processing_time": 0.037134647369384766, "item_count": 0, "success": false, "error": "DUPLICATE: UUID E1FF3B5A-D418-4080-91EC-E3DCB3811162 already exists"}', 0.037134647369384766, None, 'E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml', None, '2025-07-11 23:39:28.687591')
2025-07-11 16:39:28,698 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:28,710 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml - moved to failed directory
2025-07-11 16:39:28,713 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved E1FF3B5A-D418-4080-91EC-E3DCB3811162.xml to data/failed
2025-07-11 16:39:28,714 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:28,715 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml (55/64)
2025-07-11 16:39:28,716 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:28,721 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml
2025-07-11 16:39:28,722 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml
2025-07-11 16:39:28,727 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:28,728 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4
2025-07-11 16:39:28,730 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:28,732 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:28,738 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 57.07s ago] ('E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4', 1, 0)
2025-07-11 16:39:28,741 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4 already exists (ID: 107)
2025-07-11 16:39:28,742 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml
2025-07-11 16:39:28,744 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml
2025-07-11 16:39:28,744 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-08 00:00:00
2025-07-11 16:39:28,745 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1257.28
2025-07-11 16:39:28,746 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:28,747 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:28,748 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4
2025-07-11 16:39:28,750 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml
2025-07-11 16:39:28,755 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-08 09:54:31
2025-07-11 16:39:28,756 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:39:28,759 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 1257.28
2025-07-11 16:39:28,759 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:28,760 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:28,761 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:28,761 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 54.2s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml', '{"filename": "E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml", "processing_time": 0.03863644599914551, "item_count": 0, "success": false, "error": "DUPLICATE: UUID E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4 already exists"}', 0.03863644599914551, None, 'E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml', None, '2025-07-11 23:39:28.761513')
2025-07-11 16:39:28,771 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:28,778 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml - moved to failed directory
2025-07-11 16:39:28,781 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved E3D96AA7-16E9-4C0D-864F-D356CE0E1EF4.xml to data/failed
2025-07-11 16:39:28,788 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:28,790 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing E507A17F-A130-4C08-8B4F-0FD300D02C85.xml (56/64)
2025-07-11 16:39:28,792 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:28,794 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: E507A17F-A130-4C08-8B4F-0FD300D02C85.xml
2025-07-11 16:39:28,794 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: E507A17F-A130-4C08-8B4F-0FD300D02C85.xml
2025-07-11 16:39:28,798 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:28,798 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: E507A17F-A130-4C08-8B4F-0FD300D02C85
2025-07-11 16:39:28,805 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:28,807 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:28,810 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 57.14s ago] ('E507A17F-A130-4C08-8B4F-0FD300D02C85', 1, 0)
2025-07-11 16:39:28,811 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:28,812 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 1 items
2025-07-11 16:39:28,814 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:28,817 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:28,824 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 57.13s ago] ('sku_8fb2706b_81112221_poliza_de_soporte_remoto_intermedia_mens', 1, 0)
2025-07-11 16:39:28,827 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:28,827 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_8fb2706b_81112221_poliza_de_soporte_remoto_intermedia_mens
2025-07-11 16:39:30,324 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Gastos Generales -> Servicios Administrativos
2025-07-11 16:39:30,324 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Gastos Generales -> Servicios Administrativos (units_per_package: 1.0)
2025-07-11 16:39:30,325 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-11 16:39:30,327 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:30,330 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoices (uuid, series, folio, invoice_type, version, issue_date, certification_date, created_at, updated_at, issuer_rfc, issuer_name, issuer_fiscal_regime, issuer_use_cfdi, issuer_residence, issuer_tax_id, receiver_rfc, receiver_name, receiver_fiscal_address, receiver_residence, receiver_tax_id, receiver_use_cfdi, payment_method, payment_method_desc, payment_terms, payment_conditions, currency, exchange_rate, subtotal, total_discount, total_transferred_taxes, total_withheld_taxes, total_amount, digital_stamp, certificate_number, certificate, sat_seal, sat_certificate, fiscal_folio, stamp_datetime, expedition_place, export_operation, confirmation, source_filename, xml_file_size, confidence_score, processing_time, processing_status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:30,333 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 55.95s ago] ('E507A17F-A130-4C08-8B4F-0FD300D02C85', 'SD', '1432', 'I', '4.0', '2025-07-04 17:14:47.000000', None, '2025-07-11 23:39:30.329009', '2025-07-11 23:39:30.329009', 'MECS******VC4', 'SERGIO ALBERTO MENDOZA CASTRO', '612', None, None, None, 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', '23300', None, None, None, '99', None, 'PPD', None, 'MXN', 0.0, 1810.34, 0.0, 289.66, 0.0, 2100.0, 'i2ci51gIs/sdDUGubfo3BryPavKRuQvmO34c9ncg9zWyDiHIXJwSmn8/whuKZlcbd0ykfGYr/5Pavy80mmZiaYpan0D3xyvr9ekHrldnfH7VjNc1jd6MGyU90GP85R1lj9YTPFGiaGFjwofHDsMny ... (46 characters truncated) ... 8I685SCRurrr1xUOErTNfTYa71qPxqcti3Ombj2J/IqgAemxcZ0/o9jVpTJgJ4SDmhejITVQYOycs/4YO7iVx9A4VlsAKwS5VydACcYf7vSOQLseeOXhbade74/uOV38jRUwQY7x/EsWxH2bHTg==', '00001000000514905332', None, 'ilLhvOkYa+qhz0D9/7kgHirjbC+gxO+w2oIibQynPHFEAjg1qUDgi9brhEaGHdpFIX+qQMAITWV0PCWdjLj7xtYBnq/1ZSjCRaPca+cGGthAk8NsRljq0izaFQRTgr3MpUsM7k/9FrwfPZTdcq0Y0 ... (46 characters truncated) ... j/+jOCbXWIDzDbC308GEz2wGeXb4CM7p6ZDNA39Ksl6u6+/0mqurkTOz4tRahcKtO1hOSSWShALlxWmqjB2DAxQ4afXKEb+3LtFMX2bMa5xdkrFNT6G3/5b3Il0+pxvzow+TpXwwrr0VPn2D6nw==', None, 'E507A17F-A130-4C08-8B4F-0FD300D02C85', '2025-07-04 18:14:50.000000', None, None, None, 'E507A17F-A130-4C08-8B4F-0FD300D02C85.xml', 5076, None, None, 'processed')
2025-07-11 16:39:30,346 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Saved invoice E507A17F-A130-4C08-8B4F-0FD300D02C85 with 1 items (ID: 125)
2025-07-11 16:39:30,352 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE invoices SET confidence_score=?, processing_time=? WHERE invoices.id = ?
2025-07-11 16:39:30,354 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 55.96s ago] (0.95, 1.4956367015838623, 125)
2025-07-11 16:39:30,357 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, subcategory, sub_sub_category, standardized_unit, standardized_quantity, conversion_factor, category_confidence, classification_source, approval_status, sku_key, classification_timestamp, custom_fields, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:30,359 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 24.81s ago] (125, 1, '81112221', None, 'POLIZA DE SOPORTE REMOTO INTERMEDIA MENS', 1.0, 'E48', None, 1.0, None, 1810.3448, 1810.3448, 0.0, 0.0, 2099.999968, 'Gastos Generales', 'Servicios Administrativos', 'Servicios Administrativos', 'Piezas', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_8fb2706b_81112221_poliza_de_soporte_remoto_intermedia_mens', '2025-07-11 23:39:30.357946', '{"processing_time": 1.4956367015838623, "api_attempt": 1, "reasoning": "The item is a \'POLIZA DE SOPORTE REMOTO INTERMEDIA MENS\' which translates to a remote support policy, indicating an administrative service. The quantity is 1, so units_per_package is 1.", "error": null}', '2025-07-11 23:39:30.357946', '2025-07-11 23:39:30.357946')
2025-07-11 16:39:30,363 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:30,377 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [METADATA] Creating business metadata
2025-07-11 16:39:30,378 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Created metadata for invoice ID 125
2025-07-11 16:39:30,379 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:30,386 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_metadata (invoice_id, uuid, folio, issue_date, issuer_rfc, issuer_name, receiver_rfc, receiver_name, original_currency, original_total, exchange_rate, mxn_total, payment_method, payment_terms, is_installments, is_immediate, total_items, total_categories, avg_confidence, processing_status, has_errors, error_count, is_export, has_digital_stamp, is_certified, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:30,390 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 55.92s ago] (125, 'E507A17F-A130-4C08-8B4F-0FD300D02C85', '1432', '2025-07-04', 'MECS******VC4', 'SERGIO ALBERTO MENDOZA CASTRO', 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', 'MXN', 2100.0, 1.0, 2100.0, '99', 'PPD', 1, 0, 1, 1, 0.95, 'completed', 0, 0, 0, 1, 1, '2025-07-11 23:39:30.386580', '2025-07-11 23:39:30.386580')
2025-07-11 16:39:30,394 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:30,405 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Saving to purchase_details table
2025-07-11 16:39:30,408 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:30,409 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.id = ?
2025-07-11 16:39:30,412 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 55.91s ago] (125,)
2025-07-11 16:39:30,421 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoice_metadata.id AS invoice_metadata_id, invoice_metadata.invoice_id AS invoice_metadata_invoice_id, invoice_metadata.uuid AS invoice_metadata_uuid, invoice_metadata.folio AS invoice_metadata_folio, invoice_metadata.issue_date AS invoice_metadata_issue_date, invoice_metadata.issuer_rfc AS invoice_metadata_issuer_rfc, invoice_metadata.issuer_name AS invoice_metadata_issuer_name, invoice_metadata.receiver_rfc AS invoice_metadata_receiver_rfc, invoice_metadata.receiver_name AS invoice_metadata_receiver_name, invoice_metadata.original_currency AS invoice_metadata_original_currency, invoice_metadata.original_total AS invoice_metadata_original_total, invoice_metadata.exchange_rate AS invoice_metadata_exchange_rate, invoice_metadata.mxn_total AS invoice_metadata_mxn_total, invoice_metadata.payment_method AS invoice_metadata_payment_method, invoice_metadata.payment_terms AS invoice_metadata_payment_terms, invoice_metadata.is_installments AS invoice_metadata_is_installments, invoice_metadata.is_immediate AS invoice_metadata_is_immediate, invoice_metadata.total_items AS invoice_metadata_total_items, invoice_metadata.total_categories AS invoice_metadata_total_categories, invoice_metadata.avg_confidence AS invoice_metadata_avg_confidence, invoice_metadata.processing_status AS invoice_metadata_processing_status, invoice_metadata.has_errors AS invoice_metadata_has_errors, invoice_metadata.error_count AS invoice_metadata_error_count, invoice_metadata.is_export AS invoice_metadata_is_export, invoice_metadata.has_digital_stamp AS invoice_metadata_has_digital_stamp, invoice_metadata.is_certified AS invoice_metadata_is_certified, invoice_metadata.created_at AS invoice_metadata_created_at, invoice_metadata.updated_at AS invoice_metadata_updated_at 
FROM invoice_metadata 
WHERE invoice_metadata.invoice_id = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:30,424 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 55.9s ago] (125, 1, 0)
2025-07-11 16:39:30,430 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - ROLLBACK
2025-07-11 16:39:30,438 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 37 values for 38 columns
2025-07-11 16:39:30,439 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Failed to save to purchase_details table: 37 values for 38 columns
2025-07-11 16:39:30,442 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:30,444 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:30,445 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 55.89s ago] (125, 'INFO', 'batch_processor', 'process_file', 'Successfully processed E507A17F-A130-4C08-8B4F-0FD300D02C85.xml', '{"filename": "E507A17F-A130-4C08-8B4F-0FD300D02C85.xml", "processing_time": 1.6474268436431885, "item_count": 1, "success": true, "gemini_calls": 1, "approved_skus": 0, "avg_confidence": 0.95}', 1.6474268436431885, None, 'E507A17F-A130-4C08-8B4F-0FD300D02C85.xml', None, '2025-07-11 23:39:30.444276')
2025-07-11 16:39:30,454 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:30,462 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SUCCESS] Processed E507A17F-A130-4C08-8B4F-0FD300D02C85.xml in 1.65s
2025-07-11 16:39:30,466 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved E507A17F-A130-4C08-8B4F-0FD300D02C85.xml to data/processed
2025-07-11 16:39:30,470 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:30,472 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml (57/64)
2025-07-11 16:39:30,474 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:30,475 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml
2025-07-11 16:39:30,476 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml
2025-07-11 16:39:30,482 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:30,487 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: E6BB6F45-D94E-4A27-97B8-BA5474658B2D
2025-07-11 16:39:30,487 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:30,493 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:30,497 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 58.83s ago] ('E6BB6F45-D94E-4A27-97B8-BA5474658B2D', 1, 0)
2025-07-11 16:39:30,504 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID E6BB6F45-D94E-4A27-97B8-BA5474658B2D already exists (ID: 108)
2025-07-11 16:39:30,505 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml
2025-07-11 16:39:30,507 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml
2025-07-11 16:39:30,508 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-02 00:00:00
2025-07-11 16:39:30,509 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $1695.20
2025-07-11 16:39:30,510 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:30,511 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:30,513 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: E6BB6F45-D94E-4A27-97B8-BA5474658B2D
2025-07-11 16:39:30,514 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml
2025-07-11 16:39:30,515 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-02 07:59:53
2025-07-11 16:39:30,520 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:39:30,523 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 1695.20
2025-07-11 16:39:30,524 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:30,525 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:30,527 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:30,529 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 55.97s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml', '{"filename": "E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml", "processing_time": 0.049933671951293945, "item_count": 0, "success": false, "error": "DUPLICATE: UUID E6BB6F45-D94E-4A27-97B8-BA5474658B2D already exists"}', 0.049933671951293945, None, 'E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml', None, '2025-07-11 23:39:30.527543')
2025-07-11 16:39:30,541 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:30,550 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml - moved to failed directory
2025-07-11 16:39:30,557 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved E6BB6F45-D94E-4A27-97B8-BA5474658B2D.xml to data/failed
2025-07-11 16:39:30,558 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:30,558 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml (58/64)
2025-07-11 16:39:30,560 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:30,560 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml
2025-07-11 16:39:30,562 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml
2025-07-11 16:39:30,574 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:30,575 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: EB705A95-CDFF-4226-A6BA-0A99E68D321B
2025-07-11 16:39:30,576 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:30,577 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:30,584 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 58.91s ago] ('EB705A95-CDFF-4226-A6BA-0A99E68D321B', 1, 0)
2025-07-11 16:39:30,589 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID EB705A95-CDFF-4226-A6BA-0A99E68D321B already exists (ID: 109)
2025-07-11 16:39:30,590 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml
2025-07-11 16:39:30,592 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml
2025-07-11 16:39:30,592 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-09 00:00:00
2025-07-11 16:39:30,593 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2926.04
2025-07-11 16:39:30,593 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:30,595 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:30,597 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: EB705A95-CDFF-4226-A6BA-0A99E68D321B
2025-07-11 16:39:30,599 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml
2025-07-11 16:39:30,604 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-09 08:25:03
2025-07-11 16:39:30,605 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: VANESSA IVON PIÑUELAS VERDUGO
2025-07-11 16:39:30,607 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 2926.04
2025-07-11 16:39:30,607 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:30,609 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:30,611 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:30,612 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 56.05s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml', '{"filename": "EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml", "processing_time": 0.04777932167053223, "item_count": 0, "success": false, "error": "DUPLICATE: UUID EB705A95-CDFF-4226-A6BA-0A99E68D321B already exists"}', 0.04777932167053223, None, 'EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml', None, '2025-07-11 23:39:30.611163')
2025-07-11 16:39:30,622 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:30,629 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml - moved to failed directory
2025-07-11 16:39:30,637 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved EB705A95-CDFF-4226-A6BA-0A99E68D321B.xml to data/failed
2025-07-11 16:39:30,640 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:30,640 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml (59/64)
2025-07-11 16:39:30,642 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:30,643 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml
2025-07-11 16:39:30,644 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml
2025-07-11 16:39:30,655 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:30,656 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: FBDD0E56-11A1-49B9-95C2-FD243E95986B
2025-07-11 16:39:30,658 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:30,659 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:30,664 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 58.99s ago] ('FBDD0E56-11A1-49B9-95C2-FD243E95986B', 1, 0)
2025-07-11 16:39:30,668 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:30,673 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 21 items
2025-07-11 16:39:30,675 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_4d8ff92b_50404600_lechuga_bola
2025-07-11 16:39:30,676 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_5a200fb8_50131800_queso_cheddar_cheddar_fuerte
2025-07-11 16:39:30,678 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_bd6f7e4b_50112010_pierna_de_pollo
2025-07-11 16:39:30,679 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_6b45f921_50404600_lechuga_romana_baby
2025-07-11 16:39:30,681 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_f6ce5c99_50404600_lechuga_mixta
2025-07-11 16:39:30,688 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_11cd495e_50401700_aguacate
2025-07-11 16:39:30,691 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_70ae329c_50301500_manzana_verde
2025-07-11 16:39:30,692 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_4770c1ef_50402800_acelga
2025-07-11 16:39:30,694 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_75903dde_50404803_champiñon
2025-07-11 16:39:30,696 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_15acbdb3_50404125_tomillo
2025-07-11 16:39:30,700 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:30,706 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:30,709 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 59.02s ago] ('sku_b3f78bc6_50401806_frijol_pinto', 1, 0)
2025-07-11 16:39:30,711 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_b3f78bc6_50401806_frijol_pinto -> Abarrotes
2025-07-11 16:39:30,714 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:39:30,718 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 59.01s ago] (4, '2025-07-11 23:39:30.711914', 36)
2025-07-11 16:39:30,724 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:30,734 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:30,739 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:30,742 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 59.05s ago] ('sku_5ac938a8_50221300_tortilla_maiz', 1, 0)
2025-07-11 16:39:30,744 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_5ac938a8_50221300_tortilla_maiz -> Abarrotes
2025-07-11 16:39:30,746 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:39:30,749 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 59.04s ago] (5, '2025-07-11 23:39:30.744657', 48)
2025-07-11 16:39:30,757 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:30,764 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_d2926dd5_50131800_queso_asadero
2025-07-11 16:39:30,767 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_07ae298e_50304100_limon_amarillo
2025-07-11 16:39:30,773 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:30,775 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:30,778 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 59.09s ago] ('sku_ffcedf08_50202301_agua_tonica', 1, 0)
2025-07-11 16:39:30,781 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:30,787 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_ffcedf08_50202301_agua_tonica
2025-07-11 16:39:32,539 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Refrescos
2025-07-11 16:39:32,540 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Refrescos (units_per_package: 1.0)
2025-07-11 16:39:32,541 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_141a86f5_10161506_naranja
2025-07-11 16:39:32,541 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg
2025-07-11 16:39:32,543 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:32,545 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:32,550 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 60.86s ago] ('sku_7a192569_50131800_queso_cheddar_cheddar_suave', 1, 0)
2025-07-11 16:39:32,552 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:32,555 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_7a192569_50131800_queso_cheddar_cheddar_suave
2025-07-11 16:39:34,261 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Lacteos -> Queso
2025-07-11 16:39:34,263 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Lacteos -> Queso (units_per_package: 1.0)
2025-07-11 16:39:34,269 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:34,271 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:34,274 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 62.58s ago] ('sku_f3336f27_50191500_sopa_barilla_codo_500gr', 1, 0)
2025-07-11 16:39:34,276 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:34,279 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_f3336f27_50191500_sopa_barilla_codo_500gr
2025-07-11 16:39:35,963 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Otros-a
2025-07-11 16:39:35,965 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Otros-a (units_per_package: 1.0)
2025-07-11 16:39:35,967 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_8f28f7c7_50402300_repollo_verde
2025-07-11 16:39:35,968 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:35,970 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:35,972 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 64.28s ago] ('sku_3a5d684a_15101605_carbon_agranel', 1, 0)
2025-07-11 16:39:35,973 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_3a5d684a_15101605_carbon_agranel -> Abarrotes
2025-07-11 16:39:35,975 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:39:35,976 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 64.27s ago] (4, '2025-07-11 23:39:35.973367', 39)
2025-07-11 16:39:35,988 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:35,998 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-11 16:39:36,002 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:36,003 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoices (uuid, series, folio, invoice_type, version, issue_date, certification_date, created_at, updated_at, issuer_rfc, issuer_name, issuer_fiscal_regime, issuer_use_cfdi, issuer_residence, issuer_tax_id, receiver_rfc, receiver_name, receiver_fiscal_address, receiver_residence, receiver_tax_id, receiver_use_cfdi, payment_method, payment_method_desc, payment_terms, payment_conditions, currency, exchange_rate, subtotal, total_discount, total_transferred_taxes, total_withheld_taxes, total_amount, digital_stamp, certificate_number, certificate, sat_seal, sat_certificate, fiscal_folio, stamp_datetime, expedition_place, export_operation, confirmation, source_filename, xml_file_size, confidence_score, processing_time, processing_status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:36,004 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 61.62s ago] ('FBDD0E56-11A1-49B9-95C2-FD243E95986B', None, '51669', 'I', '4.0', '2025-07-04 11:11:33.000000', None, '2025-07-11 23:39:36.003841', '2025-07-11 23:39:36.003841', 'PIVV******RR4', 'VANESSA IVON PIÑUELAS VERDUGO', '612', None, None, None, 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', '23300', None, None, None, '99', None, 'PPD', None, 'MXN', 1.0, 3059.75, 0.0, 149.43, 0.0, 3209.18, 'XBZf/v3iWPcgdb7on0fw9740+utQ/l59GzNRD/Tmm90e91Zk8VlzhwJW6Zw1NpuwZrFKP/aY434lEaM4uNkoWvRqm55Is5OC1pyYZGDLQZpNfsnCAx2KIWrfsljZxYAHfhok/nr/eVqY7odI7jov7 ... (46 characters truncated) ... i9ej7wHdGl+E2p1o+4oLt0oTqOOhYucyGfVMTMf5hBoXYH6g/4oagal5GPlOmpKJEhh5ZO1bnhds08kx3G15lMzjgh4JYf0RST6wVFOoqzXysuSYFLN/7YqPc4tbNL86nyzkF2ep4K8QIMXKVsw==', '00001000000705018977', None, 'n4d/7G3MClJN3JOqyseP7EpudNwtABIvNbD6qU2lWLqc9y5Re1vW6wQr9FvE5eo3lfsitbgZtooN68c4z6tBkK0I9SuI9sDlrHyzbhsySa6T9qUCQpOfdwXvt7c6sdZtXeW15A2tTgmwXGjqlOh/I ... (46 characters truncated) ... qV0pP8SVnEspZvfvk5yzmjL9fpNupoH7qR1rqi7VNR1iYrqsgCKhNxJYgDK04d1g1WmGhyWegFG/sodHSzRqKhhbgzdXgz2d+VjJupwh91LFBbOL1cZb6tqfFHX7E/rvhNwtyx2S1JGk7WyUPsA==', None, 'FBDD0E56-11A1-49B9-95C2-FD243E95986B', '2025-07-04 12:11:34.000000', None, None, None, 'FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml', 12720, None, None, 'processed')
2025-07-11 16:39:36,019 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Saved invoice FBDD0E56-11A1-49B9-95C2-FD243E95986B with 21 items (ID: 126)
2025-07-11 16:39:36,021 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE invoices SET confidence_score=?, processing_time=? WHERE invoices.id = ?
2025-07-11 16:39:36,022 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 61.62s ago] (0.9714285714285712, 19.18234944343567, 126)
2025-07-11 16:39:36,026 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:36,031 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 61.62s ago (insertmanyvalues) 1/21 (ordered; batch not supported)] (126, 1, '50404600', None, 'LECHUGA BOLA', 1.0, 'H87', None, 1.0, None, 30.0, 30.0, 0.0, 0.0, 30.0, 'Vegetales', 'Verduras', 'Lechuga Bola', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_4d8ff92b_50404600_lechuga_bola', '2025-07-11 23:39:36.024026', '{"processing_time": 1.4838519096374512, "api_attempt": 1, "reasoning": "\\"LECHUGA BOLA\\" is classified under \'Vegetales\' -> \'Verduras\' -> \'Lec ... (18 characters truncated) ...  it\'s a vegetable, the standardized unit is \'Kilogramos\'. No package information is provided, so units_per_package defaults to 1.", "error": null}', '2025-07-11 23:39:36.024026', '2025-07-11 23:39:36.024026')
2025-07-11 16:39:36,036 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:36,037 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 2/21 (ordered; batch not supported)] (126, 2, '50131800', None, 'QUESO CHEDDAR CHEDDAR FUERTE', 1.0, 'H87', None, 1.0, None, 195.0, 195.0, 0.0, 0.0, 195.0, 'Lacteos', 'Queso', 'Queso cheddar', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_5a200fb8_50131800_queso_cheddar_cheddar_fuerte', '2025-07-11 23:39:36.024026', '{"processing_time": 1.5237786769866943, "api_attempt": 1, "reasoning": "The item is \'QUESO CHEDDAR CHEDDAR FUERTE\', which clearly falls under the \ ... (98 characters truncated) ... se, the standardized unit is \'Kilogramos\'. There is no package information in the description, so units_per_package defaults to 1.", "error": null}', '2025-07-11 23:39:36.024026', '2025-07-11 23:39:36.024026')
2025-07-11 16:39:36,039 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:36,040 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 3/21 (ordered; batch not supported)] (126, 3, '50112010', None, 'PIERNA DE POLLO', 5.56, 'KGM', None, 1.0, None, 48.0, 266.88, 0.0, 0.0, 266.88, 'Proteinas', 'Pollo', 'Pierna', 'Kilogramos', 5.56, 1.0, 1.0, 'approved_sku', 'approved', 'sku_bd6f7e4b_50112010_pierna_de_pollo', '2025-07-11 23:39:36.024026', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:36.024026', '2025-07-11 23:39:36.024026')
2025-07-11 16:39:36,044 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:36,049 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 4/21 (ordered; batch not supported)] (126, 4, '50404600', None, 'LECHUGA ROMANA BABY', 1.0, 'H87', None, 1.0, None, 110.0, 110.0, 0.0, 0.0, 110.0, 'Vegetales', 'Verduras', 'Lechuga Romana', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_6b45f921_50404600_lechuga_romana_baby', '2025-07-11 23:39:36.024026', '{"processing_time": 1.68709397315979, "api_attempt": 1, "reasoning": "The item is \'LECHUGA ROMANA BABY\', which is a type of lettuce. Therefore, it  ... (143 characters truncated) ... ized unit is \'Kilogramos\'. The quantity is 1, and there\'s no indication of multiple units per package, so units_per_package is 1.", "error": null}', '2025-07-11 23:39:36.024026', '2025-07-11 23:39:36.024026')
2025-07-11 16:39:36,053 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:36,055 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 5/21 (ordered; batch not supported)] (126, 5, '50404600', None, 'LECHUGA MIXTA', 1.0, 'H87', None, 1.0, None, 130.0, 130.0, 0.0, 0.0, 130.0, 'Vegetales', 'Verduras', 'Lechuga Mixta', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_f6ce5c99_50404600_lechuga_mixta', '2025-07-11 23:39:36.024026', '{"processing_time": 1.4898877143859863, "api_attempt": 1, "reasoning": "The item is \'LECHUGA MIXTA\' which is \'Lechuga Mixta\' in the Vegetables >  ... (30 characters truncated) ...  a vegetable, the standardized unit is Kilogramos. The quantity is 1 and there is no package information, so units_per_package is 1.", "error": null}', '2025-07-11 23:39:36.024026', '2025-07-11 23:39:36.024026')
2025-07-11 16:39:36,056 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:36,058 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 6/21 (ordered; batch not supported)] (126, 6, '50401700', None, 'AGUACATE', 1.18, 'KGM', None, 1.0, None, 110.0, 129.8, 0.0, 0.0, 129.8, 'Vegetales', 'Frutas', 'Aguacate', 'Kilogramos', 1.18, 1.0, 1.0, 'approved_sku', 'approved', 'sku_11cd495e_50401700_aguacate', '2025-07-11 23:39:36.024026', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:36.024026', '2025-07-11 23:39:36.024026')
2025-07-11 16:39:36,061 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:36,066 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 7/21 (ordered; batch not supported)] (126, 7, '50301500', None, 'MANZANA VERDE', 0.58, 'KGM', None, 1.0, None, 55.0, 31.9, 0.0, 0.0, 31.9, 'Vegetales', 'Frutas', 'Manzana', 'Kilogramos', 0.58, 1.0, 1.0, 'approved_sku', 'approved', 'sku_70ae329c_50301500_manzana_verde', '2025-07-11 23:39:36.024026', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:36.024026', '2025-07-11 23:39:36.024026')
2025-07-11 16:39:36,070 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:36,071 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 8/21 (ordered; batch not supported)] (126, 8, '50402800', None, 'ACELGA', 1.0, 'XBH', None, 1.0, None, 14.0, 14.0, 0.0, 0.0, 14.0, 'Vegetales', 'Verduras', 'Acelga', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_4770c1ef_50402800_acelga', '2025-07-11 23:39:36.024026', '{"processing_time": 1.5273375511169434, "api_attempt": 1, "reasoning": "\\"Acelga\\" is classified as a vegetable. Since the unit is XBH and quantity is 1, it\'s likely sold by weight. Assuming XBH represents a bulk weight, it is classified as Kilogramos with 1 unit per package.", "error": null}', '2025-07-11 23:39:36.024026', '2025-07-11 23:39:36.024026')
2025-07-11 16:39:36,072 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:36,075 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 9/21 (ordered; batch not supported)] (126, 9, '50404803', None, 'CHAMPIÑON', 3.0, 'H87', None, 1.0, None, 35.0, 105.0, 0.0, 0.0, 105.0, 'Vegetales', 'Hongo', 'Champiñon', 'Kilogramos', 3.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_75903dde_50404803_champiñon', '2025-07-11 23:39:36.024026', '{"processing_time": 1.9023773670196533, "api_attempt": 1, "reasoning": "The item is \'CHAMPI\\u00d1ON\', which is a type of mushroom. The taxonomy ha ... (60 characters truncated) ... . Since it\'s a vegetable, the standardized unit is Kilogramos. There is no package information, so units_per_package defaults to 1.", "error": null}', '2025-07-11 23:39:36.024026', '2025-07-11 23:39:36.024026')
2025-07-11 16:39:36,078 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:36,082 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 10/21 (ordered; batch not supported)] (126, 10, '50404125', None, 'TOMILLO', 0.22, 'KGM', None, 1.0, None, 110.0, 24.2, 0.0, 0.0, 24.2, 'Vegetales', 'Frutas', 'Tomillo', 'Kilogramos', 0.22, 1.0, 0.95, 'gemini_api', 'pending', 'sku_15acbdb3_50404125_tomillo', '2025-07-11 23:39:36.024026', '{"processing_time": 1.307530164718628, "api_attempt": 1, "reasoning": "Tomillo is classified as a fruit within the Vegetales category. The item is sold individually by weight (kilogram).", "error": null}', '2025-07-11 23:39:36.024026', '2025-07-11 23:39:36.024026')
2025-07-11 16:39:36,086 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:36,087 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 11/21 (ordered; batch not supported)] (126, 11, '50401806', None, 'FRIJOL PINTO', 0.5, 'KGM', None, 1.0, None, 37.0, 18.5, 0.0, 0.0, 18.5, 'Abarrotes', 'Legumbres', 'Frijol', 'Kilogramos', 0.5, 1.0, 1.0, 'approved_sku', 'approved', 'sku_b3f78bc6_50401806_frijol_pinto', '2025-07-11 23:39:36.024026', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:36.024026', '2025-07-11 23:39:36.024026')
2025-07-11 16:39:36,088 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:36,090 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 12/21 (ordered; batch not supported)] (126, 12, '50221300', None, 'TORTILLA MAIZ', 1.0, 'KGM', None, 1.0, None, 32.0, 32.0, 0.0, 0.0, 32.0, 'Abarrotes', 'Tortilla', 'Tortilla de Mariz', 'Kilogramos', 1.0, 1.0, 1.0, 'approved_sku', 'approved', 'sku_5ac938a8_50221300_tortilla_maiz', '2025-07-11 23:39:36.024026', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:36.024026', '2025-07-11 23:39:36.024026')
2025-07-11 16:39:36,092 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:36,099 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 13/21 (ordered; batch not supported)] (126, 13, '50131800', None, 'QUESO ASADERO', 0.76, 'KGM', None, 1.0, None, 155.0, 117.8, 0.0, 0.0, 117.8, 'Lacteos', 'Queso', 'Queso Amarillo', 'Kilogramos', 0.76, 1.0, 0.95, 'gemini_api', 'pending', 'sku_d2926dd5_50131800_queso_asadero', '2025-07-11 23:39:36.024026', '{"processing_time": 1.5683948993682861, "api_attempt": 1, "reasoning": "\\"QUESO ASADERO\\" is classified as \\"Queso Amarillo\\" within the \\"Queso\\" subcategory of \\"Lacteos\\". The unit is KGM (Kilogramos), and since it\'s sold by weight, units_per_package is 1.", "error": null}', '2025-07-11 23:39:36.024026', '2025-07-11 23:39:36.024026')
2025-07-11 16:39:36,102 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:36,105 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 14/21 (ordered; batch not supported)] (126, 14, '50304100', None, 'LIMON AMARILLO', 5.02, 'KGM', None, 1.0, None, 58.0, 291.16, 0.0, 0.0, 291.16, 'Vegetales', 'Frutas', 'Limon Amarillo', 'Kilogramos', 5.02, 1.0, 1.0, 'approved_sku', 'approved', 'sku_07ae298e_50304100_limon_amarillo', '2025-07-11 23:39:36.024026', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:36.024026', '2025-07-11 23:39:36.024026')
2025-07-11 16:39:36,106 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:36,108 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 15/21 (ordered; batch not supported)] (126, 15, '50202301', None, 'AGUA TONICA', 12.0, 'H87', None, 1.0, None, 11.206897, 134.482764, 0.0, 0.0, 156.000006, 'Bebidas', 'Refrescos', 'Agua Tonica', 'Litros', 12.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_ffcedf08_50202301_agua_tonica', '2025-07-11 23:39:36.024026', '{"processing_time": 1.7487506866455078, "api_attempt": 1, "reasoning": "\\"AGUA TONICA\\" clearly falls under the \\"Refrescos\\" subcategory within  ... (127 characters truncated) ... wing the size of each bottle, we can only assume 1 unit per package for now. The standardized unit is Litros because it\'s a liquid.", "error": null}', '2025-07-11 23:39:36.024026', '2025-07-11 23:39:36.024026')
2025-07-11 16:39:36,112 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:36,117 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 16/21 (ordered; batch not supported)] (126, 16, '10161506', None, 'NARANJA', 3.08, 'KGM', None, 1.0, None, 32.0, 98.56, 0.0, 0.0, 98.56, 'Vegetales', 'Frutas', 'Naranja', 'Kilogramos', 3.08, 1.0, 1.0, 'approved_sku', 'approved', 'sku_141a86f5_10161506_naranja', '2025-07-11 23:39:36.024026', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:36.024026', '2025-07-11 23:39:36.024026')
2025-07-11 16:39:36,119 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:36,120 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 17/21 (ordered; batch not supported)] (126, 17, '50202302', None, 'HIELO BOLSA DE HIELO 5KG', 5.0, 'H87', None, 1.0, 'Bolsa', 33.0, 165.0, 0.0, 0.0, 165.0, 'Abarrotes', 'Otros-a', 'Otros', 'Kilogramos', 5.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_64cd09d0_50202302_hielo_bolsa_de_hielo_5kg', '2025-07-11 23:39:36.024026', '{"processing_time": 1.5589585304260254, "api_attempt": 1, "reasoning": "Ice is not explicitly listed, so it falls under \'Otros\' in Abarrotes. The item is sold in a 5KG bag, but the units are per item, so units_per_package is 1.", "error": null}', '2025-07-11 23:39:36.024026', '2025-07-11 23:39:36.024026')
2025-07-11 16:39:36,123 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:36,126 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 18/21 (ordered; batch not supported)] (126, 18, '50131800', None, 'QUESO CHEDDAR CHEDDAR SUAVE', 1.0, 'H87', None, 1.0, None, 195.0, 195.0, 0.0, 0.0, 195.0, 'Lacteos', 'Queso', 'Queso cheddar', 'Kilogramos', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_7a192569_50131800_queso_cheddar_cheddar_suave', '2025-07-11 23:39:36.024026', '{"processing_time": 1.7053253650665283, "api_attempt": 1, "reasoning": "The item is described as \'QUESO CHEDDAR CHEDDAR SUAVE\', which clearly falls ... (72 characters truncated) ... egory of \'Lacteos\'. Since the quantity is 1 and no specific packaging is mentioned, it\'s assumed to be sold by weight (kilogram).", "error": null}', '2025-07-11 23:39:36.024026', '2025-07-11 23:39:36.024026')
2025-07-11 16:39:36,131 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:36,135 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 19/21 (ordered; batch not supported)] (126, 19, '50191500', None, 'SOPA BARILLA CODO 500GR', 4.0, 'H87', None, 1.0, None, 35.0, 140.0, 0.0, 0.0, 140.0, 'Abarrotes', 'Otros-a', 'Pasta', 'Kilogramos', 4.0, 0.5, 0.95, 'gemini_api', 'pending', 'sku_f3336f27_50191500_sopa_barilla_codo_500gr', '2025-07-11 23:39:36.024026', '{"processing_time": 1.6790626049041748, "api_attempt": 1, "reasoning": "The item is \'SOPA BARILLA CODO 500GR\', which is pasta. The weight is 500 grams, so the conversion factor is 0.5 (500 grams = 0.5 kilograms). There is no package information, so units_per_package is 1.", "error": null}', '2025-07-11 23:39:36.024026', '2025-07-11 23:39:36.024026')
2025-07-11 16:39:36,136 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:36,139 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 20/21 (ordered; batch not supported)] (126, 20, '50402300', None, 'REPOLLO VERDE', 1.24, 'KGM', None, 1.0, None, 25.0, 31.0, 0.0, 0.0, 31.0, 'Vegetales', 'Verduras', 'Repollo', 'Kilogramos', 1.24, 1.0, 1.0, 'approved_sku', 'approved', 'sku_8f28f7c7_50402300_repollo_verde', '2025-07-11 23:39:36.024026', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:36.024026', '2025-07-11 23:39:36.024026')
2025-07-11 16:39:36,141 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:36,142 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 21/21 (ordered; batch not supported)] (126, 21, '15101605', None, 'CARBON AGRANEL', 29.92, 'KGM', None, 1.0, None, 26.72, 799.4624, 0.0, 0.0, 927.376384, 'Abarrotes', 'Otros-a', 'Carbon', 'Kilogramos', 29.92, 1.0, 1.0, 'approved_sku', 'approved', 'sku_3a5d684a_15101605_carbon_agranel', '2025-07-11 23:39:36.024026', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:36.024026', '2025-07-11 23:39:36.024026')
2025-07-11 16:39:36,151 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:36,171 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [METADATA] Creating business metadata
2025-07-11 16:39:36,172 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Created metadata for invoice ID 126
2025-07-11 16:39:36,173 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:36,175 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_metadata (invoice_id, uuid, folio, issue_date, issuer_rfc, issuer_name, receiver_rfc, receiver_name, original_currency, original_total, exchange_rate, mxn_total, payment_method, payment_terms, is_installments, is_immediate, total_items, total_categories, avg_confidence, processing_status, has_errors, error_count, is_export, has_digital_stamp, is_certified, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:36,180 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 61.71s ago] (126, 'FBDD0E56-11A1-49B9-95C2-FD243E95986B', '51669', '2025-07-04', 'PIVV******RR4', 'VANESSA IVON PIÑUELAS VERDUGO', 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', 'MXN', 3209.18, 1.0, 3209.18, '99', 'PPD', 1, 0, 21, 5, 0.9714285714285712, 'completed', 0, 0, 0, 1, 1, '2025-07-11 23:39:36.174942', '2025-07-11 23:39:36.174942')
2025-07-11 16:39:36,188 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:36,198 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Saving to purchase_details table
2025-07-11 16:39:36,202 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:36,203 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.id = ?
2025-07-11 16:39:36,207 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 61.7s ago] (126,)
2025-07-11 16:39:36,212 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoice_metadata.id AS invoice_metadata_id, invoice_metadata.invoice_id AS invoice_metadata_invoice_id, invoice_metadata.uuid AS invoice_metadata_uuid, invoice_metadata.folio AS invoice_metadata_folio, invoice_metadata.issue_date AS invoice_metadata_issue_date, invoice_metadata.issuer_rfc AS invoice_metadata_issuer_rfc, invoice_metadata.issuer_name AS invoice_metadata_issuer_name, invoice_metadata.receiver_rfc AS invoice_metadata_receiver_rfc, invoice_metadata.receiver_name AS invoice_metadata_receiver_name, invoice_metadata.original_currency AS invoice_metadata_original_currency, invoice_metadata.original_total AS invoice_metadata_original_total, invoice_metadata.exchange_rate AS invoice_metadata_exchange_rate, invoice_metadata.mxn_total AS invoice_metadata_mxn_total, invoice_metadata.payment_method AS invoice_metadata_payment_method, invoice_metadata.payment_terms AS invoice_metadata_payment_terms, invoice_metadata.is_installments AS invoice_metadata_is_installments, invoice_metadata.is_immediate AS invoice_metadata_is_immediate, invoice_metadata.total_items AS invoice_metadata_total_items, invoice_metadata.total_categories AS invoice_metadata_total_categories, invoice_metadata.avg_confidence AS invoice_metadata_avg_confidence, invoice_metadata.processing_status AS invoice_metadata_processing_status, invoice_metadata.has_errors AS invoice_metadata_has_errors, invoice_metadata.error_count AS invoice_metadata_error_count, invoice_metadata.is_export AS invoice_metadata_is_export, invoice_metadata.has_digital_stamp AS invoice_metadata_has_digital_stamp, invoice_metadata.is_certified AS invoice_metadata_is_certified, invoice_metadata.created_at AS invoice_metadata_created_at, invoice_metadata.updated_at AS invoice_metadata_updated_at 
FROM invoice_metadata 
WHERE invoice_metadata.invoice_id = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:36,218 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 61.69s ago] (126, 1, 0)
2025-07-11 16:39:36,227 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - ROLLBACK
2025-07-11 16:39:36,232 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 37 values for 38 columns
2025-07-11 16:39:36,235 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Failed to save to purchase_details table: 37 values for 38 columns
2025-07-11 16:39:36,237 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:36,238 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:36,240 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 61.68s ago] (126, 'INFO', 'batch_processor', 'process_file', 'Successfully processed FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml', '{"filename": "FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml", "processing_time": 5.594477415084839, "item_count": 21, "success": true, "gemini_calls": 12, "approved_skus": 9, "avg_confidence": 0.9714285714285712}', 5.594477415084839, None, 'FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml', None, '2025-07-11 23:39:36.238972')
2025-07-11 16:39:36,253 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:36,260 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SUCCESS] Processed FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml in 5.59s
2025-07-11 16:39:36,267 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved FBDD0E56-11A1-49B9-95C2-FD243E95986B.xml to data/processed
2025-07-11 16:39:36,269 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:36,270 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml (60/64)
2025-07-11 16:39:36,271 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:36,271 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml
2025-07-11 16:39:36,272 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml
2025-07-11 16:39:36,282 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:36,286 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: FDE6B84B-D0D2-481D-9F46-749D780FFFEE
2025-07-11 16:39:36,288 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:36,288 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:36,292 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 64.62s ago] ('FDE6B84B-D0D2-481D-9F46-749D780FFFEE', 1, 0)
2025-07-11 16:39:36,300 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:36,302 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 12 items
2025-07-11 16:39:36,303 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_3823c19d_50405300_cebolla_blanca
2025-07-11 16:39:36,306 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:36,307 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:36,310 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 64.62s ago] ('sku_6d2191f9_50221303_maicena_425gr', 1, 0)
2025-07-11 16:39:36,316 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:36,319 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_6d2191f9_50221303_maicena_425gr
2025-07-11 16:39:38,217 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Harinas
2025-07-11 16:39:38,217 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Harinas (units_per_package: 1.0)
2025-07-11 16:39:38,219 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:38,220 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:38,224 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 66.53s ago] ('sku_d466594e_50405700_papa_russet', 1, 0)
2025-07-11 16:39:38,230 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_d466594e_50405700_papa_russet -> Vegetales
2025-07-11 16:39:38,232 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:39:38,235 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 66.53s ago] (5, '2025-07-11 23:39:38.230003', 152)
2025-07-11 16:39:38,241 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:38,254 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:38,255 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:38,257 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 66.57s ago] ('sku_dd599020_50161509_azucar', 1, 0)
2025-07-11 16:39:38,266 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_dd599020_50161509_azucar -> Abarrotes
2025-07-11 16:39:38,267 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:39:38,269 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 66.56s ago] (5, '2025-07-11 23:39:38.266699', 21)
2025-07-11 16:39:38,271 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:38,283 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_547ba3ea_50171551_sal_la_fina
2025-07-11 16:39:38,285 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_f355fb89_50403800_ajo
2025-07-11 16:39:38,286 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:38,287 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:38,291 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 66.6s ago] ('sku_b8e71b2d_50101700_almendra', 1, 0)
2025-07-11 16:39:38,299 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:38,300 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_b8e71b2d_50101700_almendra
2025-07-11 16:39:39,819 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Abarrotes -> Nueces y Semillas
2025-07-11 16:39:39,820 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Abarrotes -> Nueces y Semillas (units_per_package: 1.0)
2025-07-11 16:39:39,821 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_65d00f8a_50404101_albahaca
2025-07-11 16:39:39,822 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_80bf8a82_50401900_betabel
2025-07-11 16:39:39,828 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:39,830 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:39,832 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 68.14s ago] ('sku_822118da_50101717_nuez', 1, 0)
2025-07-11 16:39:39,833 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using approved SKU: sku_822118da_50101717_nuez -> Abarrotes
2025-07-11 16:39:39,834 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE approved_skus SET usage_count=?, last_used=? WHERE approved_skus.id = ?
2025-07-11 16:39:39,835 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 68.13s ago] (5, '2025-07-11 23:39:39.833765', 38)
2025-07-11 16:39:39,844 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:39,854 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_00d189e9_50193105_panco
2025-07-11 16:39:39,858 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Using cached classification: sku_bd6f7e4b_50112010_pierna_de_pollo
2025-07-11 16:39:39,862 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-11 16:39:39,866 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:39,868 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoices (uuid, series, folio, invoice_type, version, issue_date, certification_date, created_at, updated_at, issuer_rfc, issuer_name, issuer_fiscal_regime, issuer_use_cfdi, issuer_residence, issuer_tax_id, receiver_rfc, receiver_name, receiver_fiscal_address, receiver_residence, receiver_tax_id, receiver_use_cfdi, payment_method, payment_method_desc, payment_terms, payment_conditions, currency, exchange_rate, subtotal, total_discount, total_transferred_taxes, total_withheld_taxes, total_amount, digital_stamp, certificate_number, certificate, sat_seal, sat_certificate, fiscal_folio, stamp_datetime, expedition_place, export_operation, confirmation, source_filename, xml_file_size, confidence_score, processing_time, processing_status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:39,869 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 65.49s ago] ('FDE6B84B-D0D2-481D-9F46-749D780FFFEE', None, '51751', 'I', '4.0', '2025-07-06 08:31:06.000000', None, '2025-07-11 23:39:39.866538', '2025-07-11 23:39:39.866538', 'PIVV******RR4', 'VANESSA IVON PIÑUELAS VERDUGO', '612', None, None, None, 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', '23300', None, None, None, '03', None, 'PUE', None, 'MXN', 1.0, 1947.24, 0.0, 0.0, 0.0, 1947.24, 'Y5f3+tGmWFY5U95OS5kjZm2m7868u0V+AfZlP/ZB9N9R7QFjPOVI4Wcgk5RfoUFbUhY9DwCJiVpH+D2aXvFK0Je+7aRyxzMt/lqzSd/ihYLk8J+or/h0xKOlNaWIpsXHcfItSNQhNmqNm/aThHCJ0 ... (46 characters truncated) ... C646zLp4Uo4g7T3u+aOtJW9hhcFiAMebbAP5/Jl4+ySmL5ArnWg1VpsKm1/CSF+Cbc2Gbtvr7M484D1YdURKEnWArQAnGD1wI3pkr0tP/BWAyOedoBya1vV/Nl829+7gJ6Pq/RfRDSXZdsIsKeg==', '00001000000705018977', None, 'L58kmOVtmHuWV/MP+kVAxFBOosZ1J8ZL72OywKhUy5E1wVGDwdMxts53uPmC8kS4Q/2sfQ2WVYf1bnN13q9IjHZH2vywSxYnfk9vybg5WjK3MtPk8Px5urGeDtO3EyOA0lofknjN1HRWV60ZPZEI9 ... (46 characters truncated) ... 4BF9PGi4QTOvZmPojl2xCL1y3dFbDgc2UmhGE8pfzQ7XW1GHXXj4dBM3j0gSMNpJ5iNcQlLrvmQ1cBv0qM+ehTJUEiyChvupwpAFgKrOyn5WEKljxB+M+KD40fhvcIyZAf0fpIgsas18i02qtmw==', None, 'FDE6B84B-D0D2-481D-9F46-749D780FFFEE', '2025-07-06 09:31:07.000000', None, None, None, 'FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml', 9113, None, None, 'processed')
2025-07-11 16:39:39,880 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Saved invoice FDE6B84B-D0D2-481D-9F46-749D780FFFEE with 12 items (ID: 127)
2025-07-11 16:39:39,882 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE invoices SET confidence_score=?, processing_time=? WHERE invoices.id = ?
2025-07-11 16:39:39,883 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 65.48s ago] (0.9875000000000002, 4.9575111865997314, 127)
2025-07-11 16:39:39,885 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:39,886 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 65.48s ago (insertmanyvalues) 1/12 (ordered; batch not supported)] (127, 1, '50405300', None, 'CEBOLLA BLANCA', 6.46, 'KGM', None, 1.0, None, 15.0, 96.9, 0.0, 0.0, 96.9, 'Vegetales', 'Verduras', 'Cebolla Blanca', 'Kilogramos', 6.46, 1.0, 1.0, 'approved_sku', 'approved', 'sku_3823c19d_50405300_cebolla_blanca', '2025-07-11 23:39:39.884900', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:39.884900', '2025-07-11 23:39:39.884900')
2025-07-11 16:39:39,890 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:39,896 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 2/12 (ordered; batch not supported)] (127, 2, '50221303', None, 'MAICENA 425GR', 4.0, 'H87', None, 1.0, None, 63.0, 252.0, 0.0, 0.0, 252.0, 'Abarrotes', 'Harinas', 'Harina de maíz', 'Kilogramos', 4.0, 0.425, 0.95, 'gemini_api', 'pending', 'sku_6d2191f9_50221303_maicena_425gr', '2025-07-11 23:39:39.884900', '{"processing_time": 1.8954377174377441, "api_attempt": 1, "reasoning": "Maicena is a brand of corn starch, which is classified as Harina de ma\\u00ed ... (25 characters truncated) ... tes 425 grams, so the conversion factor is 0.425 kg. The units_per_package is 1 because it is sold as individual units of 425 grams.", "error": null}', '2025-07-11 23:39:39.884900', '2025-07-11 23:39:39.884900')
2025-07-11 16:39:39,900 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:39,902 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 3/12 (ordered; batch not supported)] (127, 3, '50405700', None, 'PAPA RUSSET', 1.0, 'XBX', None, 1.0, None, 450.0, 450.0, 0.0, 0.0, 450.0, 'Vegetales', 'Verduras', 'Papa Russet', 'Kilogramos', 1.0, 1.0, 1.0, 'approved_sku', 'approved', 'sku_d466594e_50405700_papa_russet', '2025-07-11 23:39:39.884900', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:39.884900', '2025-07-11 23:39:39.884900')
2025-07-11 16:39:39,904 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:39,906 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 4/12 (ordered; batch not supported)] (127, 4, '50161509', None, 'AZUCAR', 2.0, 'KGM', None, 1.0, None, 27.0, 54.0, 0.0, 0.0, 54.0, 'Abarrotes', 'Endulzantes', 'Azúcar blanca granulada', 'Kilogramos', 2.0, 1.0, 1.0, 'approved_sku', 'approved', 'sku_dd599020_50161509_azucar', '2025-07-11 23:39:39.884900', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:39.884900', '2025-07-11 23:39:39.884900')
2025-07-11 16:39:39,911 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:39,914 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 5/12 (ordered; batch not supported)] (127, 5, '50171551', None, 'SAL LA FINA', 3.0, 'H87', None, 1.0, None, 30.0, 90.0, 0.0, 0.0, 90.0, 'Abarrotes', 'Condimentos', 'Sal', 'Kilogramos', 3.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_547ba3ea_50171551_sal_la_fina', '2025-07-11 23:39:39.884900', '{"processing_time": 1.5457713603973389, "api_attempt": 1, "reasoning": "\\"SAL LA FINA\\" is classified as salt, a condiment. Since it\'s salt, the standardized unit is Kilogramos. There is no package information in the description, so units_per_package defaults to 1.", "error": null}', '2025-07-11 23:39:39.884900', '2025-07-11 23:39:39.884900')
2025-07-11 16:39:39,916 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:39,917 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 6/12 (ordered; batch not supported)] (127, 6, '50403800', None, 'AJO', 1.02, 'KGM', None, 1.0, None, 140.0, 142.8, 0.0, 0.0, 142.8, 'Vegetales', 'Verduras', 'Ajo Blanco', 'Kilogramos', 1.02, 1.0, 1.0, 'approved_sku', 'approved', 'sku_f355fb89_50403800_ajo', '2025-07-11 23:39:39.884900', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:39.884900', '2025-07-11 23:39:39.884900')
2025-07-11 16:39:39,919 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:39,920 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 7/12 (ordered; batch not supported)] (127, 7, '50101700', None, 'ALMENDRA', 0.2, 'KGM', None, 1.0, None, 280.0, 56.0, 0.0, 0.0, 56.0, 'Abarrotes', 'Nueces y Semillas', 'Nueces', 'Kilogramos', 0.2, 1.0, 0.95, 'gemini_api', 'pending', 'sku_b8e71b2d_50101700_almendra', '2025-07-11 23:39:39.884900', '{"processing_time": 1.5163021087646484, "api_attempt": 1, "reasoning": "Almendra is a nut. The item is sold by KGM, so units_per_package is 1.", "error": null}', '2025-07-11 23:39:39.884900', '2025-07-11 23:39:39.884900')
2025-07-11 16:39:39,923 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:39,928 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 8/12 (ordered; batch not supported)] (127, 8, '50404101', None, 'ALBAHACA', 0.46, 'KGM', None, 1.0, None, 120.0, 55.2, 0.0, 0.0, 55.2, 'Vegetales', 'Verduras', 'Albahaca', 'Kilogramos', 0.46, 1.0, 1.0, 'approved_sku', 'approved', 'sku_65d00f8a_50404101_albahaca', '2025-07-11 23:39:39.884900', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:39.884900', '2025-07-11 23:39:39.884900')
2025-07-11 16:39:39,932 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:39,933 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 9/12 (ordered; batch not supported)] (127, 9, '50401900', None, 'BETABEL', 5.1, 'KGM', None, 1.0, None, 25.0, 127.5, 0.0, 0.0, 127.5, 'Vegetales', 'Verduras', 'Betabel', 'Kilogramos', 5.1, 1.0, 1.0, 'approved_sku', 'approved', 'sku_80bf8a82_50401900_betabel', '2025-07-11 23:39:39.884900', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:39.884900', '2025-07-11 23:39:39.884900')
2025-07-11 16:39:39,936 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:39,937 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 10/12 (ordered; batch not supported)] (127, 10, '50101717', None, 'NUEZ', 1.0, 'KGM', None, 1.0, None, 340.0, 340.0, 0.0, 0.0, 340.0, 'Abarrotes', 'Nueces y Semillas', 'Nueces', 'Kilogramos', 1.0, 1.0, 1.0, 'approved_sku', 'approved', 'sku_822118da_50101717_nuez', '2025-07-11 23:39:39.884900', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:39.884900', '2025-07-11 23:39:39.884900')
2025-07-11 16:39:39,940 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:39,945 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 11/12 (ordered; batch not supported)] (127, 11, '50193105', None, 'PANCO', 1.32, 'KGM', None, 1.0, None, 95.0, 125.4, 0.0, 0.0, 125.4, 'Abarrotes', 'Otros-a', 'Pan Molido', 'Kilogramos', 1.32, 1.0, 1.0, 'approved_sku', 'approved', 'sku_00d189e9_50193105_panco', '2025-07-11 23:39:39.884900', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:39.884900', '2025-07-11 23:39:39.884900')
2025-07-11 16:39:39,949 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:39,951 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 12/12 (ordered; batch not supported)] (127, 12, '50112010', None, 'PIERNA DE POLLO', 3.28, 'KGM', None, 1.0, None, 48.0, 157.44, 0.0, 0.0, 157.44, 'Proteinas', 'Pollo', 'Pierna', 'Kilogramos', 3.28, 1.0, 1.0, 'approved_sku', 'approved', 'sku_bd6f7e4b_50112010_pierna_de_pollo', '2025-07-11 23:39:39.884900', '{"processing_time": 0.0, "api_attempt": null, "reasoning": null, "error": null}', '2025-07-11 23:39:39.884900', '2025-07-11 23:39:39.884900')
2025-07-11 16:39:39,953 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:39,971 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [METADATA] Creating business metadata
2025-07-11 16:39:39,975 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Created metadata for invoice ID 127
2025-07-11 16:39:39,980 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:39,982 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_metadata (invoice_id, uuid, folio, issue_date, issuer_rfc, issuer_name, receiver_rfc, receiver_name, original_currency, original_total, exchange_rate, mxn_total, payment_method, payment_terms, is_installments, is_immediate, total_items, total_categories, avg_confidence, processing_status, has_errors, error_count, is_export, has_digital_stamp, is_certified, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:39,983 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 65.51s ago] (127, 'FDE6B84B-D0D2-481D-9F46-749D780FFFEE', '51751', '2025-07-06', 'PIVV******RR4', 'VANESSA IVON PIÑUELAS VERDUGO', 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', 'MXN', 1947.24, 1.0, 1947.24, '03', 'PUE', 0, 1, 12, 3, 0.9875000000000002, 'completed', 0, 0, 0, 1, 1, '2025-07-11 23:39:39.982667', '2025-07-11 23:39:39.982667')
2025-07-11 16:39:39,986 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:39,998 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Saving to purchase_details table
2025-07-11 16:39:39,999 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:40,000 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.id = ?
2025-07-11 16:39:40,004 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 65.5s ago] (127,)
2025-07-11 16:39:40,006 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoice_metadata.id AS invoice_metadata_id, invoice_metadata.invoice_id AS invoice_metadata_invoice_id, invoice_metadata.uuid AS invoice_metadata_uuid, invoice_metadata.folio AS invoice_metadata_folio, invoice_metadata.issue_date AS invoice_metadata_issue_date, invoice_metadata.issuer_rfc AS invoice_metadata_issuer_rfc, invoice_metadata.issuer_name AS invoice_metadata_issuer_name, invoice_metadata.receiver_rfc AS invoice_metadata_receiver_rfc, invoice_metadata.receiver_name AS invoice_metadata_receiver_name, invoice_metadata.original_currency AS invoice_metadata_original_currency, invoice_metadata.original_total AS invoice_metadata_original_total, invoice_metadata.exchange_rate AS invoice_metadata_exchange_rate, invoice_metadata.mxn_total AS invoice_metadata_mxn_total, invoice_metadata.payment_method AS invoice_metadata_payment_method, invoice_metadata.payment_terms AS invoice_metadata_payment_terms, invoice_metadata.is_installments AS invoice_metadata_is_installments, invoice_metadata.is_immediate AS invoice_metadata_is_immediate, invoice_metadata.total_items AS invoice_metadata_total_items, invoice_metadata.total_categories AS invoice_metadata_total_categories, invoice_metadata.avg_confidence AS invoice_metadata_avg_confidence, invoice_metadata.processing_status AS invoice_metadata_processing_status, invoice_metadata.has_errors AS invoice_metadata_has_errors, invoice_metadata.error_count AS invoice_metadata_error_count, invoice_metadata.is_export AS invoice_metadata_is_export, invoice_metadata.has_digital_stamp AS invoice_metadata_has_digital_stamp, invoice_metadata.is_certified AS invoice_metadata_is_certified, invoice_metadata.created_at AS invoice_metadata_created_at, invoice_metadata.updated_at AS invoice_metadata_updated_at 
FROM invoice_metadata 
WHERE invoice_metadata.invoice_id = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:40,013 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 65.49s ago] (127, 1, 0)
2025-07-11 16:39:40,019 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - ROLLBACK
2025-07-11 16:39:40,021 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 37 values for 38 columns
2025-07-11 16:39:40,022 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Failed to save to purchase_details table: 37 values for 38 columns
2025-07-11 16:39:40,029 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:40,032 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:40,033 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 65.48s ago] (127, 'INFO', 'batch_processor', 'process_file', 'Successfully processed FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml', '{"filename": "FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml", "processing_time": 3.7568116188049316, "item_count": 12, "success": true, "gemini_calls": 3, "approved_skus": 9, "avg_confidence": 0.9875000000000002}', 3.7568116188049316, None, 'FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml', None, '2025-07-11 23:39:40.032513')
2025-07-11 16:39:40,036 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:40,048 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SUCCESS] Processed FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml in 3.76s
2025-07-11 16:39:40,050 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved FDE6B84B-D0D2-481D-9F46-749D780FFFEE.xml to data/processed
2025-07-11 16:39:40,050 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:40,051 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing c82b2675-beff-4470-ba00-d74bacfe06ee.xml (61/64)
2025-07-11 16:39:40,052 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:40,053 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: c82b2675-beff-4470-ba00-d74bacfe06ee.xml
2025-07-11 16:39:40,053 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: c82b2675-beff-4470-ba00-d74bacfe06ee.xml
2025-07-11 16:39:40,062 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:40,065 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: c82b2675-beff-4470-ba00-d74bacfe06ee
2025-07-11 16:39:40,066 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:40,067 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:40,072 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 68.4s ago] ('c82b2675-beff-4470-ba00-d74bacfe06ee', 1, 0)
2025-07-11 16:39:40,082 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID c82b2675-beff-4470-ba00-d74bacfe06ee already exists (ID: 111)
2025-07-11 16:39:40,083 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: c82b2675-beff-4470-ba00-d74bacfe06ee.xml
2025-07-11 16:39:40,084 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: c82b2675-beff-4470-ba00-d74bacfe06ee.xml
2025-07-11 16:39:40,085 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 00:00:00
2025-07-11 16:39:40,086 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $10815.55
2025-07-11 16:39:40,087 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:40,089 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:40,095 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: c82b2675-beff-4470-ba00-d74bacfe06ee
2025-07-11 16:39:40,097 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: c82b2675-beff-4470-ba00-d74bacfe06ee.xml
2025-07-11 16:39:40,099 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-12 16:54:41
2025-07-11 16:39:40,099 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: ABASTECEDORA DE ALIMENTOS Y EMBUTIDOS VALLE HERMANOS
2025-07-11 16:39:40,100 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 10815.55
2025-07-11 16:39:40,101 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:40,102 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:40,103 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:40,106 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 65.55s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process c82b2675-beff-4470-ba00-d74bacfe06ee.xml', '{"filename": "c82b2675-beff-4470-ba00-d74bacfe06ee.xml", "processing_time": 0.0490565299987793, "item_count": 0, "success": false, "error": "DUPLICATE: UUID c82b2675-beff-4470-ba00-d74bacfe06ee already exists"}', 0.0490565299987793, None, 'c82b2675-beff-4470-ba00-d74bacfe06ee.xml', None, '2025-07-11 23:39:40.103972')
2025-07-11 16:39:40,117 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:40,125 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice c82b2675-beff-4470-ba00-d74bacfe06ee.xml - moved to failed directory
2025-07-11 16:39:40,132 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved c82b2675-beff-4470-ba00-d74bacfe06ee.xml to data/failed
2025-07-11 16:39:40,134 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:40,135 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml (62/64)
2025-07-11 16:39:40,136 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:40,137 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml
2025-07-11 16:39:40,138 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml
2025-07-11 16:39:40,148 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:40,149 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: d2799f2a-5efd-46a3-90cf-e3f41a6c1a43
2025-07-11 16:39:40,150 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:40,152 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:40,161 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 68.49s ago] ('d2799f2a-5efd-46a3-90cf-e3f41a6c1a43', 1, 0)
2025-07-11 16:39:40,167 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID d2799f2a-5efd-46a3-90cf-e3f41a6c1a43 already exists (ID: 112)
2025-07-11 16:39:40,168 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml
2025-07-11 16:39:40,169 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml
2025-07-11 16:39:40,169 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-18 00:00:00
2025-07-11 16:39:40,172 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2900.00
2025-07-11 16:39:40,174 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:40,180 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:40,182 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: d2799f2a-5efd-46a3-90cf-e3f41a6c1a43
2025-07-11 16:39:40,184 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml
2025-07-11 16:39:40,185 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-18 17:57:58
2025-07-11 16:39:40,186 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: SERGIO ALBERTO MENDOZA CASTRO
2025-07-11 16:39:40,186 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 2900.00
2025-07-11 16:39:40,188 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:40,194 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:40,198 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:40,199 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 65.64s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml', '{"filename": "d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml", "processing_time": 0.0540769100189209, "item_count": 0, "success": false, "error": "DUPLICATE: UUID d2799f2a-5efd-46a3-90cf-e3f41a6c1a43 already exists"}', 0.0540769100189209, None, 'd2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml', None, '2025-07-11 23:39:40.198949')
2025-07-11 16:39:40,208 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:40,218 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml - moved to failed directory
2025-07-11 16:39:40,222 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved d2799f2a-5efd-46a3-90cf-e3f41a6c1a43.xml to data/failed
2025-07-11 16:39:40,229 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:40,231 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing db7ca908-83b2-49ab-8c86-649a9b9ba470.xml (63/64)
2025-07-11 16:39:40,233 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:40,234 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: db7ca908-83b2-49ab-8c86-649a9b9ba470.xml
2025-07-11 16:39:40,237 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: db7ca908-83b2-49ab-8c86-649a9b9ba470.xml
2025-07-11 16:39:40,250 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:40,255 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: db7ca908-83b2-49ab-8c86-649a9b9ba470
2025-07-11 16:39:40,257 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:40,260 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:40,263 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 68.59s ago] ('db7ca908-83b2-49ab-8c86-649a9b9ba470', 1, 0)
2025-07-11 16:39:40,266 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:40,268 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [CLASSIFY] Classifying 7 items
2025-07-11 16:39:40,275 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:40,285 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:40,289 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 68.6s ago] ('sku_0334f552_50202200_aperitivo_vermouth_carpano_classico_rosso', 1, 0)
2025-07-11 16:39:40,291 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:40,292 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_0334f552_50202200_aperitivo_vermouth_carpano_classico_rosso
2025-07-11 16:39:41,878 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Destilados
2025-07-11 16:39:41,880 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Destilados (units_per_package: 1.0)
2025-07-11 16:39:41,883 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:41,885 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:41,889 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 70.2s ago] ('sku_a0499d41_50202200_aperitivo_vermouth_martini_extra_dry_750_', 1, 0)
2025-07-11 16:39:41,895 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:41,898 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_a0499d41_50202200_aperitivo_vermouth_martini_extra_dry_750_
2025-07-11 16:39:43,498 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Destilados
2025-07-11 16:39:43,499 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Destilados (units_per_package: 1.0)
2025-07-11 16:39:43,501 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:43,503 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:43,510 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 71.82s ago] ('sku_9bcaf72a_50202200_licor_campari_750_ml_licor_campari_750_ml', 1, 0)
2025-07-11 16:39:43,512 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:43,513 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_9bcaf72a_50202200_licor_campari_750_ml_licor_campari_750_ml
2025-07-11 16:39:44,962 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Destilados
2025-07-11 16:39:44,964 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Destilados (units_per_package: 1.0)
2025-07-11 16:39:44,967 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:44,969 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:44,977 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 73.29s ago] ('sku_514701de_50202200_licor_fernet_branca_de_hierbas_750_ml_lic', 1, 0)
2025-07-11 16:39:44,978 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:44,979 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_514701de_50202200_licor_fernet_branca_de_hierbas_750_ml_lic
2025-07-11 16:39:46,627 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Destilados
2025-07-11 16:39:46,628 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Destilados (units_per_package: 1.0)
2025-07-11 16:39:46,630 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:46,631 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:46,633 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 74.94s ago] ('sku_4d7e37ed_50202200_tequila_siete_leguas_reposado_700_ml', 1, 0)
2025-07-11 16:39:46,639 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:46,642 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_4d7e37ed_50202200_tequila_siete_leguas_reposado_700_ml
2025-07-11 16:39:47,961 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Destilados
2025-07-11 16:39:47,962 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Destilados (units_per_package: 1.0)
2025-07-11 16:39:47,964 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:47,966 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:47,972 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 76.28s ago] ('sku_1848377d_50202200_vodka_absolut_pera_750_ml_vodka_absolut_p', 1, 0)
2025-07-11 16:39:47,974 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:47,975 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_1848377d_50202200_vodka_absolut_pera_750_ml_vodka_absolut_p
2025-07-11 16:39:49,544 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Destilados
2025-07-11 16:39:49,546 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Destilados (units_per_package: 1.0)
2025-07-11 16:39:49,548 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:49,551 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id AS approved_skus_id, approved_skus.sku_key AS approved_skus_sku_key, approved_skus.product_code AS approved_skus_product_code, approved_skus.internal_code AS approved_skus_internal_code, approved_skus.normalized_description AS approved_skus_normalized_description, approved_skus.category AS approved_skus_category, approved_skus.subcategory AS approved_skus_subcategory, approved_skus.sub_sub_category AS approved_skus_sub_sub_category, approved_skus.standardized_unit AS approved_skus_standardized_unit, approved_skus.correct_unit_code AS approved_skus_correct_unit_code, approved_skus.units_per_package AS approved_skus_units_per_package, approved_skus.package_type AS approved_skus_package_type, approved_skus.conversion_notes AS approved_skus_conversion_notes, approved_skus.typical_quantity_range AS approved_skus_typical_quantity_range, approved_skus.approved_by AS approved_skus_approved_by, approved_skus.approval_date AS approved_skus_approval_date, approved_skus.confidence_score AS approved_skus_confidence_score, approved_skus.usage_count AS approved_skus_usage_count, approved_skus.last_used AS approved_skus_last_used, approved_skus.review_status AS approved_skus_review_status, approved_skus.review_notes AS approved_skus_review_notes, approved_skus.created_at AS approved_skus_created_at, approved_skus.updated_at AS approved_skus_updated_at 
FROM approved_skus 
WHERE approved_skus.sku_key = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:49,556 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 77.87s ago] ('sku_9d908873_50202200_vodka_titos_handmade_750_ml_vodka_titos_h', 1, 0)
2025-07-11 16:39:49,557 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:49,558 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Calling Gemini API for new item: sku_9d908873_50202200_vodka_titos_handmade_750_ml_vodka_titos_h
2025-07-11 16:39:50,855 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API success on attempt 1: Bebidas -> Destilados
2025-07-11 16:39:50,856 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini classification complete: Bebidas -> Destilados (units_per_package: 1.0)
2025-07-11 16:39:50,857 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [STORE] Saving to database
2025-07-11 16:39:50,860 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:50,862 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoices (uuid, series, folio, invoice_type, version, issue_date, certification_date, created_at, updated_at, issuer_rfc, issuer_name, issuer_fiscal_regime, issuer_use_cfdi, issuer_residence, issuer_tax_id, receiver_rfc, receiver_name, receiver_fiscal_address, receiver_residence, receiver_tax_id, receiver_use_cfdi, payment_method, payment_method_desc, payment_terms, payment_conditions, currency, exchange_rate, subtotal, total_discount, total_transferred_taxes, total_withheld_taxes, total_amount, digital_stamp, certificate_number, certificate, sat_seal, sat_certificate, fiscal_folio, stamp_datetime, expedition_place, export_operation, confirmation, source_filename, xml_file_size, confidence_score, processing_time, processing_status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:50,866 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 76.48s ago] ('db7ca908-83b2-49ab-8c86-649a9b9ba470', 'Los Cabos', 'CAB-INV-000013', 'I', '4.0', '2025-07-01 00:00:00.000000', None, '2025-07-11 23:39:50.862856', '2025-07-11 23:39:50.862856', 'CLI******UP6', 'CPS LICORES', '601', None, None, None, 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', '23300', None, None, None, '99', None, 'PPD', None, 'MXN', 1.0, 4992.66, 0.0, 3741.95, 0.0, 8734.61, 'TdQS3OOBBWc+TaSpD2+vonUqhQPZL6AwVFaHtKbqAW9ugTqU7D0/PipeRkSStVwa1/cwVKy1BtJUMWXUY/bWiQSMNIKnL0tMfft8yxGwztvTwVOng6iNLguj8FiareCL/7yyHYFykvlz+9r/m3BQ2 ... (46 characters truncated) ... 7tK5cu0rAtNzzwQjDCRWwi/arQqPreNrvhXBCvkE1RvmSMnL3k/aldPuvue4yMqfu1Zahlynr/RNp/eF96aDhuw4na+NarSVKETAfbyTDD/ZvZmjr9eDknEKel1grKGwJicaW3fOd2QSVOOmcHA==', '00001000000704586310', None, 'WWhOG5XAAmLILE2IZdEagtsBy9eWU064xskv+Nuj0vNGU09Pe5gGF/CH6bH8PaKeUa+EO092XkmEGFNtQrm+tHEF7hTfx1QcE0oduC8eNSQYYOf5d1h6C1DEk05AsyWzM2fjXkzmqWYzU0iZaDNKm ... (46 characters truncated) ... sOD7QxAU58/nhsQoCQyloZ+BT6Nk4UaJd8oyscqafs/tirtIwTmozntJRp6uptfBpakm/6VuO+8xJUREDfwGkD9K7r/q5aTYTBIS05miD9pyrwG0VeZ+qq2RtAcrcuaQcZTIuKkwz4gxJGWRvWA==', None, 'db7ca908-83b2-49ab-8c86-649a9b9ba470', '2025-07-01 15:52:01.000000', None, None, None, 'db7ca908-83b2-49ab-8c86-649a9b9ba470.xml', 8526, None, None, 'processed')
2025-07-11 16:39:50,880 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Saved invoice db7ca908-83b2-49ab-8c86-649a9b9ba470 with 7 items (ID: 128)
2025-07-11 16:39:50,886 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - UPDATE invoices SET confidence_score=?, processing_time=? WHERE invoices.id = ?
2025-07-11 16:39:50,888 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 76.49s ago] (0.9500000000000001, 10.45948600769043, 128)
2025-07-11 16:39:50,890 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:50,892 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 76.48s ago (insertmanyvalues) 1/7 (ordered; batch not supported)] (128, 1, '50202200', None, 'APERITIVO VERMOUTH CARPANO CLASSICO ROSSO 1000 ML - APERITIVO VERMOUTH CARPANO CLASSICO ROSSO 1000 ML', 1.0, 'H87', None, 1.0, 'Botella', 302.4204, 302.42, 0.0, 0.0, 456.05, 'Bebidas', 'Destilados', 'Licores', 'Litros', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_0334f552_50202200_aperitivo_vermouth_carpano_classico_rosso', '2025-07-11 23:39:50.890353', '{"processing_time": 1.5850858688354492, "api_attempt": 1, "reasoning": "The item is a vermouth, which is a type of fortified wine and classified as a \'Licor\'. The quantity is 1000 ML, which is 1 Liter. The description indicates it is sold in a bottle.", "error": null}', '2025-07-11 23:39:50.890353', '2025-07-11 23:39:50.890353')
2025-07-11 16:39:50,894 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:50,895 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 2/7 (ordered; batch not supported)] (128, 2, '50202200', None, 'APERITIVO VERMOUTH MARTINI EXTRA DRY 750 ML - APERITIVO VERMOUTH MARTINI EXTRA DRY 750 ML', 1.0, 'H87', None, 1.0, 'Botella', 171.2467, 171.25, 0.0, 0.0, 258.25, 'Bebidas', 'Destilados', 'Licores', 'Litros', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_a0499d41_50202200_aperitivo_vermouth_martini_extra_dry_750_', '2025-07-11 23:39:50.890353', '{"processing_time": 1.598700761795044, "api_attempt": 1, "reasoning": "The item is described as \'APERITIVO VERMOUTH MARTINI EXTRA DRY 750 ML\', whic ... (36 characters truncated) ... is 1.000000, and the volume is 750 ml, which is less than a liter, so the standardized unit is Litros. There is one bottle per item.", "error": null}', '2025-07-11 23:39:50.890353', '2025-07-11 23:39:50.890353')
2025-07-11 16:39:50,902 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:50,904 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 3/7 (ordered; batch not supported)] (128, 3, '50202200', None, 'LICOR CAMPARI 750 ML - LICOR CAMPARI 750 ML', 1.0, 'H87', None, 1.0, 'Botella', 203.8032, 203.8, 0.0, 0.0, 361.7, 'Bebidas', 'Destilados', 'Licores', 'Litros', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_9bcaf72a_50202200_licor_campari_750_ml_licor_campari_750_ml', '2025-07-11 23:39:50.890353', '{"processing_time": 1.4482214450836182, "api_attempt": 1, "reasoning": "The item is described as \'LICOR CAMPARI 750 ML\', which falls under the \'Li ... (38 characters truncated) ... estilados\' subcategory of \'Bebidas\'. The quantity is 750 ML, so the standardized unit is Litros. There is one bottle per package.", "error": null}', '2025-07-11 23:39:50.890353', '2025-07-11 23:39:50.890353')
2025-07-11 16:39:50,907 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:50,907 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 4/7 (ordered; batch not supported)] (128, 4, '50202200', None, 'LICOR FERNET BRANCA DE HIERBAS 750 ML - LICOR FERNET BRANCA DE HIERBAS 750 ML', 1.0, 'H87', None, 1.0, 'Botella', 273.6646, 273.66, 0.0, 0.0, 485.69, 'Bebidas', 'Destilados', 'Licores', 'Litros', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_514701de_50202200_licor_fernet_branca_de_hierbas_750_ml_lic', '2025-07-11 23:39:50.890353', '{"processing_time": 1.6463422775268555, "api_attempt": 1, "reasoning": "The item is described as \'LICOR FERNET BRANCA DE HIERBAS 750 ML\', which cle ... (85 characters truncated) ... y of \'Bebidas\'. The quantity is 1, and the volume is 750ml, so the standardized unit is Litros, and there is 1 bottle per package.", "error": null}', '2025-07-11 23:39:50.890353', '2025-07-11 23:39:50.890353')
2025-07-11 16:39:50,910 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:50,912 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 5/7 (ordered; batch not supported)] (128, 5, '50202200', None, 'TEQUILA SIETE LEGUAS REPOSADO 700 ML', 1.0, 'H87', None, 1.0, 'Botella', 373.6928, 373.69, 0.0, 0.0, 663.23, 'Bebidas', 'Destilados', 'Tequila', 'Litros', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_4d7e37ed_50202200_tequila_siete_leguas_reposado_700_ml', '2025-07-11 23:39:50.890353', '{"processing_time": 1.3179643154144287, "api_attempt": 1, "reasoning": "The item is Tequila, which falls under Destilados. The description indicates a 700 ML bottle, so the standardized unit is Litros and there is 1 bottle per package.", "error": null}', '2025-07-11 23:39:50.890353', '2025-07-11 23:39:50.890353')
2025-07-11 16:39:50,915 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:50,920 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 6/7 (ordered; batch not supported)] (128, 6, '50202200', None, 'VODKA ABSOLUT PERA 750 ML - VODKA ABSOLUT PERA 750 ML', 24.0, 'H87', None, 1.0, 'Botella', 141.2272, 3389.45, 0.0, 0.0, 6015.6, 'Bebidas', 'Destilados', 'Vodka', 'Litros', 24.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_1848377d_50202200_vodka_absolut_pera_750_ml_vodka_absolut_p', '2025-07-11 23:39:50.890353', '{"processing_time": 1.5683443546295166, "api_attempt": 1, "reasoning": "The item is described as \'VODKA ABSOLUT PERA 750 ML\', which clearly falls u ... (91 characters truncated) ... e quantity is given in ml, so the standardized unit is Litros. The description refers to a single bottle, so units_per_package is 1.", "error": null}', '2025-07-11 23:39:50.890353', '2025-07-11 23:39:50.890353')
2025-07-11 16:39:50,923 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, total_tax_amount, total_amount, category, sub ... 231 characters truncated ... (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id
2025-07-11 16:39:50,924 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [insertmanyvalues 7/7 (ordered; batch not supported)] (128, 7, '50202200', None, "VODKA TITO'S HANDMADE 750 ML - VODKA TITO'S HANDMADE 750 ML", 1.0, 'H87', None, 1.0, 'Botella', 278.3919, 278.39, 0.0, 0.0, 494.09, 'Bebidas', 'Destilados', 'Vodka', 'Litros', 1.0, 1.0, 0.95, 'gemini_api', 'pending', 'sku_9d908873_50202200_vodka_titos_handmade_750_ml_vodka_titos_h', '2025-07-11 23:39:50.890353', '{"processing_time": 1.2948269844055176, "api_attempt": 1, "reasoning": "The item is clearly vodka, which falls under \'Destilados\'. The description indicates a 750 ml bottle, so units_per_package is 1 and the standardized unit is Litros.", "error": null}', '2025-07-11 23:39:50.890353', '2025-07-11 23:39:50.890353')
2025-07-11 16:39:50,927 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:50,942 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [METADATA] Creating business metadata
2025-07-11 16:39:50,944 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Created metadata for invoice ID 128
2025-07-11 16:39:50,945 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:50,947 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_metadata (invoice_id, uuid, folio, issue_date, issuer_rfc, issuer_name, receiver_rfc, receiver_name, original_currency, original_total, exchange_rate, mxn_total, payment_method, payment_terms, is_installments, is_immediate, total_items, total_categories, avg_confidence, processing_status, has_errors, error_count, is_export, has_digital_stamp, is_certified, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:50,952 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 76.48s ago] (128, 'db7ca908-83b2-49ab-8c86-649a9b9ba470', 'CAB-INV-000013', '2025-07-01', 'CLI******UP6', 'CPS LICORES', 'YUGY******FK4', 'YASSER YUSSIF GONZALEZ', 'MXN', 8734.61, 1.0, 8734.61, '99', 'PPD', 1, 0, 7, 1, 0.9500000000000001, 'completed', 0, 0, 0, 1, 1, '2025-07-11 23:39:50.947595', '2025-07-11 23:39:50.947595')
2025-07-11 16:39:50,958 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:50,968 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Saving to purchase_details table
2025-07-11 16:39:50,972 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:50,973 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.id = ?
2025-07-11 16:39:50,975 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 76.47s ago] (128,)
2025-07-11 16:39:50,977 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoice_metadata.id AS invoice_metadata_id, invoice_metadata.invoice_id AS invoice_metadata_invoice_id, invoice_metadata.uuid AS invoice_metadata_uuid, invoice_metadata.folio AS invoice_metadata_folio, invoice_metadata.issue_date AS invoice_metadata_issue_date, invoice_metadata.issuer_rfc AS invoice_metadata_issuer_rfc, invoice_metadata.issuer_name AS invoice_metadata_issuer_name, invoice_metadata.receiver_rfc AS invoice_metadata_receiver_rfc, invoice_metadata.receiver_name AS invoice_metadata_receiver_name, invoice_metadata.original_currency AS invoice_metadata_original_currency, invoice_metadata.original_total AS invoice_metadata_original_total, invoice_metadata.exchange_rate AS invoice_metadata_exchange_rate, invoice_metadata.mxn_total AS invoice_metadata_mxn_total, invoice_metadata.payment_method AS invoice_metadata_payment_method, invoice_metadata.payment_terms AS invoice_metadata_payment_terms, invoice_metadata.is_installments AS invoice_metadata_is_installments, invoice_metadata.is_immediate AS invoice_metadata_is_immediate, invoice_metadata.total_items AS invoice_metadata_total_items, invoice_metadata.total_categories AS invoice_metadata_total_categories, invoice_metadata.avg_confidence AS invoice_metadata_avg_confidence, invoice_metadata.processing_status AS invoice_metadata_processing_status, invoice_metadata.has_errors AS invoice_metadata_has_errors, invoice_metadata.error_count AS invoice_metadata_error_count, invoice_metadata.is_export AS invoice_metadata_is_export, invoice_metadata.has_digital_stamp AS invoice_metadata_has_digital_stamp, invoice_metadata.is_certified AS invoice_metadata_is_certified, invoice_metadata.created_at AS invoice_metadata_created_at, invoice_metadata.updated_at AS invoice_metadata_updated_at 
FROM invoice_metadata 
WHERE invoice_metadata.invoice_id = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:50,979 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 76.45s ago] (128, 1, 0)
2025-07-11 16:39:50,990 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - ROLLBACK
2025-07-11 16:39:50,991 - src.data.database - ERROR - File: database.py - File: database.py - File: database.py - Database session error: 37 values for 38 columns
2025-07-11 16:39:50,992 - src.processing.batch_processor - ERROR - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PURCHASE_DETAILS] Failed to save to purchase_details table: 37 values for 38 columns
2025-07-11 16:39:50,994 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:50,995 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:50,996 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 76.44s ago] (128, 'INFO', 'batch_processor', 'process_file', 'Successfully processed db7ca908-83b2-49ab-8c86-649a9b9ba470.xml', '{"filename": "db7ca908-83b2-49ab-8c86-649a9b9ba470.xml", "processing_time": 10.758931636810303, "item_count": 7, "success": true, "gemini_calls": 7, "approved_skus": 0, "avg_confidence": 0.9500000000000001}', 10.758931636810303, None, 'db7ca908-83b2-49ab-8c86-649a9b9ba470.xml', None, '2025-07-11 23:39:50.995415')
2025-07-11 16:39:51,004 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:51,010 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SUCCESS] Processed db7ca908-83b2-49ab-8c86-649a9b9ba470.xml in 10.76s
2025-07-11 16:39:51,013 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved db7ca908-83b2-49ab-8c86-649a9b9ba470.xml to data/processed
2025-07-11 16:39:51,016 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:51,019 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Processing f525505f-f7f0-4d56-b685-99166d38d287.xml (64/64)
2025-07-11 16:39:51,021 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:51,024 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Processing file: f525505f-f7f0-4d56-b685-99166d38d287.xml
2025-07-11 16:39:51,025 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [PARSE] Parsing XML: f525505f-f7f0-4d56-b685-99166d38d287.xml
2025-07-11 16:39:51,028 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - Successfully parsed CFDI XML
2025-07-11 16:39:51,029 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [DUPLICATE CHECK] Checking UUID: f525505f-f7f0-4d56-b685-99166d38d287
2025-07-11 16:39:51,030 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:51,035 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id AS invoices_id, invoices.uuid AS invoices_uuid, invoices.series AS invoices_series, invoices.folio AS invoices_folio, invoices.invoice_type AS invoices_invoice_type, invoices.version AS invoices_version, invoices.issue_date AS invoices_issue_date, invoices.certification_date AS invoices_certification_date, invoices.created_at AS invoices_created_at, invoices.updated_at AS invoices_updated_at, invoices.issuer_rfc AS invoices_issuer_rfc, invoices.issuer_name AS invoices_issuer_name, invoices.issuer_fiscal_regime AS invoices_issuer_fiscal_regime, invoices.issuer_use_cfdi AS invoices_issuer_use_cfdi, invoices.issuer_residence AS invoices_issuer_residence, invoices.issuer_tax_id AS invoices_issuer_tax_id, invoices.receiver_rfc AS invoices_receiver_rfc, invoices.receiver_name AS invoices_receiver_name, invoices.receiver_fiscal_address AS invoices_receiver_fiscal_address, invoices.receiver_residence AS invoices_receiver_residence, invoices.receiver_tax_id AS invoices_receiver_tax_id, invoices.receiver_use_cfdi AS invoices_receiver_use_cfdi, invoices.payment_method AS invoices_payment_method, invoices.payment_method_desc AS invoices_payment_method_desc, invoices.payment_terms AS invoices_payment_terms, invoices.payment_conditions AS invoices_payment_conditions, invoices.currency AS invoices_currency, invoices.exchange_rate AS invoices_exchange_rate, invoices.subtotal AS invoices_subtotal, invoices.total_discount AS invoices_total_discount, invoices.total_transferred_taxes AS invoices_total_transferred_taxes, invoices.total_withheld_taxes AS invoices_total_withheld_taxes, invoices.total_amount AS invoices_total_amount, invoices.digital_stamp AS invoices_digital_stamp, invoices.certificate_number AS invoices_certificate_number, invoices.certificate AS invoices_certificate, invoices.sat_seal AS invoices_sat_seal, invoices.sat_certificate AS invoices_sat_certificate, invoices.fiscal_folio AS invoices_fiscal_folio, invoices.stamp_datetime AS invoices_stamp_datetime, invoices.expedition_place AS invoices_expedition_place, invoices.export_operation AS invoices_export_operation, invoices.confirmation AS invoices_confirmation, invoices.source_filename AS invoices_source_filename, invoices.xml_file_size AS invoices_xml_file_size, invoices.confidence_score AS invoices_confidence_score, invoices.processing_time AS invoices_processing_time, invoices.processing_status AS invoices_processing_status, invoices.validation_errors AS invoices_validation_errors, invoices.custom_fields AS invoices_custom_fields 
FROM invoices 
WHERE invoices.uuid = ?
 LIMIT ? OFFSET ?
2025-07-11 16:39:51,039 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 79.37s ago] ('f525505f-f7f0-4d56-b685-99166d38d287', 1, 0)
2025-07-11 16:39:51,040 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 🔄 DUPLICATE DETECTED: Invoice UUID f525505f-f7f0-4d56-b685-99166d38d287 already exists (ID: 113)
2025-07-11 16:39:51,042 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Original file: f525505f-f7f0-4d56-b685-99166d38d287.xml
2025-07-11 16:39:51,043 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: f525505f-f7f0-4d56-b685-99166d38d287.xml
2025-07-11 16:39:51,043 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 00:00:00
2025-07-11 16:39:51,044 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total amount: $2785.59
2025-07-11 16:39:51,045 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:51,046 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 📊 DUPLICATE INVOICE DETAILS:
2025-07-11 16:39:51,048 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    UUID: f525505f-f7f0-4d56-b685-99166d38d287
2025-07-11 16:39:51,053 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Current file: f525505f-f7f0-4d56-b685-99166d38d287.xml
2025-07-11 16:39:51,053 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issue date: 2025-06-13 06:36:45
2025-07-11 16:39:51,056 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Issuer: ABASTECEDORA DE ALIMENTOS Y EMBUTIDOS VALLE HERMANOS
2025-07-11 16:39:51,057 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Total: 2785.59
2025-07-11 16:39:51,057 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py -    Action: Skipping duplicate file
2025-07-11 16:39:51,058 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-11 16:39:51,059 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO processing_logs (invoice_id, log_level, component, operation, message, details, execution_time, memory_usage, filename, item_line_number, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 16:39:51,060 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 76.5s ago] (None, 'ERROR', 'batch_processor', 'process_file', 'Failed to process f525505f-f7f0-4d56-b685-99166d38d287.xml', '{"filename": "f525505f-f7f0-4d56-b685-99166d38d287.xml", "processing_time": 0.0346224308013916, "item_count": 0, "success": false, "error": "DUPLICATE: UUID f525505f-f7f0-4d56-b685-99166d38d287 already exists"}', 0.0346224308013916, None, 'f525505f-f7f0-4d56-b685-99166d38d287.xml', None, '2025-07-11 23:39:51.059666')
2025-07-11 16:39:51,069 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-11 16:39:51,076 - src.processing.batch_processor - WARNING - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [SKIPPED] Duplicate invoice f525505f-f7f0-4d56-b685-99166d38d287.xml - moved to failed directory
2025-07-11 16:39:51,080 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Moved f525505f-f7f0-4d56-b685-99166d38d287.xml to data/failed
2025-07-11 16:39:51,083 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - 
================================================================================
2025-07-11 16:39:51,083 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - FINAL PROCESSING SUMMARY
2025-07-11 16:39:51,083 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - ================================================================================
2025-07-11 16:39:51,083 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Total files: 64
2025-07-11 16:39:51,083 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Successfully processed: 15
2025-07-11 16:39:51,092 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Failed: 49
2025-07-11 16:39:51,092 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Success rate: 23.4%
2025-07-11 16:39:51,093 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Total processing time: 79.51s
2025-07-11 16:39:51,093 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Average time per file: 1.24s
2025-07-11 16:39:51,094 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Inbox processing completed
2025-07-11 16:41:23,380 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Logging configured for environment: dev
2025-07-11 16:41:23,380 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Log level: DEBUG
2025-07-11 16:41:23,380 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Log directory: logs
2025-07-11 16:41:23,380 - __main__ - INFO - File: main.py - File: main.py - File: main.py - CFDI Processing System v4 started
2025-07-11 16:41:23,385 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Environment: dev
2025-07-11 16:41:23,385 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Log level: DEBUG
2025-07-11 16:41:23,394 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Starting inbox processing...
2025-07-11 16:41:23,398 - src.processing.cfdi_parser - INFO - File: cfdi_parser.py - File: cfdi_parser.py - File: cfdi_parser.py - CFDI Parser initialized
2025-07-11 16:41:23,438 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database connection established: sqlite:///data/database/cfdi_system_v4.db
2025-07-11 16:41:23,443 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database Manager initialized
2025-07-11 16:41:23,444 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Gemini API initialized with model: gemini-2.0-flash
2025-07-11 16:41:23,446 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - Loaded P62 categories: 11 main categories
2025-07-11 16:41:23,447 - src.processing.gemini_classifier - INFO - File: gemini_classifier.py - File: gemini_classifier.py - File: gemini_classifier.py - GeminiClassifier initialized successfully
2025-07-11 16:41:23,448 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database connection established: sqlite:///data/database/cfdi_system_v4.db
2025-07-11 16:41:23,450 - src.data.database - INFO - File: database.py - File: database.py - File: database.py - Database Manager initialized
2025-07-11 16:41:23,451 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - BatchProcessor initialized successfully
2025-07-11 16:41:23,455 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [START] Starting inbox processing: data/inbox
2025-07-11 16:41:23,462 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - Found 0 XML files in data/inbox
2025-07-11 16:41:23,464 - src.processing.batch_processor - INFO - File: batch_processor.py - File: batch_processor.py - File: batch_processor.py - [INFO] No XML files found in inbox
2025-07-11 16:41:23,465 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Inbox processing completed
2025-07-14 14:22:35,458 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Logging configured for environment: dev
2025-07-14 14:22:35,461 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Log level: DEBUG
2025-07-14 14:22:35,461 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Log directory: logs
2025-07-14 14:22:35,463 - __main__ - INFO - File: migrate_data.py - File: migrate_data.py - File: migrate_data.py - 🚀 STARTING DATA MIGRATION PROCESS
2025-07-14 14:22:35,464 - __main__ - ERROR - File: migrate_data.py - File: migrate_data.py - File: migrate_data.py - DATABASE_URL in .env file is not a PostgreSQL URL.
2025-07-14 14:33:50,740 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Logging configured for environment: dev
2025-07-14 14:33:50,741 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Log level: DEBUG
2025-07-14 14:33:50,742 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Log directory: logs
2025-07-14 14:33:50,743 - __main__ - INFO - File: migrate_data.py - File: migrate_data.py - File: migrate_data.py - 🚀 STARTING DATA MIGRATION PROCESS
2025-07-14 14:33:50,744 - __main__ - INFO - File: migrate_data.py - File: migrate_data.py - File: migrate_data.py - Source (SQLite): sqlite:///C:\Users\Lenovo.DESKTOP-IFK4702\Desktop\02. PROGRAMACION\01. TRAINING EXCERSISES\01. Proyecto Costeo Facturas_v3\data\database\cfdi_system_v4.db
2025-07-14 14:33:50,746 - __main__ - INFO - File: migrate_data.py - File: migrate_data.py - File: migrate_data.py - Connecting to databases...
2025-07-14 14:33:51,230 - __main__ - INFO - File: migrate_data.py - File: migrate_data.py - File: migrate_data.py - Source (SQLite) connection successful.
2025-07-14 14:33:54,088 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - select pg_catalog.version()
2025-07-14 14:33:54,099 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] {}
2025-07-14 14:33:54,614 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - select current_schema()
2025-07-14 14:33:54,615 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] {}
2025-07-14 14:33:55,124 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - show standard_conforming_strings
2025-07-14 14:33:55,126 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] {}
2025-07-14 14:33:55,626 - __main__ - INFO - File: migrate_data.py - File: migrate_data.py - File: migrate_data.py - Destination (Postgres) connection successful.
2025-07-14 14:33:55,626 - __main__ - INFO - File: migrate_data.py - File: migrate_data.py - File: migrate_data.py - Migrating tables...
2025-07-14 14:33:55,640 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-14 14:33:55,644 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT COUNT(*) FROM invoices
2025-07-14 14:33:55,647 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00509s] ()
2025-07-14 14:33:55,659 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - ROLLBACK
2025-07-14 14:33:55,660 - __main__ - INFO - File: migrate_data.py - File: migrate_data.py - File: migrate_data.py - Reading 128 rows from SQLite table 'invoices'...
2025-07-14 14:33:55,661 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-14 14:33:55,663 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.table_info("invoices")
2025-07-14 14:33:55,664 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,664 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT name FROM sqlite_master WHERE type='table' AND name NOT LIKE 'sqlite~_%' ESCAPE '~' ORDER BY name
2025-07-14 14:33:55,667 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,667 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT name FROM sqlite_master WHERE type='view' AND name NOT LIKE 'sqlite~_%' ESCAPE '~' ORDER BY name
2025-07-14 14:33:55,667 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,674 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.table_xinfo("invoices")
2025-07-14 14:33:55,677 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,677 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT sql FROM  (SELECT * FROM sqlite_master UNION ALL   SELECT * FROM sqlite_temp_master) WHERE name = ? AND type in ('table', 'view')
2025-07-14 14:33:55,677 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ('invoices',)
2025-07-14 14:33:55,687 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.foreign_key_list("invoices")
2025-07-14 14:33:55,687 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,689 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA temp.foreign_key_list("invoices")
2025-07-14 14:33:55,689 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,691 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT sql FROM  (SELECT * FROM sqlite_master UNION ALL   SELECT * FROM sqlite_temp_master) WHERE name = ? AND type in ('table', 'view')
2025-07-14 14:33:55,692 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ('invoices',)
2025-07-14 14:33:55,693 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_list("invoices")
2025-07-14 14:33:55,700 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,700 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoices_issue_date")
2025-07-14 14:33:55,703 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,705 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoices_uuid")
2025-07-14 14:33:55,706 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,706 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_invoice_type_date")
2025-07-14 14:33:55,707 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,709 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_invoice_receiver_date")
2025-07-14 14:33:55,709 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,712 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_invoice_status")
2025-07-14 14:33:55,712 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,716 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_invoice_issuer_date")
2025-07-14 14:33:55,717 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,717 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoices_folio")
2025-07-14 14:33:55,717 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,717 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoices_receiver_rfc")
2025-07-14 14:33:55,717 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,717 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_invoice_amount_date")
2025-07-14 14:33:55,724 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,725 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoices_issuer_rfc")
2025-07-14 14:33:55,725 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,728 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_list("invoices")
2025-07-14 14:33:55,729 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,733 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoices_issue_date")
2025-07-14 14:33:55,733 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,735 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoices_uuid")
2025-07-14 14:33:55,736 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,738 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_invoice_type_date")
2025-07-14 14:33:55,738 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,738 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_invoice_receiver_date")
2025-07-14 14:33:55,740 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,742 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_invoice_status")
2025-07-14 14:33:55,742 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,742 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_invoice_issuer_date")
2025-07-14 14:33:55,747 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,748 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoices_folio")
2025-07-14 14:33:55,750 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,752 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoices_receiver_rfc")
2025-07-14 14:33:55,753 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,753 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_invoice_amount_date")
2025-07-14 14:33:55,753 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,753 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoices_issuer_rfc")
2025-07-14 14:33:55,753 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:55,759 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT sql FROM  (SELECT * FROM sqlite_master UNION ALL   SELECT * FROM sqlite_temp_master) WHERE name = ? AND type in ('table', 'view')
2025-07-14 14:33:55,759 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ('invoices',)
2025-07-14 14:33:55,775 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoices.id, invoices.uuid, invoices.series, invoices.folio, invoices.invoice_type, invoices.version, invoices.issue_date, invoices.certification_date, invoices.created_at, invoices.updated_at, invoices.issuer_rfc, invoices.issuer_name, invoices.issuer_fiscal_regime, invoices.issuer_use_cfdi, invoices.issuer_residence, invoices.issuer_tax_id, invoices.receiver_rfc, invoices.receiver_name, invoices.receiver_fiscal_address, invoices.receiver_residence, invoices.receiver_tax_id, invoices.receiver_use_cfdi, invoices.payment_method, invoices.payment_method_desc, invoices.payment_terms, invoices.payment_conditions, invoices.currency, invoices.exchange_rate, invoices.subtotal, invoices.total_discount, invoices.total_transferred_taxes, invoices.total_withheld_taxes, invoices.total_amount, invoices.digital_stamp, invoices.certificate_number, invoices.certificate, invoices.sat_seal, invoices.sat_certificate, invoices.fiscal_folio, invoices.stamp_datetime, invoices.expedition_place, invoices.export_operation, invoices.confirmation, invoices.source_filename, invoices.xml_file_size, invoices.confidence_score, invoices.processing_time, invoices.processing_status, invoices.validation_errors, invoices.custom_fields 
FROM invoices
2025-07-14 14:33:55,780 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00502s] ()
2025-07-14 14:33:55,816 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-14 14:33:55,816 - __main__ - INFO - File: migrate_data.py - File: migrate_data.py - File: migrate_data.py - Writing 128 rows to PostgreSQL table 'invoices'...
2025-07-14 14:33:55,824 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-14 14:33:55,842 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-07-14 14:33:55,843 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00139s] {'table_name': 'invoices', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-07-14 14:33:56,394 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - 
CREATE TABLE invoices (
	id BIGINT, 
	uuid TEXT, 
	series TEXT, 
	folio TEXT, 
	invoice_type TEXT, 
	version TEXT, 
	issue_date TIMESTAMP WITHOUT TIME ZONE, 
	certification_date TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	issuer_rfc TEXT, 
	issuer_name TEXT, 
	issuer_fiscal_regime TEXT, 
	issuer_use_cfdi TEXT, 
	issuer_residence TEXT, 
	issuer_tax_id TEXT, 
	receiver_rfc TEXT, 
	receiver_name TEXT, 
	receiver_fiscal_address TEXT, 
	receiver_residence TEXT, 
	receiver_tax_id TEXT, 
	receiver_use_cfdi TEXT, 
	payment_method TEXT, 
	payment_method_desc TEXT, 
	payment_terms TEXT, 
	payment_conditions TEXT, 
	currency TEXT, 
	exchange_rate FLOAT(53), 
	subtotal FLOAT(53), 
	total_discount FLOAT(53), 
	total_transferred_taxes FLOAT(53), 
	total_withheld_taxes BIGINT, 
	total_amount FLOAT(53), 
	digital_stamp TEXT, 
	certificate_number TEXT, 
	certificate TEXT, 
	sat_seal TEXT, 
	sat_certificate TEXT, 
	fiscal_folio TEXT, 
	stamp_datetime TIMESTAMP WITHOUT TIME ZONE, 
	expedition_place TEXT, 
	export_operation TEXT, 
	confirmation TEXT, 
	source_filename TEXT, 
	xml_file_size BIGINT, 
	confidence_score FLOAT(53), 
	processing_time FLOAT(53), 
	processing_status TEXT, 
	validation_errors TEXT, 
	custom_fields TEXT
)


2025-07-14 14:33:56,402 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [no key 0.00810s] {}
2025-07-14 14:33:56,709 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoices (id, uuid, series, folio, invoice_type, version, issue_date, certification_date, created_at, updated_at, issuer_rfc, issuer_name, issuer_fiscal_regime, issuer_use_cfdi, issuer_residence, issuer_tax_id, receiver_rfc, receiver_name ... 151363 characters truncated ... cessing_time__127)s, %(processing_status__127)s, %(validation_errors__127)s, %(custom_fields__127)s)
2025-07-14 14:33:56,709 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00673s (insertmanyvalues) 1/1 (unordered)] {'invoice_type__0': 'I', 'receiver_residence__0': None, 'source_filename__0': '026E4ACE-A7AB-4379-8BC2-BD4939AC1F3C.xml', 'xml_file_size__0': 5026, 'issuer_name__0': 'FERRETERIA ROMEX', 'issuer_fiscal_regime__0': '601', 'total_withheld_taxes__0': 0, 'receiver_tax_id__0': None, 'confidence_score__0': 0.95, 'created_at__0': datetime.datetime(2025, 6, 17, 23, 26, 55, 448893), 'issuer_use_cfdi__0': None, 'issuer_rfc__0': 'FRO******8G3', 'certification_date__0': None, 'issue_date__0': datetime.datetime(2025, 5, 14, 0, 0), 'updated_at__0': datetime.datetime(2025, 6, 17, 23, 26, 55, 448893), 'version__0': '4.0', 'receiver_name__0': 'YASSER YUSSIF GONZALEZ', 'payment_terms__0': 'PUE', 'subtotal__0': 797.41, 'digital_stamp__0': 'IDndNgFfJacwwYknB6SyDc5oACw4GJxZBkltl6vEPlHFMZp+PHDk6sGwVNkM0x6UjB4+K1fL25TnRajiufyNkMYLRLvRJeHueUk/aUpQ0OjFLvjLYHWjf9i+BsZB3mb8snWa8gzCJQ/bs0OBJ9a0c ... (46 characters truncated) ... rIMH/suIKHuexuweQpMo/ZrE41t+ImxvO7UXoygwqPbeLzVhos9TytmZhGa5fcVz6KN42APzF1w0JADuZ/UVzMjtbMvkbgXNZZ1Afd6AVE0fvjM0EYTwnuz2inmMADM/HRkxgGip6FPb0HTjoFQ==', 'issuer_tax_id__0': None, 'receiver_fiscal_address__0': '23300', 'validation_errors__0': None, 'fiscal_folio__0': '026E4ACE-A7AB-4379-8BC2-BD4939AC1F3C', 'currency__0': 'MXN', 'uuid__0': '026E4ACE-A7AB-4379-8BC2-BD4939AC1F3C', 'total_amount__0': 925.0, 'processing_time__0': 2.403921127319336, 'total_transferred_taxes__0': 127.59, 'export_operation__0': None, 'certificate__0': None, 'folio__0': '243526', 'confirmation__0': None, 'expedition_place__0': None, 'receiver_rfc__0': 'YUGY******FK4', 'custom_fields__0': None, 'receiver_use_cfdi__0': None, 'certificate_number__0': '00001000000711166616', 'payment_conditions__0': None, 'payment_method__0': '28', 'id__0': 1, 'payment_method_desc__0': None, 'total_discount__0': 0.0, 'sat_seal__0': 'dpGtq6gnf2EyX42XdczK4/VVR4YlvvotVm6RWpfpnaf1paOXH11NQaD0lqqj5rifZvL6VYsQUt8DGIW36Qp5CE9kDzWA/74DZHc5IC5H//K024cI7NUT9py6og9SHd/gC1HD21PFshLd9BCm3Hm5E ... (46 characters truncated) ... e3HRrbThlzJ9ft+N+bfusQNe41YvaL1RYCB05NlHKp6xgjMHwzJZG+VW4tqVB9ttCoJcdlxoXmT0/e9S67bL+6J4V3kXGWgcBgONCZ5iyshgeJ9LFRRg9idU44JNGW5NfmIzJww791PHfp3JQog==', 'processing_status__0': 'processed', 'sat_certificate__0': None, 'issuer_residence__0': None, 'exchange_rate__0': 1.0, 'series__0': 'PSC', 'stamp_datetime__0': datetime.datetime(2025, 6, 17, 23, 26, 55, 441457) ... 6300 parameters truncated ... 'invoice_type__127': 'I', 'receiver_residence__127': None, 'source_filename__127': 'db7ca908-83b2-49ab-8c86-649a9b9ba470.xml', 'xml_file_size__127': 8526, 'issuer_name__127': 'CPS LICORES', 'issuer_fiscal_regime__127': '601', 'total_withheld_taxes__127': 0, 'receiver_tax_id__127': None, 'confidence_score__127': 0.9500000000000001, 'created_at__127': datetime.datetime(2025, 7, 11, 23, 39, 50, 862856), 'issuer_use_cfdi__127': None, 'issuer_rfc__127': 'CLI******UP6', 'certification_date__127': None, 'issue_date__127': datetime.datetime(2025, 7, 1, 0, 0), 'updated_at__127': datetime.datetime(2025, 7, 11, 23, 39, 50, 862856), 'version__127': '4.0', 'receiver_name__127': 'YASSER YUSSIF GONZALEZ', 'payment_terms__127': 'PPD', 'subtotal__127': 4992.66, 'digital_stamp__127': 'TdQS3OOBBWc+TaSpD2+vonUqhQPZL6AwVFaHtKbqAW9ugTqU7D0/PipeRkSStVwa1/cwVKy1BtJUMWXUY/bWiQSMNIKnL0tMfft8yxGwztvTwVOng6iNLguj8FiareCL/7yyHYFykvlz+9r/m3BQ2 ... (46 characters truncated) ... 7tK5cu0rAtNzzwQjDCRWwi/arQqPreNrvhXBCvkE1RvmSMnL3k/aldPuvue4yMqfu1Zahlynr/RNp/eF96aDhuw4na+NarSVKETAfbyTDD/ZvZmjr9eDknEKel1grKGwJicaW3fOd2QSVOOmcHA==', 'issuer_tax_id__127': None, 'receiver_fiscal_address__127': '23300', 'validation_errors__127': None, 'fiscal_folio__127': 'db7ca908-83b2-49ab-8c86-649a9b9ba470', 'currency__127': 'MXN', 'uuid__127': 'db7ca908-83b2-49ab-8c86-649a9b9ba470', 'total_amount__127': 8734.61, 'processing_time__127': 10.45948600769043, 'total_transferred_taxes__127': 3741.95, 'export_operation__127': None, 'certificate__127': None, 'folio__127': 'CAB-INV-000013', 'confirmation__127': None, 'expedition_place__127': None, 'receiver_rfc__127': 'YUGY******FK4', 'custom_fields__127': None, 'receiver_use_cfdi__127': None, 'certificate_number__127': '00001000000704586310', 'payment_conditions__127': None, 'payment_method__127': '99', 'id__127': 128, 'payment_method_desc__127': None, 'total_discount__127': 0.0, 'sat_seal__127': 'WWhOG5XAAmLILE2IZdEagtsBy9eWU064xskv+Nuj0vNGU09Pe5gGF/CH6bH8PaKeUa+EO092XkmEGFNtQrm+tHEF7hTfx1QcE0oduC8eNSQYYOf5d1h6C1DEk05AsyWzM2fjXkzmqWYzU0iZaDNKm ... (46 characters truncated) ... sOD7QxAU58/nhsQoCQyloZ+BT6Nk4UaJd8oyscqafs/tirtIwTmozntJRp6uptfBpakm/6VuO+8xJUREDfwGkD9K7r/q5aTYTBIS05miD9pyrwG0VeZ+qq2RtAcrcuaQcZTIuKkwz4gxJGWRvWA==', 'processing_status__127': 'processed', 'sat_certificate__127': None, 'issuer_residence__127': None, 'exchange_rate__127': 1.0, 'series__127': 'Los Cabos', 'stamp_datetime__127': datetime.datetime(2025, 7, 1, 15, 52, 1)}
2025-07-14 14:33:57,525 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-14 14:33:57,779 - __main__ - INFO - File: migrate_data.py - File: migrate_data.py - File: migrate_data.py - Successfully migrated 128 rows for table 'invoices'.
2025-07-14 14:33:57,780 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-14 14:33:57,780 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT COUNT(*) FROM approved_skus
2025-07-14 14:33:57,781 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00112s] ()
2025-07-14 14:33:57,782 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - ROLLBACK
2025-07-14 14:33:57,782 - __main__ - INFO - File: migrate_data.py - File: migrate_data.py - File: migrate_data.py - Reading 339 rows from SQLite table 'approved_skus'...
2025-07-14 14:33:57,783 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-14 14:33:57,783 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.table_info("approved_skus")
2025-07-14 14:33:57,785 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:57,786 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT name FROM sqlite_master WHERE type='table' AND name NOT LIKE 'sqlite~_%' ESCAPE '~' ORDER BY name
2025-07-14 14:33:57,786 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:57,787 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT name FROM sqlite_master WHERE type='view' AND name NOT LIKE 'sqlite~_%' ESCAPE '~' ORDER BY name
2025-07-14 14:33:57,787 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:57,788 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.table_xinfo("approved_skus")
2025-07-14 14:33:57,789 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:57,790 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT sql FROM  (SELECT * FROM sqlite_master UNION ALL   SELECT * FROM sqlite_temp_master) WHERE name = ? AND type in ('table', 'view')
2025-07-14 14:33:57,791 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ('approved_skus',)
2025-07-14 14:33:57,792 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.foreign_key_list("approved_skus")
2025-07-14 14:33:57,793 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:57,794 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA temp.foreign_key_list("approved_skus")
2025-07-14 14:33:57,794 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:57,796 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT sql FROM  (SELECT * FROM sqlite_master UNION ALL   SELECT * FROM sqlite_temp_master) WHERE name = ? AND type in ('table', 'view')
2025-07-14 14:33:57,796 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ('approved_skus',)
2025-07-14 14:33:57,796 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_list("approved_skus")
2025-07-14 14:33:57,800 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:57,803 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_sku_review_status")
2025-07-14 14:33:57,805 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:57,806 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_sku_usage")
2025-07-14 14:33:57,807 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:57,809 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_sku_product_code")
2025-07-14 14:33:57,810 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:57,812 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_approved_skus_product_code")
2025-07-14 14:33:57,812 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:57,813 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_approved_skus_sku_key")
2025-07-14 14:33:57,818 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:57,820 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_sku_category")
2025-07-14 14:33:57,820 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:57,821 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_list("approved_skus")
2025-07-14 14:33:57,823 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:57,824 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_sku_review_status")
2025-07-14 14:33:57,824 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:57,826 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_sku_usage")
2025-07-14 14:33:57,827 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:57,828 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_sku_product_code")
2025-07-14 14:33:57,829 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:57,830 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_approved_skus_product_code")
2025-07-14 14:33:57,830 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:57,836 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_approved_skus_sku_key")
2025-07-14 14:33:57,837 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:57,839 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_sku_category")
2025-07-14 14:33:57,840 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:57,843 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT sql FROM  (SELECT * FROM sqlite_master UNION ALL   SELECT * FROM sqlite_temp_master) WHERE name = ? AND type in ('table', 'view')
2025-07-14 14:33:57,844 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ('approved_skus',)
2025-07-14 14:33:57,852 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT approved_skus.id, approved_skus.sku_key, approved_skus.product_code, approved_skus.internal_code, approved_skus.normalized_description, approved_skus.category, approved_skus.subcategory, approved_skus.sub_sub_category, approved_skus.standardized_unit, approved_skus.correct_unit_code, approved_skus.units_per_package, approved_skus.package_type, approved_skus.conversion_notes, approved_skus.typical_quantity_range, approved_skus.approved_by, approved_skus.approval_date, approved_skus.confidence_score, approved_skus.usage_count, approved_skus.last_used, approved_skus.review_status, approved_skus.review_notes, approved_skus.created_at, approved_skus.updated_at 
FROM approved_skus
2025-07-14 14:33:57,853 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00229s] ()
2025-07-14 14:33:57,879 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-14 14:33:57,879 - __main__ - INFO - File: migrate_data.py - File: migrate_data.py - File: migrate_data.py - Writing 339 rows to PostgreSQL table 'approved_skus'...
2025-07-14 14:33:57,879 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-14 14:33:57,889 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-07-14 14:33:57,891 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 2.049s ago] {'table_name': 'approved_skus', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-07-14 14:33:58,408 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - 
CREATE TABLE approved_skus (
	id BIGINT, 
	sku_key TEXT, 
	product_code TEXT, 
	internal_code TEXT, 
	normalized_description TEXT, 
	category TEXT, 
	subcategory TEXT, 
	sub_sub_category TEXT, 
	standardized_unit TEXT, 
	correct_unit_code TEXT, 
	units_per_package FLOAT(53), 
	package_type TEXT, 
	conversion_notes TEXT, 
	typical_quantity_range TEXT, 
	approved_by TEXT, 
	approval_date TIMESTAMP WITHOUT TIME ZONE, 
	confidence_score FLOAT(53), 
	usage_count BIGINT, 
	last_used TIMESTAMP WITHOUT TIME ZONE, 
	review_status TEXT, 
	review_notes TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE
)


2025-07-14 14:33:58,408 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [no key 0.00404s] {}
2025-07-14 14:33:58,712 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO approved_skus (id, sku_key, product_code, internal_code, normalized_description, category, subcategory, sub_sub_category, standardized_unit, correct_unit_code, units_per_package, package_type, conversion_notes, typical_quantity_range, app ... 184623 characters truncated ... sed__338)s, %(review_status__338)s, %(review_notes__338)s, %(created_at__338)s, %(updated_at__338)s)
2025-07-14 14:33:58,712 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.01202s (insertmanyvalues) 1/1 (unordered)] {'approved_by__0': 'excel_import', 'review_status__0': 'approved', 'sub_sub_category__0': 'Aceite vegetal', 'category__0': 'Abarrotes', 'standardized_unit__0': 'Litros', 'confidence_score__0': 1.0, 'last_used__0': datetime.datetime(2025, 7, 11, 23, 39, 7, 84700), 'typical_quantity_range__0': None, 'created_at__0': datetime.datetime(2025, 6, 18, 2, 19, 43, 27913), 'updated_at__0': datetime.datetime(2025, 6, 18, 2, 19, 43, 27913), 'sku_key__0': 'sku_1789b909_50151500_aceite_puro_de_palma_palmina_20lt', 'normalized_description__0': 'ACEITE PURO DE PALMA PALMINA 20LT', 'subcategory__0': 'Aceite', 'correct_unit_code__0': None, 'conversion_notes__0': None, 'approval_date__0': datetime.datetime(2025, 6, 18, 2, 19, 43, 11787), 'usage_count__0': 5, 'product_code__0': None, 'units_per_package__0': 20.0, 'id__0': 1, 'package_type__0': None, 'internal_code__0': None, 'review_notes__0': None, 'approved_by__1': 'excel_import', 'review_status__1': 'approved', 'sub_sub_category__1': 'Aceite de oliva', 'category__1': 'Abarrotes', 'standardized_unit__1': 'Litros', 'confidence_score__1': 1.0, 'last_used__1': datetime.datetime(2025, 7, 11, 23, 39, 7, 48642), 'typical_quantity_range__1': None, 'created_at__1': datetime.datetime(2025, 6, 18, 2, 19, 43, 190021), 'updated_at__1': datetime.datetime(2025, 6, 18, 2, 19, 43, 190021), 'sku_key__1': 'sku_8d0019cc_50151513_aceite_oliva_pomace_genco_plast_378_lt', 'normalized_description__1': 'ACEITE OLIVA POMACE GENCO PLAST 3.78 LT', 'subcategory__1': 'Aceite', 'correct_unit_code__1': None, 'conversion_notes__1': None, 'approval_date__1': datetime.datetime(2025, 6, 18, 2, 19, 43, 137293), 'usage_count__1': 4, 'product_code__1': None, 'units_per_package__1': 3.78, 'id__1': 2, 'package_type__1': None, 'internal_code__1': None, 'review_notes__1': None, 'approved_by__2': 'excel_import', 'review_status__2': 'approved', 'sub_sub_category__2': 'Aceite vegetal', 'category__2': 'Abarrotes' ... 7697 parameters truncated ... 'id__336': 337, 'package_type__336': None, 'internal_code__336': None, 'review_notes__336': None, 'approved_by__337': 'excel_import', 'review_status__337': 'approved', 'sub_sub_category__337': 'Limpiador multiuso', 'category__337': 'Suministros', 'standardized_unit__337': 'Litros', 'confidence_score__337': 1.0, 'last_used__337': None, 'typical_quantity_range__337': None, 'created_at__337': datetime.datetime(2025, 7, 12, 20, 48, 54, 526132), 'updated_at__337': datetime.datetime(2025, 7, 12, 20, 48, 54, 526132), 'sku_key__337': 'sku_5fdb5cfc_47131821_desengrasante_liquido', 'normalized_description__337': 'DESENGRASANTE LIQUIDO', 'subcategory__337': 'Detergente', 'correct_unit_code__337': None, 'conversion_notes__337': None, 'approval_date__337': datetime.datetime(2025, 7, 12, 20, 48, 54, 517964), 'usage_count__337': 0, 'product_code__337': None, 'units_per_package__337': 1.0, 'id__337': 338, 'package_type__337': None, 'internal_code__337': None, 'review_notes__337': None, 'approved_by__338': 'excel_import', 'review_status__338': 'approved', 'sub_sub_category__338': 'Esponjas y Fibras para Lavar', 'category__338': 'Suministros', 'standardized_unit__338': 'Piezas', 'confidence_score__338': 1.0, 'last_used__338': None, 'typical_quantity_range__338': None, 'created_at__338': datetime.datetime(2025, 7, 12, 20, 48, 54, 554956), 'updated_at__338': datetime.datetime(2025, 7, 12, 20, 48, 54, 554956), 'sku_key__338': 'sku_8d7ae4ed_52152200_fibra_alambre', 'normalized_description__338': 'FIBRA ALAMBRE', 'subcategory__338': 'Jabón', 'correct_unit_code__338': None, 'conversion_notes__338': None, 'approval_date__338': datetime.datetime(2025, 7, 12, 20, 48, 54, 548812), 'usage_count__338': 0, 'product_code__338': None, 'units_per_package__338': 1.0, 'id__338': 339, 'package_type__338': None, 'internal_code__338': None, 'review_notes__338': None}
2025-07-14 14:33:59,356 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-14 14:33:59,616 - __main__ - INFO - File: migrate_data.py - File: migrate_data.py - File: migrate_data.py - Successfully migrated 339 rows for table 'approved_skus'.
2025-07-14 14:33:59,616 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-14 14:33:59,616 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT COUNT(*) FROM invoice_items
2025-07-14 14:33:59,622 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00323s] ()
2025-07-14 14:33:59,624 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - ROLLBACK
2025-07-14 14:33:59,626 - __main__ - INFO - File: migrate_data.py - File: migrate_data.py - File: migrate_data.py - Reading 1112 rows from SQLite table 'invoice_items'...
2025-07-14 14:33:59,627 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-14 14:33:59,628 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.table_info("invoice_items")
2025-07-14 14:33:59,629 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,631 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT name FROM sqlite_master WHERE type='table' AND name NOT LIKE 'sqlite~_%' ESCAPE '~' ORDER BY name
2025-07-14 14:33:59,632 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,637 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT name FROM sqlite_master WHERE type='view' AND name NOT LIKE 'sqlite~_%' ESCAPE '~' ORDER BY name
2025-07-14 14:33:59,638 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,640 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.table_xinfo("invoice_items")
2025-07-14 14:33:59,642 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,643 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT sql FROM  (SELECT * FROM sqlite_master UNION ALL   SELECT * FROM sqlite_temp_master) WHERE name = ? AND type in ('table', 'view')
2025-07-14 14:33:59,645 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ('invoice_items',)
2025-07-14 14:33:59,647 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.foreign_key_list("invoice_items")
2025-07-14 14:33:59,648 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,650 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT sql FROM  (SELECT * FROM sqlite_master UNION ALL   SELECT * FROM sqlite_temp_master) WHERE name = ? AND type in ('table', 'view')
2025-07-14 14:33:59,652 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ('invoice_items',)
2025-07-14 14:33:59,653 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_list("invoice_items")
2025-07-14 14:33:59,654 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,656 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoice_items_product_code")
2025-07-14 14:33:59,657 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,659 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_item_invoice_line")
2025-07-14 14:33:59,660 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,661 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoice_items_description")
2025-07-14 14:33:59,662 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,666 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoice_items_sku_key")
2025-07-14 14:33:59,667 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,668 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_item_product_code")
2025-07-14 14:33:59,669 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,670 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_item_approval_status")
2025-07-14 14:33:59,670 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,670 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_item_sku_key")
2025-07-14 14:33:59,672 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,673 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_item_category")
2025-07-14 14:33:59,675 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,677 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoice_items_category")
2025-07-14 14:33:59,677 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,679 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_list("invoice_items")
2025-07-14 14:33:59,683 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,683 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoice_items_product_code")
2025-07-14 14:33:59,685 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,686 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_item_invoice_line")
2025-07-14 14:33:59,687 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,687 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoice_items_description")
2025-07-14 14:33:59,687 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,689 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoice_items_sku_key")
2025-07-14 14:33:59,690 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,692 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_item_product_code")
2025-07-14 14:33:59,693 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,695 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_item_approval_status")
2025-07-14 14:33:59,695 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,695 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_item_sku_key")
2025-07-14 14:33:59,695 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,695 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_item_category")
2025-07-14 14:33:59,695 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,704 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoice_items_category")
2025-07-14 14:33:59,704 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,706 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT sql FROM  (SELECT * FROM sqlite_master UNION ALL   SELECT * FROM sqlite_temp_master) WHERE name = ? AND type in ('table', 'view')
2025-07-14 14:33:59,708 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ('invoice_items',)
2025-07-14 14:33:59,712 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.table_xinfo("invoices")
2025-07-14 14:33:59,716 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,718 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT sql FROM  (SELECT * FROM sqlite_master UNION ALL   SELECT * FROM sqlite_temp_master) WHERE name = ? AND type in ('table', 'view')
2025-07-14 14:33:59,718 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ('invoices',)
2025-07-14 14:33:59,719 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.foreign_key_list("invoices")
2025-07-14 14:33:59,720 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,720 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA temp.foreign_key_list("invoices")
2025-07-14 14:33:59,721 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,722 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT sql FROM  (SELECT * FROM sqlite_master UNION ALL   SELECT * FROM sqlite_temp_master) WHERE name = ? AND type in ('table', 'view')
2025-07-14 14:33:59,723 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ('invoices',)
2025-07-14 14:33:59,726 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_list("invoices")
2025-07-14 14:33:59,727 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,728 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoices_issue_date")
2025-07-14 14:33:59,730 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,732 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoices_uuid")
2025-07-14 14:33:59,734 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,734 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_invoice_type_date")
2025-07-14 14:33:59,736 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,736 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_invoice_receiver_date")
2025-07-14 14:33:59,737 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,738 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_invoice_status")
2025-07-14 14:33:59,739 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,742 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_invoice_issuer_date")
2025-07-14 14:33:59,742 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,744 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoices_folio")
2025-07-14 14:33:59,745 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,748 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoices_receiver_rfc")
2025-07-14 14:33:59,750 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,751 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_invoice_amount_date")
2025-07-14 14:33:59,751 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,752 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoices_issuer_rfc")
2025-07-14 14:33:59,753 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,753 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_list("invoices")
2025-07-14 14:33:59,754 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,756 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoices_issue_date")
2025-07-14 14:33:59,757 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,759 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoices_uuid")
2025-07-14 14:33:59,760 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,760 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_invoice_type_date")
2025-07-14 14:33:59,760 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,767 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_invoice_receiver_date")
2025-07-14 14:33:59,767 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,767 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_invoice_status")
2025-07-14 14:33:59,767 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,767 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_invoice_issuer_date")
2025-07-14 14:33:59,767 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,767 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoices_folio")
2025-07-14 14:33:59,772 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,772 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoices_receiver_rfc")
2025-07-14 14:33:59,775 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,776 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("idx_invoice_amount_date")
2025-07-14 14:33:59,777 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,778 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - PRAGMA main.index_info("ix_invoices_issuer_rfc")
2025-07-14 14:33:59,781 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ()
2025-07-14 14:33:59,783 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT sql FROM  (SELECT * FROM sqlite_master UNION ALL   SELECT * FROM sqlite_temp_master) WHERE name = ? AND type in ('table', 'view')
2025-07-14 14:33:59,784 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [raw sql] ('invoices',)
2025-07-14 14:33:59,792 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT invoice_items.id, invoice_items.invoice_id, invoice_items.line_number, invoice_items.product_code, invoice_items.internal_code, invoice_items.description, invoice_items.quantity, invoice_items.unit_code, invoice_items.unit_description, invoice_items.units_per_package, invoice_items.package_description, invoice_items.unit_price, invoice_items.subtotal, invoice_items.discount, invoice_items.transferred_taxes, invoice_items.withheld_taxes, invoice_items.total_tax_amount, invoice_items.total_amount, invoice_items.category, invoice_items.subcategory, invoice_items.sub_sub_category, invoice_items.standardized_unit, invoice_items.standardized_quantity, invoice_items.conversion_factor, invoice_items.category_confidence, invoice_items.classification_source, invoice_items.approval_status, invoice_items.sku_key, invoice_items.classification_timestamp, invoice_items.custom_fields, invoice_items.created_at, invoice_items.updated_at 
FROM invoice_items
2025-07-14 14:33:59,794 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.00133s] ()
2025-07-14 14:33:59,845 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-14 14:33:59,849 - __main__ - INFO - File: migrate_data.py - File: migrate_data.py - File: migrate_data.py - Writing 1112 rows to PostgreSQL table 'invoice_items'...
2025-07-14 14:33:59,849 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - BEGIN (implicit)
2025-07-14 14:33:59,854 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-07-14 14:33:59,855 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [cached since 4.013s ago] {'table_name': 'invoice_items', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-07-14 14:34:00,370 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - 
CREATE TABLE invoice_items (
	id BIGINT, 
	invoice_id BIGINT, 
	line_number BIGINT, 
	product_code TEXT, 
	internal_code TEXT, 
	description TEXT, 
	quantity FLOAT(53), 
	unit_code TEXT, 
	unit_description TEXT, 
	units_per_package FLOAT(53), 
	package_description TEXT, 
	unit_price FLOAT(53), 
	subtotal FLOAT(53), 
	discount FLOAT(53), 
	transferred_taxes TEXT, 
	withheld_taxes TEXT, 
	total_tax_amount BIGINT, 
	total_amount FLOAT(53), 
	category TEXT, 
	subcategory TEXT, 
	sub_sub_category TEXT, 
	standardized_unit TEXT, 
	standardized_quantity FLOAT(53), 
	conversion_factor FLOAT(53), 
	category_confidence FLOAT(53), 
	classification_source TEXT, 
	approval_status TEXT, 
	sku_key TEXT, 
	classification_timestamp TIMESTAMP WITHOUT TIME ZONE, 
	custom_fields TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE
)


2025-07-14 14:34:00,370 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [no key 0.00469s] {}
2025-07-14 14:34:00,722 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - INSERT INTO invoice_items (id, invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, transferred_taxes, withheld_taxes, total_ ... 772648 characters truncated ... %(classification_timestamp__999)s, %(custom_fields__999)s, %(created_at__999)s, %(updated_at__999)s)
2025-07-14 14:34:00,722 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - [generated in 0.02495s (insertmanyvalues) 1/1 (unordered)] {'package_description__0': 'Saco', 'quantity__0': 5.0, 'sub_sub_category__0': 'Mantenimiento y conservación Oficina', 'category__0': 'Gastos Generales', 'standardized_unit__0': 'Kilogramos', 'conversion_factor__0': 25.0, 'created_at__0': datetime.datetime(2025, 6, 17, 23, 26, 55, 484636), 'standardized_quantity__0': 125.0, 'updated_at__0': datetime.datetime(2025, 6, 17, 23, 26, 55, 484636), 'subtotal__0': 797.41, 'sku_key__0': 'sku_7e77527c_30111601_cemento_gris_holcim_25kg', 'unit_description__0': None, 'withheld_taxes__0': None, 'subcategory__0': 'Mantenimiento y conservación Oficina', 'line_number__0': 1, 'total_amount__0': 925.0, 'unit_price__0': 159.482, 'invoice_id__0': 1, 'description__0': 'CEMENTO GRIS HOLCIM 25KG', 'unit_code__0': 'H87', 'classification_source__0': 'gemini_api', 'classification_timestamp__0': datetime.datetime(2025, 6, 17, 23, 26, 55, 484636), 'custom_fields__0': {'processing_time': 2.403921127319336, 'api_attempt': 1, 'reasoning': "Cement is a construction material, so it falls under 'Suministros'. Since it's  ... (19 characters truncated) ... hen supply, it's classified as 'Otros' within 'Suministros Cocina'. The description indicates a 25kg bag, so units_per_package is 25.", 'error': None}, 'product_code__0': '30111601', 'total_tax_amount__0': 0, 'units_per_package__0': 25.0, 'discount__0': 0.0, 'id__0': 1, 'approval_status__0': 'approved', 'internal_code__0': None, 'transferred_taxes__0': None, 'category_confidence__0': 0.95, 'package_description__1': None, 'quantity__1': 0.46, 'sub_sub_category__1': 'Col', 'category__1': 'Vegetales', 'standardized_unit__1': 'Kilogramos', 'conversion_factor__1': 1.0, 'created_at__1': datetime.datetime(2025, 6, 17, 23, 27, 9, 841983), 'standardized_quantity__1': 0.46, 'updated_at__1': datetime.datetime(2025, 6, 17, 23, 27, 9, 841983), 'subtotal__1': 184.0, 'sku_key__1': 'sku_14c77eea_50414500_kale', 'unit_description__1': None, 'withheld_taxes__1': None, 'subcategory__1': 'Verduras', 'line_number__1': 1, 'total_amount__1': 184.0, 'unit_price__1': 400.0, 'invoice_id__1': 2 ... 31900 parameters truncated ... 'line_number__998': 11, 'total_amount__998': 120.0, 'unit_price__998': 240.0, 'invoice_id__998': 115, 'description__998': 'SHALLOT', 'unit_code__998': 'KGM', 'classification_source__998': 'approved_sku', 'classification_timestamp__998': datetime.datetime(2025, 7, 11, 23, 38, 46, 301985), 'custom_fields__998': {'processing_time': 0.0, 'api_attempt': None, 'reasoning': None, 'error': None}, 'product_code__998': '50403800', 'total_tax_amount__998': 0, 'units_per_package__998': 1.0, 'discount__998': 0.0, 'id__998': 999, 'approval_status__998': 'approved', 'internal_code__998': None, 'transferred_taxes__998': None, 'category_confidence__998': 1.0, 'package_description__999': None, 'quantity__999': 1.0, 'sub_sub_category__999': 'Lechuga Mixta', 'category__999': 'Vegetales', 'standardized_unit__999': 'Kilogramos', 'conversion_factor__999': 0.454, 'created_at__999': datetime.datetime(2025, 7, 11, 23, 38, 46, 301985), 'standardized_quantity__999': 1.0, 'updated_at__999': datetime.datetime(2025, 7, 11, 23, 38, 46, 301985), 'subtotal__999': 130.0, 'sku_key__999': 'sku_f6ce5c99_50404600_lechuga_mixta', 'unit_description__999': None, 'withheld_taxes__999': None, 'subcategory__999': 'Verduras', 'line_number__999': 12, 'total_amount__999': 130.0, 'unit_price__999': 130.0, 'invoice_id__999': 115, 'description__999': 'LECHUGA MIXTA', 'unit_code__999': 'H87', 'classification_source__999': 'gemini_api', 'classification_timestamp__999': datetime.datetime(2025, 7, 11, 23, 38, 46, 301985), 'custom_fields__999': {'processing_time': 1.4898877143859863, 'api_attempt': 1, 'reasoning': "The item is 'LECHUGA MIXTA' which is 'Lechuga Mixta' in the Vegetables > Verdu ... (23 characters truncated) ... s a vegetable, the standardized unit is Kilogramos. The quantity is 1 and there is no package information, so units_per_package is 1.", 'error': None}, 'product_code__999': '50404600', 'total_tax_amount__999': 0, 'units_per_package__999': 0.454, 'discount__999': 0.0, 'id__999': 1000, 'approval_status__999': 'approved', 'internal_code__999': None, 'transferred_taxes__999': None, 'category_confidence__999': 0.95}
2025-07-14 14:34:00,744 - sqlalchemy.engine.Engine - INFO - File: base.py - File: base.py - File: base.py - COMMIT
2025-07-14 14:34:01,005 - __main__ - ERROR - File: migrate_data.py - File: migrate_data.py - File: migrate_data.py - FAILED to migrate table 'invoice_items': (psycopg2.ProgrammingError) can't adapt type 'dict'
[SQL: INSERT INTO invoice_items (id, invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, transferred_taxes, withheld_taxes, total_ ... 772648 characters truncated ... %(classification_timestamp__999)s, %(custom_fields__999)s, %(created_at__999)s, %(updated_at__999)s)]
[parameters: {'package_description__0': 'Saco', 'quantity__0': 5.0, 'sub_sub_category__0': 'Mantenimiento y conservación Oficina', 'category__0': 'Gastos Generales', 'standardized_unit__0': 'Kilogramos', 'conversion_factor__0': 25.0, 'created_at__0': datetime.datetime(2025, 6, 17, 23, 26, 55, 484636), 'standardized_quantity__0': 125.0, 'updated_at__0': datetime.datetime(2025, 6, 17, 23, 26, 55, 484636), 'subtotal__0': 797.41, 'sku_key__0': 'sku_7e77527c_30111601_cemento_gris_holcim_25kg', 'unit_description__0': None, 'withheld_taxes__0': None, 'subcategory__0': 'Mantenimiento y conservación Oficina', 'line_number__0': 1, 'total_amount__0': 925.0, 'unit_price__0': 159.482, 'invoice_id__0': 1, 'description__0': 'CEMENTO GRIS HOLCIM 25KG', 'unit_code__0': 'H87', 'classification_source__0': 'gemini_api', 'classification_timestamp__0': datetime.datetime(2025, 6, 17, 23, 26, 55, 484636), 'custom_fields__0': {'processing_time': 2.403921127319336, 'api_attempt': 1, 'reasoning': "Cement is a construction material, so it falls under 'Suministros'. Since it's  ... (19 characters truncated) ... hen supply, it's classified as 'Otros' within 'Suministros Cocina'. The description indicates a 25kg bag, so units_per_package is 25.", 'error': None}, 'product_code__0': '30111601', 'total_tax_amount__0': 0, 'units_per_package__0': 25.0, 'discount__0': 0.0, 'id__0': 1, 'approval_status__0': 'approved', 'internal_code__0': None, 'transferred_taxes__0': None, 'category_confidence__0': 0.95, 'package_description__1': None, 'quantity__1': 0.46, 'sub_sub_category__1': 'Col', 'category__1': 'Vegetales', 'standardized_unit__1': 'Kilogramos', 'conversion_factor__1': 1.0, 'created_at__1': datetime.datetime(2025, 6, 17, 23, 27, 9, 841983), 'standardized_quantity__1': 0.46, 'updated_at__1': datetime.datetime(2025, 6, 17, 23, 27, 9, 841983), 'subtotal__1': 184.0, 'sku_key__1': 'sku_14c77eea_50414500_kale', 'unit_description__1': None, 'withheld_taxes__1': None, 'subcategory__1': 'Verduras', 'line_number__1': 1, 'total_amount__1': 184.0, 'unit_price__1': 400.0, 'invoice_id__1': 2 ... 31900 parameters truncated ... 'line_number__998': 11, 'total_amount__998': 120.0, 'unit_price__998': 240.0, 'invoice_id__998': 115, 'description__998': 'SHALLOT', 'unit_code__998': 'KGM', 'classification_source__998': 'approved_sku', 'classification_timestamp__998': datetime.datetime(2025, 7, 11, 23, 38, 46, 301985), 'custom_fields__998': {'processing_time': 0.0, 'api_attempt': None, 'reasoning': None, 'error': None}, 'product_code__998': '50403800', 'total_tax_amount__998': 0, 'units_per_package__998': 1.0, 'discount__998': 0.0, 'id__998': 999, 'approval_status__998': 'approved', 'internal_code__998': None, 'transferred_taxes__998': None, 'category_confidence__998': 1.0, 'package_description__999': None, 'quantity__999': 1.0, 'sub_sub_category__999': 'Lechuga Mixta', 'category__999': 'Vegetales', 'standardized_unit__999': 'Kilogramos', 'conversion_factor__999': 0.454, 'created_at__999': datetime.datetime(2025, 7, 11, 23, 38, 46, 301985), 'standardized_quantity__999': 1.0, 'updated_at__999': datetime.datetime(2025, 7, 11, 23, 38, 46, 301985), 'subtotal__999': 130.0, 'sku_key__999': 'sku_f6ce5c99_50404600_lechuga_mixta', 'unit_description__999': None, 'withheld_taxes__999': None, 'subcategory__999': 'Verduras', 'line_number__999': 12, 'total_amount__999': 130.0, 'unit_price__999': 130.0, 'invoice_id__999': 115, 'description__999': 'LECHUGA MIXTA', 'unit_code__999': 'H87', 'classification_source__999': 'gemini_api', 'classification_timestamp__999': datetime.datetime(2025, 7, 11, 23, 38, 46, 301985), 'custom_fields__999': {'processing_time': 1.4898877143859863, 'api_attempt': 1, 'reasoning': "The item is 'LECHUGA MIXTA' which is 'Lechuga Mixta' in the Vegetables > Verdu ... (23 characters truncated) ... s a vegetable, the standardized unit is Kilogramos. The quantity is 1 and there is no package information, so units_per_package is 1.", 'error': None}, 'product_code__999': '50404600', 'total_tax_amount__999': 0, 'units_per_package__999': 0.454, 'discount__999': 0.0, 'id__999': 1000, 'approval_status__999': 'approved', 'internal_code__999': None, 'transferred_taxes__999': None, 'category_confidence__999': 0.95}]
(Background on this error at: https://sqlalche.me/e/20/f405)
Traceback (most recent call last):
  File "C:\Users\Lenovo.DESKTOP-IFK4702\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\engine\base.py", line 2112, in _exec_insertmany_context
    dialect.do_execute(
  File "C:\Users\Lenovo.DESKTOP-IFK4702\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
psycopg2.ProgrammingError: can't adapt type 'dict'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Lenovo.DESKTOP-IFK4702\Desktop\02. PROGRAMACION\01. TRAINING EXCERSISES\01. Proyecto Costeo Facturas_v3\scripts\migrate_data.py", line 120, in migrate_data
    df.to_sql(
  File "C:\Users\Lenovo.DESKTOP-IFK4702\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\pandas\util\_decorators.py", line 333, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Lenovo.DESKTOP-IFK4702\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\pandas\core\generic.py", line 3084, in to_sql
    return sql.to_sql(
           ^^^^^^^^^^^
  File "C:\Users\Lenovo.DESKTOP-IFK4702\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\pandas\io\sql.py", line 842, in to_sql
    return pandas_sql.to_sql(
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Lenovo.DESKTOP-IFK4702\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\pandas\io\sql.py", line 2018, in to_sql
    total_inserted = sql_engine.insert_records(
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Lenovo.DESKTOP-IFK4702\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\pandas\io\sql.py", line 1567, in insert_records
    raise err
  File "C:\Users\Lenovo.DESKTOP-IFK4702\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\pandas\io\sql.py", line 1558, in insert_records
    return table.insert(chunksize=chunksize, method=method)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Lenovo.DESKTOP-IFK4702\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\pandas\io\sql.py", line 1119, in insert
    num_inserted = exec_insert(conn, keys, chunk_iter)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Lenovo.DESKTOP-IFK4702\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\pandas\io\sql.py", line 1010, in _execute_insert
    result = conn.execute(self.table.insert(), data)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Lenovo.DESKTOP-IFK4702\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
           ^^^^^
  File "C:\Users\Lenovo.DESKTOP-IFK4702\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\sql\elements.py", line 516, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Lenovo.DESKTOP-IFK4702\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\engine\base.py", line 1639, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Lenovo.DESKTOP-IFK4702\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_insertmany_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Lenovo.DESKTOP-IFK4702\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\engine\base.py", line 2120, in _exec_insertmany_context
    self._handle_dbapi_exception(
  File "C:\Users\Lenovo.DESKTOP-IFK4702\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\engine\base.py", line 2343, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Lenovo.DESKTOP-IFK4702\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\engine\base.py", line 2112, in _exec_insertmany_context
    dialect.do_execute(
  File "C:\Users\Lenovo.DESKTOP-IFK4702\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) can't adapt type 'dict'
[SQL: INSERT INTO invoice_items (id, invoice_id, line_number, product_code, internal_code, description, quantity, unit_code, unit_description, units_per_package, package_description, unit_price, subtotal, discount, transferred_taxes, withheld_taxes, total_ ... 772648 characters truncated ... %(classification_timestamp__999)s, %(custom_fields__999)s, %(created_at__999)s, %(updated_at__999)s)]
[parameters: {'package_description__0': 'Saco', 'quantity__0': 5.0, 'sub_sub_category__0': 'Mantenimiento y conservación Oficina', 'category__0': 'Gastos Generales', 'standardized_unit__0': 'Kilogramos', 'conversion_factor__0': 25.0, 'created_at__0': datetime.datetime(2025, 6, 17, 23, 26, 55, 484636), 'standardized_quantity__0': 125.0, 'updated_at__0': datetime.datetime(2025, 6, 17, 23, 26, 55, 484636), 'subtotal__0': 797.41, 'sku_key__0': 'sku_7e77527c_30111601_cemento_gris_holcim_25kg', 'unit_description__0': None, 'withheld_taxes__0': None, 'subcategory__0': 'Mantenimiento y conservación Oficina', 'line_number__0': 1, 'total_amount__0': 925.0, 'unit_price__0': 159.482, 'invoice_id__0': 1, 'description__0': 'CEMENTO GRIS HOLCIM 25KG', 'unit_code__0': 'H87', 'classification_source__0': 'gemini_api', 'classification_timestamp__0': datetime.datetime(2025, 6, 17, 23, 26, 55, 484636), 'custom_fields__0': {'processing_time': 2.403921127319336, 'api_attempt': 1, 'reasoning': "Cement is a construction material, so it falls under 'Suministros'. Since it's  ... (19 characters truncated) ... hen supply, it's classified as 'Otros' within 'Suministros Cocina'. The description indicates a 25kg bag, so units_per_package is 25.", 'error': None}, 'product_code__0': '30111601', 'total_tax_amount__0': 0, 'units_per_package__0': 25.0, 'discount__0': 0.0, 'id__0': 1, 'approval_status__0': 'approved', 'internal_code__0': None, 'transferred_taxes__0': None, 'category_confidence__0': 0.95, 'package_description__1': None, 'quantity__1': 0.46, 'sub_sub_category__1': 'Col', 'category__1': 'Vegetales', 'standardized_unit__1': 'Kilogramos', 'conversion_factor__1': 1.0, 'created_at__1': datetime.datetime(2025, 6, 17, 23, 27, 9, 841983), 'standardized_quantity__1': 0.46, 'updated_at__1': datetime.datetime(2025, 6, 17, 23, 27, 9, 841983), 'subtotal__1': 184.0, 'sku_key__1': 'sku_14c77eea_50414500_kale', 'unit_description__1': None, 'withheld_taxes__1': None, 'subcategory__1': 'Verduras', 'line_number__1': 1, 'total_amount__1': 184.0, 'unit_price__1': 400.0, 'invoice_id__1': 2 ... 31900 parameters truncated ... 'line_number__998': 11, 'total_amount__998': 120.0, 'unit_price__998': 240.0, 'invoice_id__998': 115, 'description__998': 'SHALLOT', 'unit_code__998': 'KGM', 'classification_source__998': 'approved_sku', 'classification_timestamp__998': datetime.datetime(2025, 7, 11, 23, 38, 46, 301985), 'custom_fields__998': {'processing_time': 0.0, 'api_attempt': None, 'reasoning': None, 'error': None}, 'product_code__998': '50403800', 'total_tax_amount__998': 0, 'units_per_package__998': 1.0, 'discount__998': 0.0, 'id__998': 999, 'approval_status__998': 'approved', 'internal_code__998': None, 'transferred_taxes__998': None, 'category_confidence__998': 1.0, 'package_description__999': None, 'quantity__999': 1.0, 'sub_sub_category__999': 'Lechuga Mixta', 'category__999': 'Vegetales', 'standardized_unit__999': 'Kilogramos', 'conversion_factor__999': 0.454, 'created_at__999': datetime.datetime(2025, 7, 11, 23, 38, 46, 301985), 'standardized_quantity__999': 1.0, 'updated_at__999': datetime.datetime(2025, 7, 11, 23, 38, 46, 301985), 'subtotal__999': 130.0, 'sku_key__999': 'sku_f6ce5c99_50404600_lechuga_mixta', 'unit_description__999': None, 'withheld_taxes__999': None, 'subcategory__999': 'Verduras', 'line_number__999': 12, 'total_amount__999': 130.0, 'unit_price__999': 130.0, 'invoice_id__999': 115, 'description__999': 'LECHUGA MIXTA', 'unit_code__999': 'H87', 'classification_source__999': 'gemini_api', 'classification_timestamp__999': datetime.datetime(2025, 7, 11, 23, 38, 46, 301985), 'custom_fields__999': {'processing_time': 1.4898877143859863, 'api_attempt': 1, 'reasoning': "The item is 'LECHUGA MIXTA' which is 'Lechuga Mixta' in the Vegetables > Verdu ... (23 characters truncated) ... s a vegetable, the standardized unit is Kilogramos. The quantity is 1 and there is no package information, so units_per_package is 1.", 'error': None}, 'product_code__999': '50404600', 'total_tax_amount__999': 0, 'units_per_package__999': 0.454, 'discount__999': 0.0, 'id__999': 1000, 'approval_status__999': 'approved', 'internal_code__999': None, 'transferred_taxes__999': None, 'category_confidence__999': 0.95}]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-07-17 18:49:41,449 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Logging configured for environment: dev
2025-07-17 18:49:41,450 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Log level: DEBUG
2025-07-17 18:49:41,450 - src.utils.logging_config - INFO - File: logging_config.py - File: logging_config.py - File: logging_config.py - Log directory: logs
2025-07-17 18:49:41,450 - __main__ - INFO - File: main.py - File: main.py - File: main.py - CFDI Processing System v4 started
2025-07-17 18:49:41,450 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Environment: dev
2025-07-17 18:49:41,450 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Log level: DEBUG
2025-07-17 18:49:41,451 - __main__ - INFO - File: main.py - File: main.py - File: main.py - Creating purchase_details table...
2025-07-17 18:49:41,451 - __main__ - ERROR - File: main.py - File: main.py - File: main.py - Purchase_details table creation failed
